{"version":3,"sources":["Hooks.js","components/AppBar.js","views/ViewContent.js","AppState.js","views/AboutView.js","utils/stableSort.js","utils/tmx.js","components/RankingsTable.js","utils/tools.js","components/RecordsTable.js","utils/srcom.js","components/RecordsTableSrcom.js","components/SimpleTitle.js","components/RecordsChart.js","Api.js","views/GameView.js","views/ReplayView.js","views/NotFoundView.js","App.js","utils/serviceWorker.js","index.js"],"names":["useIsMounted","ref","React","useRef","useEffect","current","useStyles","makeStyles","theme","root","paddingBottom","spacing","list","width","menuButton","marginLeft","marginRight","drawer","flexShrink","appBar","zIndex","flex","active","color","palette","primary","main","pageLinks","title","link","inDrawer","default","withRouter","location","useState","open","setOpen","page","useMemo","find","x","pathname","startsWith","document","host","showDrawer","state","classes","className","List","ListItem","button","key","component","RouterLink","to","ListItemText","Divider","filter","map","item","index","undefined","position","Toolbar","Hidden","lgUp","IconButton","onClick","Typography","variant","Link","underline","implementation","SwipeableDrawer","onClose","onOpen","tabIndex","role","onKeyDown","mdDown","Drawer","ViewContent","children","Grid","container","xs","md","lg","initialState","darkMode","this","enabled","localStorage","getItem","setItem","toString","AppReducer","action","toggle","Error","createContext","aboutBox","padding","branches","repo","branch","noWrap","whiteSpace","MinTableCell","props","TableCell","size","Padding","style","paddingTop","AboutView","isMounted","useContext","AppState","dispatch","gitHub","setGitHub","anyErrors","err","console","error","Promise","all","fetch","then","results","res","json","sha","author","commit","message","date","catch","Paper","length","CircularProgress","progress","overflowX","TableHead","TableRow","TableBody","idx","align","rel","href","Tooltip","moment","from","html_url","login","name","FormGroup","row","FormControlLabel","control","Switch","checked","onChange","label","stableSort","array","order","orderBy","desc","a","b","aa","getPropFast","bb","cmp","el","sort","obj","path","indexOf","split","s","reduce","acc","val","protocol","game","includes","trackUrl","id","imageUrl","replayUrl","userUrl","rows","sortable","id2","RankingsTableHead","onRequestSort","sortDirection","placement","enterDelay","TableSortLabel","direction","prop1","prop2","event","_","defaultState","thenBy","rowsPerPage","minifiedStyle","RecordsTable","data","setState","newOrderBy","newThenBy","stableSortSort","slice","user","tmx","target","wrs","duration","formatScore","score","type","csec","tsec","Math","floor","sec","min","msec","hourScale","scaleLinear","domain","range","getDateDifferenceColor","passedHours","diff","RecordsTableHead","property","stats","useLiveDuration","tmxGame","wr","track","isFirst","rowSpan","records","replay","isBefore","disabled","fontSize","fromNow","format","unit","totalTime","humanize","colSpan","totalPoints","level","category","RecordsTableSrcomHead","RecordsTableSrcom","srcom","media","gutterBottom","withTheme","labels","series","isDarkTheme","options","legend","show","responsive","breakpoint","chart","height","plotOptions","pie","donut","value","total","baseApi","log","url","status","ok","fab","margin","top","right","bottom","left","padTop","match","setGame","gameName","setGameName","tab","setTab","params","Api","request","tracks","campaign","t","push","leaderboard","forEach","entry","r","Table","LinearProgress","SimpleTitle","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","Box","p","justify","alignContent","RankingsTable","Zoom","in","timeout","Fab","smoothScroll","y","documentElement","scrollTop","window","requestAnimationFrame","scrollTo","Alert","elevation","defaultReplay","info","magic","version","settings","classId","headerSize","headerChunks","chunkOffset","NotFoundView","useTheme","setReplay","parseGhost","setParseGhost","errorMessage","setErrorMessage","handleClose","reason","parseReplay","useCallback","file","reader","FileReader","onload","result","Buffer","Replay","read","ghost","restData","removeData","Object","keys","_view","readAsArrayBuffer","handleChange","ev","files","removeDragData","dataTransfer","items","clear","clearData","querySelector","addEventListener","removeEventListener","Button","disableElevation","click","display","Checkbox","onDrop","preventDefault","i","kind","getAsFile","onDragOver","src","displayDataTypes","displayObjectSize","enableClipboard","Snackbar","autoHideDuration","severity","views","marginTop","App","useReducer","createMuiTheme","light","red","dark","secondary","orange","A400","context","ThemeProvider","CssBaseline","Provider","basename","exact","GameView","ReplayView","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f5da9b0.chunk.js","sourcesContent":["import React from 'react';\n\nexport const useIsMounted = () => {\n    const ref = React.useRef(false);\n    React.useEffect(() => {\n        ref.current = true;\n        return () => (ref.current = false);\n    }, []);\n    return ref;\n};\n\nexport const useRenders = (debug) => {\n    const ref = React.useRef(0);\n    console.log(debug + ' renders: ', ++ref.current);\n};\n\nexport const useTitle = (title) => {\n    React.useEffect(() => {\n        document.title = title + ' - ' + document.location.host;\n    }, [title]);\n};\n","import React from 'react';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport MaterialAppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useTitle } from '../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingBottom: theme.spacing(8),\n    },\n    list: {\n        width: theme.spacing(25),\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n    drawer: {\n        width: 240,\n        flexShrink: 0,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    flex: {\n        flex: 1,\n    },\n    active: {\n        color: theme.palette.primary.main,\n    },\n}));\n\nconst pageLinks = [\n    { title: '404 - Page Not Found', link: null, inDrawer: false },\n    { title: 'tmx-records', link: '/', inDrawer: false },\n    { title: 'TrackMania 2', link: '/tm2', inDrawer: true, default: true },\n    { title: 'TrackMania Wii', link: '/tmwii', inDrawer: true, default: true },\n    { title: 'Nations Forever', link: '/tmnforever', inDrawer: true },\n    { title: 'United', link: '/united', inDrawer: true },\n    { title: 'Nations ESWC', link: '/nations', inDrawer: true },\n    { title: 'Sunrise', link: '/sunrise', inDrawer: true },\n    { title: 'Original', link: '/original', inDrawer: true },\n    { title: 'Replay Inspection', link: '/replay', inDrawer: false },\n    { title: 'About', link: '/about', inDrawer: false },\n];\n\nconst AppBar = ({ location }) => {\n    const [open, setOpen] = React.useState(false);\n\n    const page = React.useMemo(\n        () =>\n            pageLinks.find(\n                (x) => x.link === location.pathname || (x.link !== null && location.pathname.startsWith(x.link + '/')),\n            ) || pageLinks[0],\n        [location],\n    );\n\n    useTitle(page.title);\n\n    const showDrawer = (state) => () => {\n        setOpen(state);\n    };\n\n    const classes = useStyles();\n\n    const list = (\n        <div className={classes.list}>\n            <List>\n                <ListItem button key={0} component={RouterLink} to={'/'}>\n                    <ListItemText primary=\"TMX Records\" />\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n                {pageLinks\n                    .filter((x) => x.inDrawer)\n                    .map((item, index) => (\n                        <ListItem\n                            button\n                            key={index}\n                            component={RouterLink}\n                            to={item.link}\n                            className={item.title === page.title ? classes.active : undefined}\n                        >\n                            <ListItemText primary={item.title} />\n                        </ListItem>\n                    ))}\n                <Divider />\n                <List>\n                    <ListItem button key={0} component={RouterLink} to={'/replay'}>\n                        <ListItemText primary={'Replay Inspection'} />\n                    </ListItem>\n                    <ListItem button key={1} component={RouterLink} to={'/about'}>\n                        <ListItemText primary={'About'} />\n                    </ListItem>\n                </List>\n            </List>\n        </div>\n    );\n\n    return (\n        <div className={classes.root}>\n            <MaterialAppBar className={classes.appBar} position=\"fixed\">\n                <Toolbar>\n                    <Hidden lgUp>\n                        <IconButton className={classes.menuButton} onClick={showDrawer(true)} color=\"inherit\">\n                            <MenuIcon />\n                        </IconButton>\n                    </Hidden>\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        <Link component={RouterLink} to=\"/\" color=\"inherit\" underline=\"none\">\n                            TMX Records\n                        </Link>\n                    </Typography>\n                </Toolbar>\n            </MaterialAppBar>\n            <Hidden lgUp implementation=\"css\">\n                <SwipeableDrawer open={open} onClose={showDrawer(false)} onOpen={showDrawer(true)} variant=\"temporary\">\n                    <div tabIndex={0} role=\"button\" onClick={showDrawer(false)} onKeyDown={showDrawer(false)}>\n                        {list}\n                    </div>\n                </SwipeableDrawer>\n            </Hidden>\n            <Hidden mdDown implementation=\"css\">\n                <Drawer variant=\"permanent\">\n                    <div tabIndex={0} role=\"button\">\n                        {list}\n                    </div>\n                </Drawer>\n            </Hidden>\n        </div>\n    );\n};\n\nexport default withRouter(AppBar);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nconst ViewContent = ({ children }) => (\n    <Grid container>\n        <Grid item xs={false} md={1} lg={2} />\n        <Grid item xs={12} md={10} lg={9}>\n            {children}\n        </Grid>\n    </Grid>\n);\n\nexport default ViewContent;\n","import React from 'react';\n\nclass DarkMode {\n    constructor() {\n        this.enabled = localStorage.getItem('dark_mode') === 'true';\n    }\n    toggle() {\n        this.enabled = !this.enabled;\n        localStorage.setItem('dark_mode', this.enabled.toString());\n        return this;\n    }\n}\n\nconst initialState = {\n    darkMode: new DarkMode(),\n};\n\nexport const AppReducer = [\n    (state, { action }) => {\n        switch (action) {\n            case 'toggleDarkMode':\n                return {\n                    ...state,\n                    darkMode: state.darkMode.toggle(),\n                };\n            default:\n                throw new Error('Unknown action type.');\n        }\n    },\n    initialState,\n];\n\nexport default React.createContext(initialState);\n","import React from 'react';\nimport moment from 'moment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Switch from '@material-ui/core/Switch';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ViewContent from './ViewContent';\nimport AppState from '../AppState';\nimport { useIsMounted } from '../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    aboutBox: {\n        padding: theme.spacing(3),\n    },\n}));\n\nconst branches = [\n    { repo: 'NeKzor/tmx-records', branch: 'master' },\n    { repo: 'NeKzBot/tmx-records', branch: 'api' },\n    { repo: 'NeKzor/tmx-records', branch: 'gh-pages' },\n];\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst MinTableCell = (props) => <TableCell size=\"small\" {...props} />;\nconst Padding = () => <div style={{ paddingTop: '50px' }} />;\n\nconst AboutView = () => {\n    const isMounted = useIsMounted();\n\n    const {\n        state: { darkMode },\n        dispatch,\n    } = React.useContext(AppState);\n\n    const [gitHub, setGitHub] = React.useState([]);\n\n    const toggleDarkMode = () => {\n        dispatch({ action: 'toggleDarkMode' });\n    };\n\n    React.useEffect(() => {\n        const anyErrors = (err) => {\n            console.error(err);\n            if (isMounted.current) {\n                setGitHub(undefined);\n            }\n        };\n\n        Promise.all(branches.map(({ repo, branch }) => fetch(`https://api.github.com/repos/${repo}/commits/${branch}`)))\n            .then((results) => {\n                Promise.all(results.map((res) => res.json()))\n                    .then((branches) => {\n                        if (isMounted.current) {\n                            setGitHub(\n                                branches.map((branch) => ({\n                                    sha: branch.sha,\n                                    author: branch.author ? branch.author : branch.commit.author,\n                                    message: branch.commit.message,\n                                    date: branch.commit.author.date,\n                                })),\n                            );\n                        }\n                    })\n                    .catch(anyErrors);\n            })\n            .catch(anyErrors);\n    }, [isMounted]);\n\n    const classes = useStyles();\n\n    return (\n        <ViewContent>\n            <Paper className={classes.aboutBox}>\n                <Typography component=\"h2\" variant=\"h5\">\n                    TrackMania Exchange Records & Statistics\n                </Typography>\n                <br />\n                <Typography variant=\"body1\">\n                    This web app mirrors Nadeo world records from TrackMania Exchange and speedrun.com.\n                </Typography>\n                <Typography variant=\"body1\">\n                    Additionally it ranks players based on how many world records they hold and how long their records\n                    have been lasting.\n                </Typography>\n\n                <Padding />\n\n                <Typography variant=\"h5\">Last Update</Typography>\n                <br />\n                {gitHub === undefined ? (\n                    <Typography variant=\"body1\">Unable to fetch status from GitHub.</Typography>\n                ) : gitHub.length === 0 ? (\n                    <CircularProgress className={classes.progress} />\n                ) : (\n                    <div style={{ overflowX: 'auto' }}>\n                        <Table size=\"small\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Branch</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Date</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Author</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Commit</Typography>\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {gitHub.map((commit, idx) => {\n                                    const { repo, branch } = branches[idx];\n                                    return (\n                                        <TableRow tabIndex={-1} key={idx} style={noWrap}>\n                                            <MinTableCell align=\"left\">\n                                                <Link\n                                                    color=\"inherit\"\n                                                    rel=\"noopener\"\n                                                    href={`https://github.com/${repo}/tree/${branch}`}\n                                                >\n                                                    {branch}\n                                                </Link>\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\" style={noWrap}>\n                                                <Tooltip title={moment(commit.date).toString()}>\n                                                    <span>{moment(commit.date).from()}</span>\n                                                </Tooltip>\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\">\n                                                {commit.author.html_url ? (\n                                                    <Link color=\"inherit\" rel=\"noopener\" href={commit.author.html_url}>\n                                                        {commit.author.login}\n                                                    </Link>\n                                                ) : (\n                                                    commit.author.name || 'n/a'\n                                                )}\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\" style={noWrap}>\n                                                <Tooltip title={commit.message}>\n                                                    <Link\n                                                        color=\"inherit\"\n                                                        rel=\"noopener\"\n                                                        href={`https://github.com/${repo}/commit/${commit.sha}`}\n                                                    >\n                                                        {commit.sha}\n                                                    </Link>\n                                                </Tooltip>\n                                            </MinTableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            </TableBody>\n                        </Table>\n                    </div>\n                )}\n\n                <Padding />\n\n                <Typography variant=\"h5\">Theme Settings</Typography>\n                <br />\n                <FormGroup row>\n                    <FormControlLabel\n                        control={<Switch checked={darkMode.enabled} onChange={toggleDarkMode} color=\"primary\" />}\n                        label=\"Dark Mode\"\n                    />\n                </FormGroup>\n\n                <Padding />\n\n                <Typography variant=\"h5\">Credits</Typography>\n                <br />\n                <Link rel=\"noopener\" href=\"http://www.tm-exchange.com\">\n                    tm-exchange.com\n                </Link>\n                <br />\n                <Link rel=\"noopener\" href=\"https://tm.mania-exchange.com\">\n                    tm.mania-exchange.com\n                </Link>\n                <br />\n                <Link rel=\"noopener\" href=\"https://www.speedrun.com/tmwii\">\n                    speedrun.com/tmwii\n                </Link>\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default AboutView;\n","export const stableSort = (array, order, orderBy) => {\n    let desc = (a, b) => {\n        let aa = getPropFast(a, orderBy);\n        let bb = getPropFast(b, orderBy);\n        if (bb < aa) return -1;\n        if (bb > aa) return 1;\n        return 0;\n    };\n\n    let cmp = order === 'desc' ? (a, b) => desc(a, b) : (a, b) => -desc(a, b);\n\n    let sort = (a, b) => {\n        let order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    };\n\n    return array\n        .map((el, index) => [el, index])\n        .sort(sort)\n        .map((el) => el[0]);\n};\nexport const stableSortSort = (array, order, orderBy, thenBy) => {\n    let desc = (a, b) => {\n        let aa = getPropFast(a, orderBy);\n        let bb = getPropFast(b, orderBy);\n        if (bb < aa) return -1;\n        if (bb > aa) return 1;\n        aa = getPropFast(a, thenBy);\n        bb = getPropFast(b, thenBy);\n        if (bb < aa) return -1;\n        if (bb > aa) return 1;\n        return 0;\n    };\n\n    let cmp = order === 'desc' ? (a, b) => desc(a, b) : (a, b) => -desc(a, b);\n\n    let sort = (a, b) => {\n        let order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    };\n\n    return array\n        .map((el, index) => [el, index])\n        .sort(sort)\n        .map((el) => el[0]);\n};\n\n// Util which returns the value of nested objects by string: getPropFast({ a: { b: 3 } }, 'a.b') === 3\nconst getPropFast = (obj, path) =>\n    path.indexOf('.') !== -1\n        ? path\n              .split('.')\n              .filter((s) => s)\n              .reduce((acc, val) => acc && acc[val], obj)\n        : obj[path];\n","const protocol = (game) => (['nations', 'sunrise', 'original'].includes(game) ? 'http' : 'https');\n\nexport default (game) =>\n    game === 'tm2'\n        ? {\n              trackUrl: (id) => `https://tm.mania-exchange.com/tracks/${id}`,\n              imageUrl: (id) => `https://tm.mania-exchange.com/tracks/screenshot/normal/${id}`,\n              replayUrl: (id) => `https://tm.mania-exchange.com/replays/download/${id}`,\n              userUrl: (id) => `https://tm.mania-exchange.com/user/profile/${id}`,\n          }\n        : game === 'tmwii'\n        ? {\n              trackUrl: (id) => `https://speedrun.com/tmwii/${id}`,\n              imageUrl: (id) => undefined,\n              replayUrl: (id) => undefined,\n              userUrl: (id) => `https://www.speedrun.com/user/${id}`,\n          }\n        : (() => ({\n              trackUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/main.aspx?action=trackshow&id=${id}`,\n              imageUrl: (id) =>\n                  `${protocol(game)}://${game}.tm-exchange.com/getclean.aspx?action=trackscreenscreens&id=${id}`,\n              replayUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/get.aspx?action=recordgbx&id=${id}`,\n              userUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/main.aspx?action=usershow&id=${id}`,\n          }))();\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { stableSortSort } from '../utils/stableSort';\nimport tmx from '../utils/tmx';\n\nconst rows = [\n    { id: 'user.name', sortable: false, label: 'Player', align: 'left' },\n    { id: 'wrs', id2: 'duration', sortable: true, label: 'World Records', align: 'left' },\n    { id: 'duration', id2: 'wrs', sortable: true, label: 'Total Duration', align: 'left' },\n];\n\nconst RankingsTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (prop1, prop2) => (event) => {\n        onRequestSort(event, prop1, prop2);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id, row.id2)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'desc',\n    orderBy: 'wrs',\n    thenBy: 'duration',\n    page: 0,\n    rowsPerPage: 50,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTable = ({ data, game }) => {\n    const [{ order, orderBy, thenBy, rowsPerPage, page }, setState] = React.useState(defaultState);\n\n    const handleRequestSort = (_, prop1, prop2) => {\n        const newOrderBy = prop1;\n        const newThenBy = prop2;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n            thenBy: newThenBy,\n        }));\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RankingsTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n                <TableBody>\n                    {stableSortSort(data, order, orderBy, thenBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row) => (\n                            <TableRow tabIndex={-1} key={row.user.id}>\n                                <MinTableCell align=\"left\">\n                                    <Link\n                                        style={noWrap}\n                                        color=\"inherit\"\n                                        href={tmx(game).userUrl(row.user.id)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {row.user.name}\n                                    </Link>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">{row.wrs}</MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    {row.duration} day{row.duration === 1 ? '' : 's'}\n                                </MinTableCell>\n                            </TableRow>\n                        ))}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import { scaleLinear } from 'd3-scale';\nimport moment from 'moment';\n\nexport function formatScore(score, game, type = undefined) {\n    if (type === 'Stunts') {\n        return score + ' pts.';\n    }\n\n    if (game !== 'tm2') {\n        score /= 10;\n\n        let csec = score % 100;\n        let tsec = Math.floor(score / 100);\n        let sec = tsec % 60;\n        let min = Math.floor(tsec / 60);\n\n        return (\n            (min > 0 ? min + ':' : '') + (sec < 10 && min > 0 ? '0' + sec : sec) + '.' + (csec < 10 ? '0' + csec : csec)\n        );\n    }\n\n    let msec = score % 1000;\n    let tsec = Math.floor(score / 1000);\n    let sec = tsec % 60;\n    let min = Math.floor(tsec / 60);\n\n    return (\n        (min > 0 ? min + ':' : '') +\n        (sec < 10 && min > 0 ? '0' + sec : sec) +\n        '.' +\n        (msec < 100 ? (msec < 10 ? '00' + msec : '0' + msec) : msec)\n    );\n}\n\n// credits: https://github.com/iVerb1/Portal2Boards/blob/master/public/js/date.js#L21\nconst hourScale = scaleLinear()\n    .domain([0, 24, 14 * 24, 2 * 30 * 24])\n    .range(['#2eb82e', '#258e25', '#cca300', '#e67300']);\n\nexport function getDateDifferenceColor(date) {\n    let passedHours = moment().diff(moment(date), 'hours');\n    return passedHours <= 2 * 30 * 24 ? hourScale(passedHours) : undefined;\n}\n","import React from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { stableSort } from '../utils/stableSort';\nimport tmx from '../utils/tmx';\nimport { formatScore, getDateDifferenceColor } from '../utils/tools';\n\nconst rows = [\n    { id: 'track.name', sortable: true, label: 'Track', align: 'left' },\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\n    { id: 'date', sortable: true, label: 'Date', align: 'left' },\n    { id: 'duration', sortable: true, label: 'Duration', align: 'left' },\n];\n\nconst RecordsTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'asc',\n    orderBy: 'track.name',\n    page: 0,\n    rowsPerPage: 250,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTable = ({ data, game, stats, useLiveDuration }) => {\n    const [{ order, orderBy, rowsPerPage, page }, setState] = React.useState(defaultState);\n\n    const handleRequestSort = (_, property) => {\n        const newOrderBy = property;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n        }));\n    };\n\n    const tmxGame = tmx(game);\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RecordsTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n                <TableBody>\n                    {stableSort(data, order, orderBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((wr) => {\n                            const score = formatScore(wr.score, game, wr.track.type);\n\n                            return (\n                                <TableRow tabIndex={-1} key={`${wr.track.name}-${wr.user.id}`}>\n                                    {(wr.track.isFirst || orderBy !== 'track.name') && (\n                                        <MinTableCell\n                                            style={noWrap}\n                                            rowSpan={orderBy !== 'track.name' ? 1 : wr.track.records}\n                                            align=\"left\"\n                                        >\n                                            <Link\n                                                color=\"inherit\"\n                                                href={tmxGame.trackUrl(wr.track.id)}\n                                                rel=\"noreferrer\"\n                                                target=\"_blank\"\n                                            >\n                                                {wr.track.name}\n                                            </Link>\n                                        </MinTableCell>\n                                    )}\n                                    <MinTableCell align=\"left\">\n                                        <Tooltip title=\"Download Replay\" placement=\"bottom-end\" enterDelay={300}>\n                                            <Link\n                                                style={noWrap}\n                                                color=\"inherit\"\n                                                href={tmxGame.replayUrl(wr.replay)}\n                                                rel=\"noreferrer\"\n                                                target=\"_blank\"\n                                            >\n                                                {score}\n                                            </Link>\n                                        </Tooltip>\n                                        {game === 'tm2' && moment(wr.date).isBefore('2017-05-09') && (\n                                            <Tooltip\n                                                title=\"This run was done on an older game version.\"\n                                                placement=\"bottom-end\"\n                                                enterDelay={300}\n                                            >\n                                                <span>\n                                                    <IconButton size=\"small\" disabled>\n                                                        <WarningIcon fontSize=\"inherit\" />\n                                                    </IconButton>\n                                                </span>\n                                            </Tooltip>\n                                        )}\n                                    </MinTableCell>\n                                    <MinTableCell align=\"left\">\n                                        <Link\n                                            style={noWrap}\n                                            color=\"inherit\"\n                                            href={tmxGame.userUrl(wr.user.id)}\n                                            rel=\"noreferrer\"\n                                            target=\"_blank\"\n                                        >\n                                            {wr.user.name}\n                                        </Link>\n                                    </MinTableCell>\n                                    <MinTableCell align=\"left\">\n                                        <Tooltip\n                                            title={<Moment fromNow>{wr.date}</Moment>}\n                                            placement=\"bottom-end\"\n                                            enterDelay={300}\n                                        >\n                                            <Moment\n                                                style={{ color: getDateDifferenceColor(wr.date), ...noWrap }}\n                                                format=\"YYYY-MM-DD\"\n                                            >\n                                                {wr.date}\n                                            </Moment>\n                                        </Tooltip>\n                                    </MinTableCell>\n                                    <MinTableCell align=\"left\">\n                                        <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\n                                            {useLiveDuration ? (\n                                                <Moment style={noWrap} diff={wr.date} unit=\"days\"></Moment>\n                                            ) : (\n                                                <span>{wr.duration}</span>\n                                            )}\n                                        </Tooltip>\n                                    </MinTableCell>\n                                </TableRow>\n                            );\n                        })}\n                </TableBody>\n                <TableBody>\n                    {stats.totalTime > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">Total Time</MinTableCell>\n                            <MinTableCell>\n                                <Tooltip\n                                    title={moment.duration(stats.totalTime, 'ms').humanize()}\n                                    placement=\"bottom-end\"\n                                    enterDelay={300}\n                                >\n                                    <span>{formatScore(stats.totalTime, game)}</span>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell colSpan={3}></MinTableCell>\n                        </TableRow>\n                    )}\n                    {stats.totalPoints > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">Total Points</MinTableCell>\n                            <MinTableCell>\n                                <span>{formatScore(stats.totalPoints, game, 'Stunts')}</span>\n                            </MinTableCell>\n                            <MinTableCell colSpan={3}></MinTableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","export default {\n    trackUrl: (level, category) => `https://speedrun.com/tmwii/${level}#${category}`,\n    userUrl: (name) => `https://www.speedrun.com/user/${name}`,\n    runUrl: (id) => `https://www.speedrun.com/tmwii/run/${id}`,\n};\n","import React from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { stableSort } from '../utils/stableSort';\nimport srcom from '../utils/srcom';\nimport { formatScore, getDateDifferenceColor } from '../utils/tools';\n\nconst rows = [\n    { id: 'track.name', sortable: true, label: 'Track', align: 'left' },\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\n    { id: 'date', sortable: true, label: 'Date', align: 'left' },\n    { id: 'duration', sortable: true, label: 'Duration', align: 'left' },\n    { id: 'replay', sortable: false, label: 'Video', align: 'left' },\n];\n\nconst RecordsTableSrcomHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'asc',\n    orderBy: 'track.name',\n    page: 0,\n    rowsPerPage: 250,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTableSrcom = ({ data, game, stats, useLiveDuration, category }) => {\n    const [{ order, orderBy, rowsPerPage, page }, setState] = React.useState(defaultState);\n\n    const handleRequestSort = (_, property) => {\n        const newOrderBy = property;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n        }));\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RecordsTableSrcomHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n                <TableBody>\n                    {stableSort(data, order, orderBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((wr) => (\n                            <TableRow tabIndex={-1} key={`${wr.track.name}-${wr.user.id}`}>\n                                {(wr.track.isFirst || orderBy !== 'track.name') && (\n                                    <MinTableCell\n                                        style={noWrap}\n                                        rowSpan={orderBy !== 'track.name' ? 1 : wr.track.records}\n                                        align=\"left\"\n                                    >\n                                        <Link\n                                            color=\"inherit\"\n                                            href={srcom.trackUrl(wr.track.name, category)}\n                                            rel=\"noreferrer\"\n                                            target=\"_blank\"\n                                        >\n                                            {wr.track.name}\n                                        </Link>\n                                    </MinTableCell>\n                                )}\n                                <MinTableCell align=\"left\">\n                                    <Link\n                                        style={noWrap}\n                                        color=\"inherit\"\n                                        href={srcom.runUrl(wr.id)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {formatScore(wr.score, game)}\n                                    </Link>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Link\n                                        style={noWrap}\n                                        color=\"inherit\"\n                                        href={srcom.userUrl(wr.user.name)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {wr.user.name}\n                                    </Link>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Tooltip\n                                        title={<Moment fromNow>{wr.date}</Moment>}\n                                        placement=\"bottom-end\"\n                                        enterDelay={300}\n                                    >\n                                        <Moment\n                                            style={{ color: getDateDifferenceColor(wr.date), ...noWrap }}\n                                            format=\"YYYY-MM-DD\"\n                                        >\n                                            {wr.date}\n                                        </Moment>\n                                    </Tooltip>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\n                                        {useLiveDuration ? (\n                                            <Moment style={noWrap} diff={wr.date} unit=\"days\"></Moment>\n                                        ) : (\n                                            <span>{wr.duration}</span>\n                                        )}\n                                    </Tooltip>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Tooltip title=\"Watch Run\" placement=\"bottom-end\" enterDelay={300}>\n                                        <IconButton size=\"small\" href={wr.media} target=\"_blank\">\n                                            <PlayArrowIcon fontSize=\"inherit\" />\n                                        </IconButton>\n                                    </Tooltip>\n                                </MinTableCell>\n                            </TableRow>\n                        ))}\n                </TableBody>\n                <TableBody>\n                    {stats.totalTime > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">Total Time</MinTableCell>\n                            <MinTableCell>\n                                <Tooltip\n                                    title={moment.duration(stats.totalTime, 'ms').humanize()}\n                                    placement=\"bottom-end\"\n                                    enterDelay={300}\n                                >\n                                    <span>{formatScore(stats.totalTime, game)}</span>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell colSpan={4}></MinTableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTableSrcom;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default ({ data, props }) => (\n    <Typography variant=\"h5\" gutterBottom style={{ padding: '50px 0px 50px 50px' }} {...props}>\n        {data}\n    </Typography>\n);\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { withTheme } from '@material-ui/styles';\n\nconst RecordsChart = ({ labels, series, title, theme }) => {\n    const isDarkTheme = theme.palette.type === 'dark';\n\n    return (\n        <Chart\n            options={{\n                labels,\n                legend: {\n                    show: false,\n                },\n                responsive: [\n                    {\n                        breakpoint: 380,\n                        options: {\n                            chart: {\n                                height: '300px',\n                            },\n                        },\n                    },\n                ],\n                plotOptions: {\n                    pie: {\n                        donut: {\n                            labels: {\n                                show: true,\n                                name: {\n                                    show: true,\n                                },\n                                value: {\n                                    show: true,\n                                    color: isDarkTheme ? 'white' : 'black',\n                                },\n                                total: {\n                                    show: true,\n                                    label: title,\n                                    color: isDarkTheme ? 'white' : 'black',\n                                },\n                            },\n                        },\n                    },\n                },\n            }}\n            series={series}\n            type=\"donut\"\n            height=\"400\"\n        />\n    );\n};\n\nexport default withTheme(RecordsChart);\n","class Api {\n    constructor() {\n        this.baseApi =\n            process.env.NODE_ENV === 'development'\n                ? 'http://localhost:8080'\n                : 'https://raw.githubusercontent.com/NeKzBot/tmx-records/api';\n    }\n    async request(game, date) {\n        let res = await fetch(`${this.baseApi}/${game}/${date || 'latest'}.json`);\n        console.log(`GET ${res.url} (${res.status})`);\n        return res.ok ? await res.json() : [];\n    }\n}\n\nexport default new Api();\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport moment from 'moment';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Fab from '@material-ui/core/Fab';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport RankingsTable from '../components/RankingsTable';\nimport RecordsTable from '../components/RecordsTable';\nimport RecordsTableSrcom from '../components/RecordsTableSrcom';\nimport SimpleTitle from '../components/SimpleTitle';\nimport RecordsChart from '../components/RecordsChart';\nimport Api from '../Api';\nimport { useIsMounted } from '../Hooks';\nimport ViewContent from './ViewContent';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((_) => ({\n    fab: {\n        margin: 0,\n        top: 'auto',\n        right: 30,\n        bottom: 30,\n        left: 'auto',\n        position: 'fixed',\n    },\n    padTop: {\n        paddingTop: '70px',\n    },\n}));\n\nconst GameView = ({ match }) => {\n    const isMounted = useIsMounted();\n\n    const [game, setGame] = React.useState(undefined);\n    const [gameName, setGameName] = React.useState('tm2');\n    const [tab, setTab] = React.useState(0);\n\n    const page = match.params[0];\n    const date = match.params.date;\n    const useLiveDuration = date === undefined || date === 'latest';\n\n    React.useEffect(() => {\n        setTab(0);\n        setGame(undefined);\n    }, [page]);\n\n    React.useEffect(() => {\n        (async () => {\n            let game = await Api.request(page, date);\n\n            if (game[0] && game[0].tracks[0].wrs) {\n                for (let campaign of game) {\n                    if (campaign.stats.totalPoints === undefined) {\n                        campaign.stats.totalTime = campaign.tracks\n                            .filter((t) => t.type !== 'Stunts')\n                            .map((t) => t.wrs[0].score)\n                            .reduce((a, b) => a + b, 0);\n                        campaign.stats.totalPoints = campaign.tracks\n                            .filter((t) => t.type === 'Stunts')\n                            .map((t) => t.wrs[0].score)\n                            .reduce((a, b) => a + b, 0);\n                    }\n\n                    let rows = [];\n                    for (let track of campaign.tracks) {\n                        for (let wr of track.wrs) {\n                            let duration = useLiveDuration ? moment().diff(moment(wr.date), 'd') : wr.duration;\n                            rows.push({\n                                track: {\n                                    id: track.id,\n                                    name: track.name,\n                                    type: track.type,\n                                    isFirst: wr === track.wrs[0],\n                                    records: track.wrs.length,\n                                },\n                                ...wr,\n                                duration,\n                            });\n                        }\n                    }\n\n                    campaign.tracks = rows;\n\n                    if (useLiveDuration) {\n                        campaign.leaderboard.forEach((entry, idx) => {\n                            campaign.leaderboard[idx].duration = campaign.tracks\n                                .filter((r) => r.user.id === entry.user.id)\n                                .map((r) => r.duration)\n                                .reduce((a, b) => a + b, 0);\n                        });\n                    }\n                }\n            }\n\n            if (!isMounted.current) return;\n            setGameName(page);\n            setGame(game);\n        })();\n    }, [isMounted, page, date, useLiveDuration]);\n\n    const handleTab = (_, newValue) => {\n        setTab(newValue);\n    };\n\n    const jumpToTop = () => {\n        const smoothScroll = () => {\n            const y = document.documentElement.scrollTop;\n            if (y > 0) {\n                window.requestAnimationFrame(smoothScroll);\n                window.scrollTo(0, y - y / 5);\n            }\n        };\n        smoothScroll();\n    };\n\n    const Table = gameName === 'tmwii' ? RecordsTableSrcom : RecordsTable;\n\n    const classes = useStyles();\n\n    return (\n        <ViewContent>\n            <Paper>\n                {game === undefined ? (\n                    <LinearProgress />\n                ) : game.length === 0 ? (\n                    <SimpleTitle data=\"No data.\" />\n                ) : (\n                    <>\n                        {game.length > 1 && (\n                            <Tabs\n                                value={tab}\n                                onChange={handleTab}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                                variant=\"scrollable\"\n                                scrollButtons=\"auto\"\n                            >\n                                {game.map((campaign) => (\n                                    <Tab label={campaign.name} key={campaign.name} />\n                                ))}\n                            </Tabs>\n                        )}\n                        <Typography component=\"div\" role=\"tabpanel\">\n                            <Box p={3}>\n                                <Grid container direction=\"column\" justify=\"center\">\n                                    <Grid item xs={12}>\n                                        <Table\n                                            data={game[tab].tracks}\n                                            game={gameName}\n                                            stats={game[tab].stats}\n                                            useLiveDuration={useLiveDuration}\n                                            category={game[tab].name}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} className={classes.padTop}>\n                                        <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                                            <Grid item xs={12} md={6}>\n                                                <RankingsTable data={game[tab].leaderboard} game={page} />\n                                            </Grid>\n                                            <Grid item xs={12} md={6} className={classes.padTop}>\n                                                <Grid container direction=\"column\" justify=\"center\">\n                                                    <Grid item xs={12}>\n                                                        <RecordsChart\n                                                            title=\"WRs\"\n                                                            labels={game[tab].leaderboard.map((row) => row.user.name)}\n                                                            series={game[tab].leaderboard.map((row) => row.wrs)}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} className={classes.padTop}>\n                                                        <RecordsChart\n                                                            title=\"Duration\"\n                                                            labels={game[tab].leaderboard.map((row) => row.user.name)}\n                                                            series={game[tab].leaderboard.map((row) => row.duration)}\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Box>\n                        </Typography>\n                    </>\n                )}\n            </Paper>\n            <Zoom in={game !== undefined && game.length !== 0} timeout={1000}>\n                <Fab title=\"Jump to top\" color=\"primary\" className={classes.fab} onClick={jumpToTop}>\n                    <KeyboardArrowUpIcon />\n                </Fab>\n            </Zoom>\n        </ViewContent>\n    );\n};\n\nexport default withRouter(GameView);\n","import React from 'react';\nimport ReactJson from 'react-json-view';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport ViewContent from './ViewContent';\nimport { useIsMounted } from '../Hooks';\nimport { useTheme } from '@material-ui/core';\n\nconst Alert = (props) => {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n};\n\nconst defaultReplay = {\n    info: 'drag & drop replay here :)',\n    magic: 'GBX',\n    version: 6,\n    settings: 'BUCR',\n    classId: 50933760,\n    headerSize: 331,\n    headerChunks: 2,\n    chunkOffset: 348,\n};\n\nconst NotFoundView = () => {\n    const isMounted = useIsMounted();\n    const theme = useTheme();\n\n    const [replay, setReplay] = React.useState(defaultReplay);\n    const [parseGhost, setParseGhost] = React.useState(true);\n    const [errorMessage, setErrorMessage] = React.useState(false);\n\n    const handleClose = (_, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setErrorMessage(false);\n    };\n\n    const handleParseGhost = (event) => {\n        setParseGhost(event.target.checked);\n    };\n\n    const parseReplay = React.useCallback(\n        (file) => {\n            if (!file) return;\n\n            const reader = new FileReader();\n            reader.onload = ({ target: { result } }) => {\n                try {\n                    if (!isMounted.current) return;\n                    setReplay(defaultReplay);\n                    setErrorMessage(false);\n\n                    const { Buffer, Replay } = window;\n\n                    const replay = (window.replay = Replay.default().read(Buffer.from(result), { parseGhost }));\n                    if (!isMounted.current) return;\n\n                    const removeData = (obj) => {\n                        Object.keys(obj).forEach((key) => {\n                            if (key === '_view') {\n                                delete obj._view;\n                            } else if (typeof obj[key] === 'object') {\n                                removeData(obj[key]);\n                            }\n                        });\n                    };\n\n                    if (replay.ghost) {\n                        delete replay.ghost.restData;\n                    }\n\n                    removeData(replay);\n                    setReplay(replay);\n                } catch (err) {\n                    if (isMounted.current) {\n                        setErrorMessage(err.message);\n                    }\n                }\n            };\n            reader.readAsArrayBuffer(file);\n        },\n        [isMounted, parseGhost, setReplay, setErrorMessage],\n    );\n\n    const handleChange = React.useCallback((ev) => parseReplay(ev.target.files[0]), [parseReplay]);\n\n    const dropHandler = (ev) => {\n        ev.preventDefault();\n\n        const files = [];\n\n        if (ev.dataTransfer.items) {\n            for (let i = 0; i < ev.dataTransfer.items.length; ++i) {\n                if (ev.dataTransfer.items[i].kind === 'file') {\n                    files.push(ev.dataTransfer.items[i].getAsFile());\n                }\n            }\n        }\n\n        parseReplay(files[0]);\n        removeDragData(ev);\n    };\n\n    const dragOverHandler = (ev) => {\n        ev.preventDefault();\n    };\n\n    const removeDragData = (ev) => {\n        if (ev.dataTransfer.items) {\n            ev.dataTransfer.items.clear();\n        } else {\n            ev.dataTransfer.clearData();\n        }\n    };\n\n    React.useEffect(() => {\n        document.querySelector('#file').addEventListener('change', handleChange);\n        return () => document.querySelector('#file').removeEventListener('change', handleChange);\n    }, [handleChange]);\n\n    const openFile = () => {\n        document.querySelector('#file').click();\n    };\n\n    return (\n        <ViewContent>\n            <Paper style={{ padding: '20px 20px 20px 20px' }}>\n                <Button variant=\"contained\" color=\"primary\" disableElevation onClick={openFile}>\n                    Open file\n                </Button>\n                <input type=\"file\" id=\"file\" style={{ display: 'none' }} />\n                <FormControlLabel\n                    style={{ marginLeft: '20px' }}\n                    control={<Checkbox color=\"primary\" checked={parseGhost} onChange={handleParseGhost} />}\n                    label=\"Parse Ghost\"\n                />\n                <div style={{ paddingBottom: '20px' }}></div>\n                <div onDrop={dropHandler} onDragOver={dragOverHandler}>\n                    <ReactJson\n                        name=\"replay\"\n                        style={{ fontSize: '14px' }}\n                        src={replay}\n                        theme={theme.palette.type === 'light' ? 'bright:inverted' : 'solarized'}\n                        displayDataTypes={false}\n                        displayObjectSize={false}\n                        enableClipboard={false}\n                    />\n                </div>\n                <Snackbar open={errorMessage !== false} autoHideDuration={6000} onClose={handleClose}>\n                    <Alert onClose={handleClose} severity=\"error\">\n                        {errorMessage}\n                    </Alert>\n                </Snackbar>\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default NotFoundView;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport SimpleTitle from '../components/SimpleTitle';\nimport ViewContent from './ViewContent';\n\nconst NotFoundView = () => {\n    return (\n        <ViewContent>\n            <Paper>\n                <SimpleTitle data=\"Page not found :(\" />\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default NotFoundView;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { red, orange } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport AppBar from './components/AppBar';\nimport AboutView from './views/AboutView';\nimport GameView from './views/GameView';\nimport ReplayView from './views/ReplayView';\nimport NotFoundView from './views/NotFoundView';\nimport AppState, { AppReducer } from './AppState';\n\nconst useStyles = makeStyles((theme) => ({\n    views: {\n        marginTop: theme.spacing(5),\n    },\n}));\n\nconst App = () => {\n    const [state, dispatch] = React.useReducer(...AppReducer);\n\n    const theme = React.useMemo(() => {\n        return createMuiTheme({\n            palette: {\n                primary: {\n                    light: red[300],\n                    main: red[500],\n                    dark: red[700],\n                },\n                secondary: {\n                    light: orange[300],\n                    main: orange[500],\n                    dark: orange[700],\n                },\n                error: {\n                    main: red.A400,\n                },\n                type: state.darkMode.enabled ? 'dark' : 'light',\n            },\n        });\n    }, [state.darkMode.enabled]);\n\n    const classes = useStyles();\n    const context = React.useMemo(() => ({ state, dispatch }), [state, dispatch]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <AppState.Provider value={context}>\n                <BrowserRouter basename={process.env.NODE_ENV === 'production' ? '/tmx-records' : '/'}>\n                    <AppBar />\n                    <div className={classes.views}>\n                        <Switch>\n                            <Redirect exact from=\"/\" to=\"/tm2\" />\n                            <Redirect exact from=\"/wii\" to=\"/tmwii\" />\n                            <Redirect exact from=\"/tmo\" to=\"/original\" />\n                            <Redirect exact from=\"/tmn\" to=\"/nations\" />\n                            <Redirect exact from=\"/tms\" to=\"/sunrise\" />\n                            <Redirect exact from=\"/tmnf\" to=\"/tmnforever\" />\n                            <Route\n                                exact\n                                path=\"/(nations|original|sunrise|tm2|tmnforever|tmwii|united)/:date?\"\n                                component={GameView}\n                            />\n                            <Route exact path=\"/about\" component={AboutView} />\n                            <Route exact path=\"/replay\" component={ReplayView} />\n                            <Route component={NotFoundView} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </AppState.Provider>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './utils/serviceWorker';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}