{"version":3,"sources":["Hooks.js","components/AppBar.js","views/ViewContent.js","AppState.js","views/AboutView.js","utils/stableSort.js","utils/tmx.js","components/RankingsTable.js","utils/tools.js","components/trackmania/CampaignMenus.js","components/RecordsTable.js","utils/srcom.js","components/RecordsTableSrcom.js","components/SimpleTitle.js","components/RecordsChart.js","components/FloatingActionButton.js","Api.js","views/GameView.js","views/ReplayView.js","views/NotFoundView.js","components/RankingsTableTrackmania.js","components/RecordsTableTrackmania.js","components/UniqueRecordsChart.js","components/trackmania/CampaignTab.js","components/trackmania/RankingsTab.js","views/TrackmaniaView.js","App.js","utils/serviceWorker.js","index.js"],"names":["useIsMounted","ref","React","useRef","useEffect","current","useStyles","makeStyles","theme","root","paddingBottom","spacing","list","width","menuButton","marginLeft","marginRight","drawer","flexShrink","appBar","zIndex","flex","active","color","palette","primary","main","pageLinks","title","link","inDrawer","default","withRouter","location","useState","open","setOpen","page","useMemo","find","x","pathname","startsWith","document","host","showDrawer","state","classes","className","List","ListItem","button","component","RouterLink","to","ListItemText","Divider","filter","map","item","index","undefined","position","Toolbar","Hidden","lgUp","IconButton","onClick","Typography","variant","Link","underline","implementation","SwipeableDrawer","onClose","onOpen","tabIndex","role","onKeyDown","mdDown","Drawer","ViewContent","children","Grid","container","xs","md","lg","initialState","darkMode","this","enabled","localStorage","getItem","setItem","toString","AppReducer","action","toggle","Error","createContext","aboutBox","padding","branches","repo","branch","noWrap","whiteSpace","MinTableCell","props","TableCell","size","Padding","style","paddingTop","getUpdate","now","moment","utc","updateIn","endOf","add","isBefore","duration","from","hours","get","minutes","seconds","g","value","clockTimer","AboutView","isMounted","useContext","AppState","dispatch","gitHub","setGitHub","nextUpdate","setNextUpdate","setInterval","clearInterval","anyErrors","err","console","error","Promise","all","fetch","then","results","res","json","sha","author","commit","message","date","catch","Paper","length","CircularProgress","progress","overflowX","TableHead","TableRow","TableBody","idx","align","rel","href","Tooltip","html_url","login","name","FormGroup","row","FormControlLabel","control","Switch","checked","onChange","label","cmpOptions","numeric","stableSort","array","order","orderBy","desc","a","b","aa","getPropFast","localeCompare","cmp","el","sort","stableSortSort","thenBy","bb","emptyObj","obj","path","indexOf","split","s","reduce","acc","val","protocol","game","includes","trackUrl","id","imageUrl","replayUrl","userUrl","rows","sortable","id2","RankingsTableHead","onRequestSort","sortDirection","placement","enterDelay","TableSortLabel","direction","prop1","prop2","event","_","defaultState","rowsPerPage","minifiedStyle","RecordsTable","data","setState","newOrderBy","newThenBy","slice","tmx","user","target","wrs","formatScore","score","type","csec","tsec","Math","floor","sec","min","msec","hourScale","scaleLinear","domain","range","getDateDifferenceColor","passedHours","diff","minuteScale","RecordsTableHead","property","stats","useLiveDuration","tmxGame","wr","track","isFirst","rowSpan","records","replay","disabled","fontSize","fromNow","format","unit","totalTime","humanize","colSpan","totalPoints","level","category","RecordsTableSrcomHead","RecordsTableSrcom","srcom","media","gutterBottom","withTheme","labels","series","rest","isDarkTheme","push","colors","Array","fill","random","padStart","options","legend","show","responsive","breakpoint","chart","height","plotOptions","pie","donut","total","fab","margin","top","right","bottom","left","jumpToTop","smoothScroll","y","documentElement","scrollTop","window","requestAnimationFrame","scrollTo","FloatingActionButton","timeout","onScroll","useCallback","clearTimeout","setTimeout","scrollX","scrollY","addEventListener","removeEventListener","useScroll","Zoom","in","Fab","baseApi","file","log","url","status","ok","padTop","match","setGame","gameName","setGameName","tab","setTab","params","Api","request","tracks","campaign","t","leaderboard","forEach","entry","r","Table","LinearProgress","SimpleTitle","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","Box","p","justify","alignContent","RankingsTable","Alert","elevation","defaultReplay","info","magic","version","settings","classId","headerSize","headerChunks","chunkOffset","ReplayView","useTheme","setReplay","parseGhost","setParseGhost","errorMessage","setErrorMessage","handleClose","reason","parseReplay","reader","FileReader","onload","result","Buffer","Replay","read","ghost","restData","removeData","Object","keys","key","_view","readAsArrayBuffer","handleChange","ev","files","removeDragData","dataTransfer","items","clear","clearData","querySelector","Button","disableElevation","click","display","Checkbox","onDrop","preventDefault","i","kind","getAsFile","onDragOver","src","displayDataTypes","displayObjectSize","enableClipboard","Snackbar","autoHideDuration","severity","NotFoundView","rowsOficial","rowsTOTD","hasDuration","rowsOfficial","official","linkToExchange","isOfficial","ubisoftNadeo","encodeURIComponent","useRowStyles","borderBottom","RecordsHistoryRow","pastMinutes","delta","setAfter","note","zone","join","RecordsRow","history","onClickHistory","defaultSort","monthDay","isLast","Collapse","unmountOnExit","aria-label","historyWr","setHistory","xaxis","categories","dataLabels","toolbar","foreColor","tooltip","bar","horizontal","seasonMenu","totdMenu","currentMonth","seasons","7","10","1","4","season","month","year","MenuItem","toLowerCase","clone","monthName","reverse","calculateSetAfter","releasedAt","wrDate","diffSeconds","setAfterHours","setAfterMinutes","setBeforeHours","setBeforeMinutes","formControl","minWidth","CampaignTab","onChangeCampaign","rankingsType","setRankingsType","onChangeRankingsType","tz","set","hour","minute","second","historyWrDate","replace","rankingsCountryType","FormControl","InputLabel","Select","RankingsTab","setCampaign","views","marginTop","App","useReducer","createMuiTheme","light","red","dark","secondary","orange","A400","context","ThemeProvider","CssBaseline","Provider","basename","exact","TrackmaniaView","GameView","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.94855615.chunk.js","sourcesContent":["import React from 'react';\n\nexport const useIsMounted = () => {\n    const ref = React.useRef(false);\n    React.useEffect(() => {\n        ref.current = true;\n        return () => (ref.current = false);\n    }, []);\n    return ref;\n};\n\nexport const useRenders = (debug) => {\n    const ref = React.useRef(0);\n    console.log(debug + ' renders: ', ++ref.current);\n};\n\nexport const useTitle = (title) => {\n    React.useEffect(() => {\n        document.title = title + ' - ' + document.location.host;\n    }, [title]);\n};\n\nexport const useScroll = () => {\n    const timeout = React.useRef(undefined);\n    const [state, setState] = React.useState({ x: 0, y: 0 });\n\n    const onScroll = React.useCallback(() => {\n        clearTimeout(timeout.current);\n        timeout.current = setTimeout(() => {\n            setState({ x: window.scrollX, y: window.scrollY });\n        }, 100);\n    }, [setState]);\n\n    React.useEffect(() => {\n        window.addEventListener('scroll', onScroll);\n        return () => {\n            clearTimeout(timeout.current);\n            window.removeEventListener('scroll', onScroll);\n        };\n    }, [onScroll]);\n\n    return state;\n};\n","import React from 'react';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport MaterialAppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useTitle } from '../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingBottom: theme.spacing(8),\n    },\n    list: {\n        width: theme.spacing(25),\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n    drawer: {\n        width: 240,\n        flexShrink: 0,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    flex: {\n        flex: 1,\n    },\n    active: {\n        color: theme.palette.primary.main,\n    },\n}));\n\nconst pageLinks = [\n    { title: '404 - Page Not Found', link: null, inDrawer: false },\n    { title: 'trackmania-records', link: '/', inDrawer: false },\n    { title: 'Trackmania', link: '/trackmania', inDrawer: true, default: true },\n    { title: 'Trackmania 2', link: '/tm2', inDrawer: true, default: true },\n    { title: 'Trackmania Wii', link: '/tmwii', inDrawer: true, default: true },\n    { title: 'Nations Forever', link: '/tmnforever', inDrawer: true },\n    { title: 'United', link: '/united', inDrawer: true },\n    { title: 'Nations ESWC', link: '/nations', inDrawer: true },\n    /* { title: 'Sunrise', link: '/sunrise', inDrawer: true },\n    { title: 'Original', link: '/original', inDrawer: true }, */\n    { title: 'Replay Inspection', link: '/replay', inDrawer: false },\n    { title: 'About', link: '/about', inDrawer: false },\n];\n\nconst AppBar = ({ location }) => {\n    const [open, setOpen] = React.useState(false);\n\n    const page = React.useMemo(\n        () =>\n            pageLinks.find(\n                (x) => x.link === location.pathname || (x.link !== null && location.pathname.startsWith(x.link + '/')),\n            ) || pageLinks[0],\n        [location],\n    );\n\n    useTitle(page.title);\n\n    const showDrawer = (state) => () => {\n        setOpen(state);\n    };\n\n    const classes = useStyles();\n\n    const list = (\n        <div className={classes.list}>\n            <List>\n                <ListItem button key={0} component={RouterLink} to={'/'}>\n                    <ListItemText primary=\"Trackmania Records\" />\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n                {pageLinks\n                    .filter((x) => x.inDrawer)\n                    .map((item, index) => (\n                        <ListItem\n                            button\n                            key={index}\n                            component={RouterLink}\n                            to={item.link}\n                            className={item.title === page.title ? classes.active : undefined}\n                        >\n                            <ListItemText primary={item.title} />\n                        </ListItem>\n                    ))}\n                <Divider />\n                <List>\n                    <ListItem button key={0} component={RouterLink} to={'/replay'}>\n                        <ListItemText primary={'Replay Inspection'} />\n                    </ListItem>\n                    <ListItem button key={1} component={RouterLink} to={'/about'}>\n                        <ListItemText primary={'About'} />\n                    </ListItem>\n                </List>\n            </List>\n        </div>\n    );\n\n    return (\n        <div className={classes.root}>\n            <MaterialAppBar className={classes.appBar} position=\"fixed\">\n                <Toolbar>\n                    <Hidden lgUp>\n                        <IconButton className={classes.menuButton} onClick={showDrawer(true)} color=\"inherit\">\n                            <MenuIcon />\n                        </IconButton>\n                    </Hidden>\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        <Link component={RouterLink} to=\"/\" color=\"inherit\" underline=\"none\">\n                            Trackmania Records\n                        </Link>\n                    </Typography>\n                </Toolbar>\n            </MaterialAppBar>\n            <Hidden lgUp implementation=\"css\">\n                <SwipeableDrawer open={open} onClose={showDrawer(false)} onOpen={showDrawer(true)} variant=\"temporary\">\n                    <div tabIndex={0} role=\"button\" onClick={showDrawer(false)} onKeyDown={showDrawer(false)}>\n                        {list}\n                    </div>\n                </SwipeableDrawer>\n            </Hidden>\n            <Hidden mdDown implementation=\"css\">\n                <Drawer variant=\"permanent\">\n                    <div tabIndex={0} role=\"button\">\n                        {list}\n                    </div>\n                </Drawer>\n            </Hidden>\n        </div>\n    );\n};\n\nexport default withRouter(AppBar);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nconst ViewContent = ({ children }) => (\n    <Grid container>\n        <Grid item xs={false} md={1} lg={2} />\n        <Grid item xs={12} md={10} lg={9}>\n            {children}\n        </Grid>\n    </Grid>\n);\n\nexport default ViewContent;\n","import React from 'react';\n\nclass DarkMode {\n    constructor() {\n        this.enabled = localStorage.getItem('dark_mode') === 'true';\n    }\n    toggle() {\n        this.enabled = !this.enabled;\n        localStorage.setItem('dark_mode', this.enabled.toString());\n        return this;\n    }\n}\n\nconst initialState = {\n    darkMode: new DarkMode(),\n};\n\nexport const AppReducer = [\n    (state, { action }) => {\n        switch (action) {\n            case 'toggleDarkMode':\n                return {\n                    ...state,\n                    darkMode: state.darkMode.toggle(),\n                };\n            default:\n                throw new Error('Unknown action type.');\n        }\n    },\n    initialState,\n];\n\nexport default React.createContext(initialState);\n","import React from 'react';\nimport moment from 'moment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Switch from '@material-ui/core/Switch';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ViewContent from './ViewContent';\nimport AppState from '../AppState';\nimport { useIsMounted } from '../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    aboutBox: {\n        padding: theme.spacing(3),\n    },\n}));\n\nconst branches = [\n    { repo: 'NeKzor/trackmania-records', branch: 'master' },\n    { repo: 'NeKzBot/tmx-records', branch: 'api' },\n    { repo: 'NeKzor/trackmania-records', branch: 'gh-pages' },\n];\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst MinTableCell = (props) => <TableCell size=\"small\" {...props} />;\nconst Padding = () => <div style={{ paddingTop: '50px' }} />;\n\nconst getUpdate = () => {\n    const now = moment.utc();\n    let updateIn = moment().utc().endOf('day').add(17, 'hours');\n\n    if (updateIn.isBefore(now)) {\n        updateIn = moment().utc().endOf('day').add(1, 'day').add(17, 'hours');\n    }\n\n    const duration = moment.duration({ from: now, to: updateIn });\n    const hours = duration.get('hours');\n    const minutes = duration.get('minutes');\n    const seconds = duration.get('seconds');\n\n    const g = (value) => (value === 1 ? '' : 's');\n    return `${hours} hour${g(hours)}, ${minutes} minute${g(minutes)}, ${seconds} second${g(seconds)}`;\n};\n\nlet clockTimer = null;\n\nconst AboutView = () => {\n    const isMounted = useIsMounted();\n\n    const {\n        state: { darkMode },\n        dispatch,\n    } = React.useContext(AppState);\n\n    const [gitHub, setGitHub] = React.useState([]);\n    const [nextUpdate, setNextUpdate] = React.useState(getUpdate());\n\n    React.useEffect(() => {\n        clockTimer = setInterval(() => {\n            setNextUpdate(getUpdate());\n        }, 1000);\n\n        return () => clearInterval(clockTimer);\n    }, []);\n\n    const toggleDarkMode = () => {\n        dispatch({ action: 'toggleDarkMode' });\n    };\n\n    React.useEffect(() => {\n        const anyErrors = (err) => {\n            console.error(err);\n            if (isMounted.current) {\n                setGitHub(undefined);\n            }\n        };\n\n        Promise.all(branches.map(({ repo, branch }) => fetch(`https://api.github.com/repos/${repo}/commits/${branch}`)))\n            .then((results) => {\n                Promise.all(results.map((res) => res.json()))\n                    .then((branches) => {\n                        if (isMounted.current) {\n                            setGitHub(\n                                branches.map((branch) => ({\n                                    sha: branch.sha,\n                                    author: branch.author ? branch.author : branch.commit.author,\n                                    message: branch.commit.message,\n                                    date: branch.commit.author.date,\n                                })),\n                            );\n                        }\n                    })\n                    .catch(anyErrors);\n            })\n            .catch(anyErrors);\n    }, [isMounted]);\n\n    const classes = useStyles();\n\n    return (\n        <ViewContent>\n            <Paper className={classes.aboutBox}>\n                <Typography component=\"h2\" variant=\"h5\">\n                    Trackmania Campaign Records & Statistics\n                </Typography>\n                <br />\n                <Typography variant=\"body1\">\n                    This web app mirrors campaign world records of many Trackmania games. Data is mainly provided by\n                    Trackmania Exchange but also by speedrun.com.\n                </Typography>\n                <Typography variant=\"body1\">\n                    Additionally it ranks players based on how many world records they hold and how long their records\n                    have been lasting.\n                </Typography>\n\n                <Padding />\n\n                <Typography variant=\"h5\">Next Update</Typography>\n                <br />\n                {nextUpdate}\n\n                <Padding />\n\n                <Typography variant=\"h5\">Changelog</Typography>\n                <br />\n\n                {gitHub === undefined ? (\n                    <Typography variant=\"body1\">Unable to fetch status from GitHub.</Typography>\n                ) : gitHub.length === 0 ? (\n                    <CircularProgress className={classes.progress} />\n                ) : (\n                    <div style={{ overflowX: 'auto' }}>\n                        <Table size=\"small\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Branch</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Date</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Author</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Commit</Typography>\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {gitHub.map((commit, idx) => {\n                                    const { repo, branch } = branches[idx];\n                                    return (\n                                        <TableRow tabIndex={-1} key={idx} style={noWrap}>\n                                            <MinTableCell align=\"left\">\n                                                <Link\n                                                    color=\"inherit\"\n                                                    rel=\"noopener\"\n                                                    href={`https://github.com/${repo}/tree/${branch}`}\n                                                >\n                                                    {branch}\n                                                </Link>\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\" style={noWrap}>\n                                                <Tooltip title={moment(commit.date).toString()}>\n                                                    <span>{moment(commit.date).from()}</span>\n                                                </Tooltip>\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\">\n                                                {commit.author.html_url ? (\n                                                    <Link color=\"inherit\" rel=\"noopener\" href={commit.author.html_url}>\n                                                        {commit.author.login}\n                                                    </Link>\n                                                ) : (\n                                                    commit.author.name || 'n/a'\n                                                )}\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\" style={noWrap}>\n                                                <Tooltip title={commit.message}>\n                                                    <Link\n                                                        color=\"inherit\"\n                                                        rel=\"noopener\"\n                                                        href={`https://github.com/${repo}/commit/${commit.sha}`}\n                                                    >\n                                                        {commit.sha}\n                                                    </Link>\n                                                </Tooltip>\n                                            </MinTableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            </TableBody>\n                        </Table>\n                    </div>\n                )}\n\n                <Padding />\n\n                <Typography variant=\"h5\">Theme Settings</Typography>\n                <br />\n                <FormGroup row>\n                    <FormControlLabel\n                        control={<Switch checked={darkMode.enabled} onChange={toggleDarkMode} color=\"primary\" />}\n                        label=\"Dark Mode\"\n                    />\n                </FormGroup>\n\n                <Padding />\n\n                <Typography variant=\"h5\">Credits</Typography>\n                <br />\n                <Link rel=\"noopener\" href=\"http://www.tm-exchange.com\">\n                    tm-exchange.com\n                </Link>\n                <br />\n                <Link rel=\"noopener\" href=\"https://tm.mania-exchange.com\">\n                    tm.mania-exchange.com\n                </Link>\n                <br />\n                <Link rel=\"noopener\" href=\"https://www.speedrun.com/tmwii\">\n                    speedrun.com/tmwii\n                </Link>\n                <br />\n                <Link rel=\"noopener\" href=\"https://github.com/jonese1234/Trackmania-Leaderboard\">\n                    jonese1234/Trackmania-Leaderboard\n                </Link>\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default AboutView;\n","const cmpOptions = { numeric: true };\n\nexport const stableSort = (array, order, orderBy) => {\n    const desc = (a, b) => {\n        const aa = getPropFast(a, orderBy).toString();\n        const bb = getPropFast(b, orderBy).toString();\n        return bb.localeCompare(aa, undefined, cmpOptions);\n    };\n\n    const cmp = order === 'desc' ? (a, b) => desc(a, b) : (a, b) => -desc(a, b);\n\n    const sort = (a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    };\n\n    return array\n        .map((el, index) => [el, index])\n        .sort(sort)\n        .map((el) => el[0]);\n};\nexport const stableSortSort = (array, order, orderBy, thenBy) => {\n    if (orderBy === thenBy || thenBy === undefined) {\n        return stableSort(array, order, orderBy);\n    }\n\n    const desc = (a, b) => {\n        let aa = getPropFast(a, orderBy).toString();\n        let bb = getPropFast(b, orderBy).toString();\n        const cmp = bb.localeCompare(aa, undefined, cmpOptions);\n        if (cmp !== 0) return cmp;\n        aa = getPropFast(a, thenBy).toString();\n        bb = getPropFast(b, thenBy).toString();\n        return bb.localeCompare(aa, undefined, cmpOptions);\n    };\n\n    const cmp = order === 'desc' ? (a, b) => desc(a, b) : (a, b) => -desc(a, b);\n\n    const sort = (a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    };\n\n    return array\n        .map((el, index) => [el, index])\n        .sort(sort)\n        .map((el) => el[0]);\n};\n\nconst emptyObj = {};\n\n// Util which returns the value of nested objects by string: getPropFast({ a: { b: 3 } }, 'a.b') === 3\nconst getPropFast = (obj, path) =>\n    (path.indexOf('.') !== -1\n        ? path\n              .split('.')\n              .filter((s) => s)\n              .reduce((acc, val) => acc && acc[val], obj)\n        : obj[path]) || emptyObj;\n","const protocol = (game) => (['nations', 'sunrise', 'original'].includes(game) ? 'http' : 'https');\n\nexport default (game) =>\n    game === 'tm2'\n        ? {\n              trackUrl: (id) => `https://tm.mania-exchange.com/tracks/${id}`,\n              imageUrl: (id) => `https://tm.mania-exchange.com/tracks/screenshot/normal/${id}`,\n              replayUrl: (id) => `https://tm.mania-exchange.com/replays/download/${id}`,\n              userUrl: (id) => `https://tm.mania-exchange.com/user/profile/${id}`,\n          }\n        : game === 'tmwii'\n        ? {\n              trackUrl: (id) => `https://speedrun.com/tmwii/${id}`,\n              imageUrl: (id) => undefined,\n              replayUrl: (id) => undefined,\n              userUrl: (id) => `https://www.speedrun.com/user/${id}`,\n          }\n        : (() => ({\n              trackUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/main.aspx?action=trackshow&id=${id}`,\n              imageUrl: (id) =>\n                  `${protocol(game)}://${game}.tm-exchange.com/getclean.aspx?action=trackscreenscreens&id=${id}`,\n              replayUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/get.aspx?action=recordgbx&id=${id}`,\n              userUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/main.aspx?action=usershow&id=${id}`,\n          }))();\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { stableSortSort } from '../utils/stableSort';\nimport tmx from '../utils/tmx';\n\nconst rows = [\n    { id: 'user.name', sortable: false, label: 'Player', align: 'left' },\n    { id: 'wrs', id2: 'duration', sortable: true, label: 'World Records', align: 'left' },\n    { id: 'duration', id2: 'wrs', sortable: true, label: 'Total Duration', align: 'left' },\n];\n\nconst RankingsTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (prop1, prop2) => (event) => {\n        onRequestSort(event, prop1, prop2);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id, row.id2)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'desc',\n    orderBy: 'wrs',\n    thenBy: 'duration',\n    page: 0,\n    rowsPerPage: 50,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTable = ({ data, game }) => {\n    const [{ order, orderBy, thenBy, rowsPerPage, page }, setState] = React.useState(defaultState);\n\n    const handleRequestSort = (_, prop1, prop2) => {\n        const newOrderBy = prop1;\n        const newThenBy = prop2;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n            thenBy: newThenBy,\n        }));\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RankingsTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n                <TableBody>\n                    {stableSortSort(data, order, orderBy, thenBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row) => (\n                            <TableRow tabIndex={-1} key={row.user.id}>\n                                <MinTableCell align=\"left\">\n                                    <Link\n                                        style={noWrap}\n                                        color=\"inherit\"\n                                        href={tmx(game).userUrl(row.user.id)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {row.user.name}\n                                    </Link>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">{row.wrs}</MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    {row.duration} day{row.duration === 1 ? '' : 's'}\n                                </MinTableCell>\n                            </TableRow>\n                        ))}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import { scaleLinear } from 'd3-scale';\nimport moment from 'moment';\n\nexport function formatScore(score, game, type = undefined) {\n    if (score === undefined || score === null) {\n        return score;\n    }\n\n    if (type === 'Stunts') {\n        return score + ' pts.';\n    }\n\n    if (game !== 'tm2') {\n        score /= 10;\n\n        let csec = score % 100;\n        let tsec = Math.floor(score / 100);\n        let sec = tsec % 60;\n        let min = Math.floor(tsec / 60);\n\n        return (\n            (min > 0 ? min + ':' : '') + (sec < 10 && min > 0 ? '0' + sec : sec) + '.' + (csec < 10 ? '0' + csec : csec)\n        );\n    }\n\n    let msec = score % 1000;\n    let tsec = Math.floor(score / 1000);\n    let sec = tsec % 60;\n    let min = Math.floor(tsec / 60);\n\n    return (\n        (min > 0 ? min + ':' : '') +\n        (sec < 10 && min > 0 ? '0' + sec : sec) +\n        '.' +\n        (msec < 100 ? (msec < 10 ? '00' + msec : '0' + msec) : msec)\n    );\n}\n\n// credits: https://github.com/iVerb1/Portal2Boards/blob/master/public/js/date.js#L21\nconst hourScale = scaleLinear()\n    .domain([0, 24, 14 * 24, 2 * 30 * 24])\n    .range(['#2eb82e', '#258e25', '#cca300', '#e67300']);\n\nexport function getDateDifferenceColor(date) {\n    const passedHours = moment().diff(moment(date), 'hours');\n    return passedHours <= 2 * 30 * 24 ? hourScale(passedHours) : undefined;\n}\n\nconst minuteScale = scaleLinear()\n    .domain([0, 8 * 60, 16 * 60, 24 * 60])\n    .range(['#2eb82e', '#cca300', '#e67300', '#e63200']);\n\nexport function getDateTimeDifferenceColor(pastMinutes) {\n    return pastMinutes >= 0 && pastMinutes <= 24 * 60 ? minuteScale(pastMinutes) : undefined;\n}\n","import React from 'react';\nimport moment from 'moment';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst seasonMenu = [];\nconst totdMenu = [];\n\nconst now = moment();\nconst currentMonth = moment('2020-07-01');\n\nconst seasons = {\n    7: 'Summer',\n    10: 'Fall',\n    1: 'Winter',\n    4: 'Spring',\n};\n\nwhile (currentMonth.diff(now) < 0) {\n    const season = seasons[currentMonth.month() + 1];\n    const year = currentMonth.format('YYYY');\n\n    seasonMenu.push(\n        <MenuItem value={`campaign/${season}-${year}`.toLowerCase()} key={seasonMenu.length}>\n            {season} {year}\n        </MenuItem>,\n    );\n\n    const month = currentMonth.clone();\n    for (let i = 0; i < 3 && month.month() <= now.month(); ++i) {\n        const monthName = month.format('MMMM');\n\n        totdMenu.push(\n            <MenuItem value={`totd/${monthName}-${year}`.toLowerCase()} key={totdMenu.length}>\n                {monthName} {year}\n            </MenuItem>,\n        );\n\n        month.add(1, 'month');\n    }\n\n    currentMonth.add(3, 'months');\n}\n\nseasonMenu.reverse();\ntotdMenu.reverse();\n\nseasonMenu.push(\n    <MenuItem value=\"campaign/training\" key={seasonMenu.length}>\n        Training\n    </MenuItem>,\n);\n\nexport { seasonMenu, totdMenu };\n","import React from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { stableSort } from '../utils/stableSort';\nimport tmx from '../utils/tmx';\nimport { formatScore, getDateDifferenceColor } from '../utils/tools';\n\nconst rows = [\n    { id: 'track.name', sortable: true, label: 'Track', align: 'left' },\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\n    { id: 'date', sortable: true, label: 'Date', align: 'left' },\n    { id: 'duration', sortable: true, label: 'Duration', align: 'left' },\n];\n\nconst RecordsTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'asc',\n    orderBy: 'track.name',\n    page: 0,\n    rowsPerPage: 250,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTable = ({ data, game, stats, useLiveDuration }) => {\n    const [{ order, orderBy, rowsPerPage, page }, setState] = React.useState(defaultState);\n\n    const handleRequestSort = (_, property) => {\n        const newOrderBy = property;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n        }));\n    };\n\n    const tmxGame = tmx(game);\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RecordsTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n                <TableBody>\n                    {stableSort(data, order, orderBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((wr) => {\n                            const score = formatScore(wr.score, game, wr.track.type);\n\n                            return (\n                                <TableRow tabIndex={-1} key={`${wr.track.name}-${wr.user.id}`}>\n                                    {(wr.track.isFirst || orderBy !== 'track.name') && (\n                                        <MinTableCell\n                                            style={noWrap}\n                                            rowSpan={orderBy !== 'track.name' ? 1 : wr.track.records}\n                                            align=\"left\"\n                                        >\n                                            <Link\n                                                color=\"inherit\"\n                                                href={tmxGame.trackUrl(wr.track.id)}\n                                                rel=\"noreferrer\"\n                                                target=\"_blank\"\n                                            >\n                                                {wr.track.name}\n                                            </Link>\n                                        </MinTableCell>\n                                    )}\n                                    <MinTableCell align=\"left\">\n                                        <Tooltip title=\"Download Replay\" placement=\"bottom-end\" enterDelay={300}>\n                                            <Link\n                                                style={noWrap}\n                                                color=\"inherit\"\n                                                href={tmxGame.replayUrl(wr.replay)}\n                                                rel=\"noreferrer\"\n                                                target=\"_blank\"\n                                            >\n                                                {score}\n                                            </Link>\n                                        </Tooltip>\n                                        {game === 'tm2' && moment(wr.date).isBefore('2017-05-09') && (\n                                            <Tooltip\n                                                title=\"This run was done on an older game version.\"\n                                                placement=\"bottom-end\"\n                                                enterDelay={300}\n                                            >\n                                                <span>\n                                                    <IconButton size=\"small\" disabled>\n                                                        <WarningIcon fontSize=\"inherit\" />\n                                                    </IconButton>\n                                                </span>\n                                            </Tooltip>\n                                        )}\n                                    </MinTableCell>\n                                    <MinTableCell align=\"left\">\n                                        <Link\n                                            style={noWrap}\n                                            color=\"inherit\"\n                                            href={tmxGame.userUrl(wr.user.id)}\n                                            rel=\"noreferrer\"\n                                            target=\"_blank\"\n                                        >\n                                            {wr.user.name}\n                                        </Link>\n                                    </MinTableCell>\n                                    <MinTableCell align=\"left\">\n                                        <Tooltip\n                                            title={<Moment fromNow>{wr.date}</Moment>}\n                                            placement=\"bottom-end\"\n                                            enterDelay={300}\n                                        >\n                                            <Moment\n                                                style={{ color: getDateDifferenceColor(wr.date), ...noWrap }}\n                                                format=\"YYYY-MM-DD\"\n                                            >\n                                                {wr.date}\n                                            </Moment>\n                                        </Tooltip>\n                                    </MinTableCell>\n                                    <MinTableCell align=\"left\">\n                                        <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\n                                            {useLiveDuration ? (\n                                                <Moment style={noWrap} diff={wr.date} unit=\"days\"></Moment>\n                                            ) : (\n                                                <span>{wr.duration}</span>\n                                            )}\n                                        </Tooltip>\n                                    </MinTableCell>\n                                </TableRow>\n                            );\n                        })}\n                </TableBody>\n                <TableBody>\n                    {stats.totalTime > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">Total Time</MinTableCell>\n                            <MinTableCell>\n                                <Tooltip\n                                    title={moment.duration(stats.totalTime, 'ms').humanize()}\n                                    placement=\"bottom-end\"\n                                    enterDelay={300}\n                                >\n                                    <span>{formatScore(stats.totalTime, game)}</span>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell colSpan={3}></MinTableCell>\n                        </TableRow>\n                    )}\n                    {stats.totalPoints > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">Total Points</MinTableCell>\n                            <MinTableCell>\n                                <span>{formatScore(stats.totalPoints, game, 'Stunts')}</span>\n                            </MinTableCell>\n                            <MinTableCell colSpan={3}></MinTableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","export default {\n    trackUrl: (level, category) => `https://speedrun.com/tmwii/${level}#${category}`,\n    userUrl: (name) => `https://www.speedrun.com/user/${name}`,\n    runUrl: (id) => `https://www.speedrun.com/tmwii/run/${id}`,\n};\n","import React from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { stableSort } from '../utils/stableSort';\nimport srcom from '../utils/srcom';\nimport { formatScore, getDateDifferenceColor } from '../utils/tools';\n\nconst rows = [\n    { id: 'track.name', sortable: true, label: 'Track', align: 'left' },\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\n    { id: 'date', sortable: true, label: 'Date', align: 'left' },\n    { id: 'duration', sortable: true, label: 'Duration', align: 'left' },\n    { id: 'replay', sortable: false, label: 'Video', align: 'left' },\n];\n\nconst RecordsTableSrcomHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'asc',\n    orderBy: 'track.name',\n    page: 0,\n    rowsPerPage: 250,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTableSrcom = ({ data, game, stats, useLiveDuration, category }) => {\n    const [{ order, orderBy, rowsPerPage, page }, setState] = React.useState(defaultState);\n\n    const handleRequestSort = (_, property) => {\n        const newOrderBy = property;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n        }));\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RecordsTableSrcomHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n                <TableBody>\n                    {stableSort(data, order, orderBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((wr) => (\n                            <TableRow tabIndex={-1} key={`${wr.track.name}-${wr.user.id}`}>\n                                {(wr.track.isFirst || orderBy !== 'track.name') && (\n                                    <MinTableCell\n                                        style={noWrap}\n                                        rowSpan={orderBy !== 'track.name' ? 1 : wr.track.records}\n                                        align=\"left\"\n                                    >\n                                        <Link\n                                            color=\"inherit\"\n                                            href={srcom.trackUrl(wr.track.name, category)}\n                                            rel=\"noreferrer\"\n                                            target=\"_blank\"\n                                        >\n                                            {wr.track.name}\n                                        </Link>\n                                    </MinTableCell>\n                                )}\n                                <MinTableCell align=\"left\">\n                                    <Link\n                                        style={noWrap}\n                                        color=\"inherit\"\n                                        href={srcom.runUrl(wr.id)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {formatScore(wr.score, game)}\n                                    </Link>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Link\n                                        style={noWrap}\n                                        color=\"inherit\"\n                                        href={srcom.userUrl(wr.user.name)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {wr.user.name}\n                                    </Link>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Tooltip\n                                        title={<Moment fromNow>{wr.date}</Moment>}\n                                        placement=\"bottom-end\"\n                                        enterDelay={300}\n                                    >\n                                        <Moment\n                                            style={{ color: getDateDifferenceColor(wr.date), ...noWrap }}\n                                            format=\"YYYY-MM-DD\"\n                                        >\n                                            {wr.date}\n                                        </Moment>\n                                    </Tooltip>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\n                                        {useLiveDuration ? (\n                                            <Moment style={noWrap} diff={wr.date} unit=\"days\"></Moment>\n                                        ) : (\n                                            <span>{wr.duration}</span>\n                                        )}\n                                    </Tooltip>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Tooltip title=\"Watch Run\" placement=\"bottom-end\" enterDelay={300}>\n                                        <IconButton size=\"small\" href={wr.media} target=\"_blank\">\n                                            <PlayArrowIcon fontSize=\"inherit\" />\n                                        </IconButton>\n                                    </Tooltip>\n                                </MinTableCell>\n                            </TableRow>\n                        ))}\n                </TableBody>\n                <TableBody>\n                    {stats.totalTime > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">Total Time</MinTableCell>\n                            <MinTableCell>\n                                <Tooltip\n                                    title={moment.duration(stats.totalTime, 'ms').humanize()}\n                                    placement=\"bottom-end\"\n                                    enterDelay={300}\n                                >\n                                    <span>{formatScore(stats.totalTime, game)}</span>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell colSpan={4}></MinTableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTableSrcom;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default ({ data, props }) => (\n    <Typography variant=\"h5\" gutterBottom style={{ padding: '50px 0px 50px 50px' }} {...props}>\n        {data}\n    </Typography>\n);\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { withTheme } from '@material-ui/styles';\n\nconst randomColor = () => '#' + ((Math.random() * 0xffffff) << 0).toString(16).padStart(6, '0');\n\nconst MAX_DATAPOINTS = 30;\n\nconst RecordsChart = ({ labels, series, title, theme, rest = true }) => {\n    const isDarkTheme = theme.palette.type === 'dark';\n\n    if (rest && series.length > MAX_DATAPOINTS) {\n        const rest = series.slice(MAX_DATAPOINTS).reduce((acc, val) => (acc += val), 0);\n\n        series = series.slice(0, MAX_DATAPOINTS);\n        labels = labels.slice(0, MAX_DATAPOINTS);\n\n        series.push(rest);\n        labels.push('Rest');\n    }\n\n    const colors = new Array(series.length).fill(0).map(() => randomColor());\n\n    return (\n        <Chart\n            options={{\n                labels,\n                legend: {\n                    show: false,\n                },\n                responsive: [\n                    {\n                        breakpoint: 380,\n                        options: {\n                            chart: {\n                                height: '300px',\n                            },\n                        },\n                    },\n                ],\n                plotOptions: {\n                    pie: {\n                        donut: {\n                            labels: {\n                                show: true,\n                                name: {\n                                    show: true,\n                                },\n                                value: {\n                                    show: true,\n                                    color: isDarkTheme ? 'white' : 'black',\n                                },\n                                total: {\n                                    show: true,\n                                    label: title,\n                                    color: isDarkTheme ? 'white' : 'black',\n                                },\n                            },\n                        },\n                    },\n                },\n                colors,\n            }}\n            series={series}\n            type=\"donut\"\n            height=\"400\"\n        />\n    );\n};\n\nexport default withTheme(RecordsChart);\n","import React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport Zoom from '@material-ui/core/Zoom';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { useScroll } from '../Hooks';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((_) => ({\n    fab: {\n        margin: 0,\n        top: 'auto',\n        right: 30,\n        bottom: 30,\n        left: 'auto',\n        position: 'fixed',\n    },\n}));\n\nconst jumpToTop = () => {\n    const smoothScroll = () => {\n        const y = document.documentElement.scrollTop;\n        if (y > 0) {\n            window.requestAnimationFrame(smoothScroll);\n            window.scrollTo(0, y - y / 5);\n        }\n    };\n    smoothScroll();\n};\n\nconst FloatingActionButton = () => {\n    const { y } = useScroll();\n    const classes = useStyles();\n\n    return (\n        <Zoom in={y !== 0} timeout={1000}>\n            <Fab title=\"Jump to top\" color=\"primary\" className={classes.fab} onClick={jumpToTop}>\n                <KeyboardArrowUpIcon />\n            </Fab>\n        </Zoom>\n    );\n};\n\nexport default FloatingActionButton;\n","class Api {\n    constructor() {\n        this.baseApi =\n            process.env.NODE_ENV === 'development'\n                ? 'http://localhost:8080'\n                : 'https://raw.githubusercontent.com/NeKzBot/tmx-records/api';\n    }\n    async request(game, file) {\n        const res = await fetch(`${this.baseApi}/${game}/${file || 'latest'}.json`);\n        console.log(`GET ${res.url} (${res.status})`);\n\n        if (!res.ok) {\n            throw res;\n        }\n\n        return await res.json();\n    }\n}\n\nexport default new Api();\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport moment from 'moment';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport RankingsTable from '../components/RankingsTable';\nimport RecordsTable from '../components/RecordsTable';\nimport RecordsTableSrcom from '../components/RecordsTableSrcom';\nimport SimpleTitle from '../components/SimpleTitle';\nimport RecordsChart from '../components/RecordsChart';\nimport { makeStyles } from '@material-ui/core';\nimport FloatingActionButton from '../components/FloatingActionButton';\nimport Api from '../Api';\nimport { useIsMounted } from '../Hooks';\nimport ViewContent from './ViewContent';\n\nconst useStyles = makeStyles((_) => ({\n    padTop: {\n        paddingTop: '70px',\n    },\n}));\n\nconst GameView = ({ match }) => {\n    const isMounted = useIsMounted();\n\n    const [game, setGame] = React.useState(undefined);\n    const [gameName, setGameName] = React.useState('tm2');\n    const [tab, setTab] = React.useState(0);\n\n    const page = match.params[0];\n    const date = match.params.date;\n    const useLiveDuration = date === undefined || date === 'latest';\n\n    React.useEffect(() => {\n        setTab(0);\n        setGame(undefined);\n    }, [page]);\n\n    React.useEffect(() => {\n        (async () => {\n            const game = await Api.request(page, date);\n\n            if (game[0] && game[0].tracks[0].wrs) {\n                for (const campaign of game) {\n                    if (campaign.stats.totalPoints === undefined) {\n                        campaign.stats.totalTime = campaign.tracks\n                            .filter((t) => t.type !== 'Stunts')\n                            .map((t) => t.wrs[0].score)\n                            .reduce((a, b) => a + b, 0);\n                        campaign.stats.totalPoints = campaign.tracks\n                            .filter((t) => t.type === 'Stunts')\n                            .map((t) => t.wrs[0].score)\n                            .reduce((a, b) => a + b, 0);\n                    }\n\n                    const rows = [];\n                    for (const track of campaign.tracks) {\n                        for (const wr of track.wrs) {\n                            const duration = useLiveDuration ? moment().diff(moment(wr.date), 'd') : wr.duration;\n                            rows.push({\n                                track: {\n                                    id: track.id,\n                                    name: track.name,\n                                    type: track.type,\n                                    isFirst: wr === track.wrs[0],\n                                    records: track.wrs.length,\n                                },\n                                ...wr,\n                                duration,\n                            });\n                        }\n                    }\n\n                    campaign.tracks = rows;\n\n                    if (useLiveDuration) {\n                        campaign.leaderboard.forEach((entry, idx) => {\n                            campaign.leaderboard[idx].duration = campaign.tracks\n                                .filter((r) => r.user.id === entry.user.id)\n                                .map((r) => r.duration)\n                                .reduce((a, b) => a + b, 0);\n                        });\n                    }\n                }\n            }\n\n            if (!isMounted.current) return;\n            setGameName(page);\n            setGame(game);\n        })();\n    }, [isMounted, page, date, useLiveDuration]);\n\n    const handleTab = (_, newValue) => {\n        setTab(newValue);\n    };\n\n    const Table = gameName === 'tmwii' ? RecordsTableSrcom : RecordsTable;\n\n    const classes = useStyles();\n\n    return (\n        <ViewContent>\n            <Paper>\n                {game === undefined ? (\n                    <LinearProgress />\n                ) : game.length === 0 ? (\n                    <SimpleTitle data=\"No data.\" />\n                ) : (\n                    <>\n                        {game.length > 1 && (\n                            <Tabs\n                                value={tab}\n                                onChange={handleTab}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                                variant=\"scrollable\"\n                                scrollButtons=\"auto\"\n                            >\n                                {game.map((campaign) => (\n                                    <Tab label={campaign.name} key={campaign.name} />\n                                ))}\n                            </Tabs>\n                        )}\n                        <Typography component=\"div\" role=\"tabpanel\">\n                            <Box p={3}>\n                                <Grid container direction=\"column\" justify=\"center\">\n                                    <Grid item xs={12}>\n                                        <Table\n                                            data={game[tab].tracks}\n                                            game={gameName}\n                                            stats={game[tab].stats}\n                                            useLiveDuration={useLiveDuration}\n                                            category={game[tab].name}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} className={classes.padTop}>\n                                        <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                                            <Grid item xs={12} md={6}>\n                                                <RankingsTable data={game[tab].leaderboard} game={page} />\n                                            </Grid>\n                                            <Grid item xs={12} md={6} className={classes.padTop}>\n                                                <Grid container direction=\"column\" justify=\"center\">\n                                                    <Grid item xs={12}>\n                                                        <RecordsChart\n                                                            title=\"WRs\"\n                                                            labels={game[tab].leaderboard.map((row) => row.user.name)}\n                                                            series={game[tab].leaderboard.map((row) => row.wrs)}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} className={classes.padTop}>\n                                                        <RecordsChart\n                                                            title=\"Duration\"\n                                                            labels={game[tab].leaderboard.map((row) => row.user.name)}\n                                                            series={game[tab].leaderboard.map((row) => row.duration)}\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Box>\n                        </Typography>\n                    </>\n                )}\n            </Paper>\n            <FloatingActionButton />\n        </ViewContent>\n    );\n};\n\nexport default withRouter(GameView);\n","import React from 'react';\nimport ReactJson from 'react-json-view';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport ViewContent from './ViewContent';\nimport { useIsMounted } from '../Hooks';\nimport { useTheme } from '@material-ui/core';\n\nconst Alert = (props) => {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n};\n\nconst defaultReplay = {\n    info: 'drag & drop replay here :)',\n    magic: 'GBX',\n    version: 6,\n    settings: 'BUCR',\n    classId: 50933760,\n    headerSize: 331,\n    headerChunks: 2,\n    chunkOffset: 348,\n};\n\nconst ReplayView = () => {\n    const isMounted = useIsMounted();\n    const theme = useTheme();\n\n    const [replay, setReplay] = React.useState(defaultReplay);\n    const [parseGhost, setParseGhost] = React.useState(true);\n    const [errorMessage, setErrorMessage] = React.useState(false);\n\n    const handleClose = (_, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setErrorMessage(false);\n    };\n\n    const handleParseGhost = (event) => {\n        setParseGhost(event.target.checked);\n    };\n\n    const parseReplay = React.useCallback(\n        (file) => {\n            if (!file) return;\n\n            const reader = new FileReader();\n            reader.onload = ({ target: { result } }) => {\n                try {\n                    if (!isMounted.current) return;\n                    setReplay(defaultReplay);\n                    setErrorMessage(false);\n\n                    const { Buffer, Replay } = window;\n\n                    const replay = (window.replay = Replay.default().read(Buffer.from(result), { parseGhost }));\n                    if (!isMounted.current) return;\n\n                    const removeData = (obj) => {\n                        Object.keys(obj).forEach((key) => {\n                            if (key === '_view') {\n                                delete obj._view;\n                            } else if (typeof obj[key] === 'object') {\n                                removeData(obj[key]);\n                            }\n                        });\n                    };\n\n                    if (replay.ghost) {\n                        delete replay.ghost.restData;\n                    }\n\n                    removeData(replay);\n                    setReplay(replay);\n                } catch (err) {\n                    if (isMounted.current) {\n                        setErrorMessage(err.message);\n                    }\n                }\n            };\n            reader.readAsArrayBuffer(file);\n        },\n        [isMounted, parseGhost, setReplay, setErrorMessage],\n    );\n\n    const handleChange = React.useCallback((ev) => parseReplay(ev.target.files[0]), [parseReplay]);\n\n    const dropHandler = (ev) => {\n        ev.preventDefault();\n\n        const files = [];\n\n        if (ev.dataTransfer.items) {\n            for (let i = 0; i < ev.dataTransfer.items.length; ++i) {\n                if (ev.dataTransfer.items[i].kind === 'file') {\n                    files.push(ev.dataTransfer.items[i].getAsFile());\n                }\n            }\n        }\n\n        parseReplay(files[0]);\n        removeDragData(ev);\n    };\n\n    const dragOverHandler = (ev) => {\n        ev.preventDefault();\n    };\n\n    const removeDragData = (ev) => {\n        if (ev.dataTransfer.items) {\n            ev.dataTransfer.items.clear();\n        } else {\n            ev.dataTransfer.clearData();\n        }\n    };\n\n    React.useEffect(() => {\n        document.querySelector('#file').addEventListener('change', handleChange);\n        return () => document.querySelector('#file').removeEventListener('change', handleChange);\n    }, [handleChange]);\n\n    const openFile = () => {\n        document.querySelector('#file').click();\n    };\n\n    return (\n        <ViewContent>\n            <Paper style={{ padding: '20px 20px 20px 20px' }}>\n                <Button variant=\"contained\" color=\"primary\" disableElevation onClick={openFile}>\n                    Open file\n                </Button>\n                <input type=\"file\" id=\"file\" style={{ display: 'none' }} />\n                <FormControlLabel\n                    style={{ marginLeft: '20px' }}\n                    control={<Checkbox color=\"primary\" checked={parseGhost} onChange={handleParseGhost} />}\n                    label=\"Parse Ghost\"\n                />\n                <div style={{ paddingBottom: '20px' }}></div>\n                <div onDrop={dropHandler} onDragOver={dragOverHandler}>\n                    <ReactJson\n                        name=\"replay\"\n                        style={{ fontSize: '14px' }}\n                        src={replay}\n                        theme={theme.palette.type === 'light' ? 'bright:inverted' : 'solarized'}\n                        displayDataTypes={false}\n                        displayObjectSize={false}\n                        enableClipboard={false}\n                    />\n                </div>\n                <Snackbar open={errorMessage !== false} autoHideDuration={6000} onClose={handleClose}>\n                    <Alert onClose={handleClose} severity=\"error\">\n                        {errorMessage}\n                    </Alert>\n                </Snackbar>\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default ReplayView;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport SimpleTitle from '../components/SimpleTitle';\nimport ViewContent from './ViewContent';\n\nconst NotFoundView = () => {\n    return (\n        <ViewContent>\n            <Paper>\n                <SimpleTitle data=\"Page not found :(\" />\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default NotFoundView;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { stableSort, stableSortSort } from '../utils/stableSort';\n\nconst rowsOficial = [\n    { id: 'user.name', sortable: false, label: 'Player', align: 'left' },\n    { id: 'wrs', id2: 'duration', sortable: true, label: 'World Records', align: 'left' },\n    { id: 'duration', id2: 'wrs', sortable: true, label: 'Total Duration', align: 'left' },\n];\n\nconst rowsTOTD = [\n    { id: 'user.name', sortable: false, label: 'Player', align: 'left' },\n    { id: 'wrs', sortable: true, label: 'World Records', align: 'left' },\n];\n\nconst RankingsTableHead = ({ order, orderBy, onRequestSort, hasDuration }) => {\n    const createSortHandler = (prop1, prop2) => (event) => {\n        onRequestSort(event, prop1, prop2);\n    };\n\n    const rows = hasDuration ? rowsOficial : rowsTOTD;\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id, row.id2)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'desc',\n    orderBy: 'wrs',\n    thenBy: 'duration',\n    page: 0,\n    rowsPerPage: 50,\n};\n\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTable = ({ data, hasDuration }) => {\n    const [{ order, orderBy, thenBy }, setState] = React.useState(defaultState);\n\n    const handleRequestSort = (_, prop1, prop2) => {\n        const newOrderBy = prop1;\n        const newThenBy = prop2;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n            thenBy: newThenBy,\n        }));\n    };\n\n    React.useEffect(() => {\n        setState((s) => ({ ...s, orderBy: 'wrs', thenBy: 'wrs' }));\n    }, [data, hasDuration]);\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RankingsTableHead\n                    order={order}\n                    orderBy={orderBy}\n                    onRequestSort={handleRequestSort}\n                    hasDuration={hasDuration}\n                />\n                <TableBody>\n                    {(hasDuration ? stableSortSort : stableSort)(data, order, orderBy, thenBy)\n                        .map((row) => (\n                            <TableRow tabIndex={-1} key={row.user.name}>\n                                <MinTableCell align=\"left\">{row.user.name}</MinTableCell>\n                                <MinTableCell align=\"left\">{row.wrs}</MinTableCell>\n                                {hasDuration && (\n                                    <MinTableCell align=\"left\">{row.duration}</MinTableCell>\n                                )}\n                            </TableRow>\n                        ))}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import React from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport HistoryIcon from '@material-ui/icons/History';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { stableSort } from '../utils/stableSort';\nimport { formatScore, getDateDifferenceColor, getDateTimeDifferenceColor } from '../utils/tools';\n\nconst rowsOfficial = [\n    { id: 'track.name', sortable: true, label: 'Track', align: 'left' },\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\n    { id: 'zone', sortable: true, label: 'Zone', align: 'left' },\n    { id: 'date', sortable: true, label: 'Date', align: 'left' },\n    { id: 'duration', sortable: true, label: 'Duration', align: 'left' },\n];\n\nconst rowsTOTD = [\n    { id: 'track.monthDay', sortable: true, label: 'Day', align: 'left' },\n    { id: 'track.name', sortable: true, label: 'Track', align: 'left' },\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\n    { id: 'zone', sortable: true, label: 'Zone', align: 'left' },\n];\n\nconst RecordsTableHead = ({ order, orderBy, onRequestSort, official }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    const rows = official ? rowsOfficial : rowsTOTD;\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row, idx) => (\n                    <TableCell\n                        key={idx}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                        colSpan={idx === rows.length - 1 ? 2 : 1}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'asc',\n    orderBy: 'track.name',\n    page: 0,\n    rowsPerPage: 250,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst linkToExchange = (track, isOfficial) => {\n    const ubisoftNadeo = isOfficial ? '&authorId=21' : '';\n    return `https://trackmania.exchange/mapsearch2?trackname=${encodeURIComponent(track.name)}${ubisoftNadeo}`;\n};\n\nconst linkToLeaderboard = (trackName) => {\n    const [season, track] = trackName.name.split(' - ');\n    return `https://nekz.me/trackmania/#/${season.replace(' ', '').toLowerCase()}/${parseInt(track, 10)}`;\n};\n\nconst useRowStyles = makeStyles({\n    root: {\n        '& > *': {\n            borderBottom: 'unset',\n        },\n    },\n});\n\nconst RecordsHistoryRow = ({ wr, official }) => {\n    const score = formatScore(wr.score, 'tm2');\n    const delta = wr.delta !== 0 ? formatScore(wr.delta, 'tm2') : null;\n\n    return (\n        <TableRow tabIndex={-1}>\n            {official && (\n                <MinTableCell align=\"left\">\n                    <Tooltip title={<Moment format=\"HH:mm\">{wr.date}</Moment>} placement=\"bottom-end\" enterDelay={300}>\n                        <Moment style={{ color: getDateDifferenceColor(wr.date), ...noWrap }} format=\"YYYY-MM-DD\">\n                            {wr.date}\n                        </Moment>\n                    </Tooltip>\n                </MinTableCell>\n            )}\n            {!official && (\n                <MinTableCell align=\"left\">\n                    <Tooltip title={wr.setAfter} placement=\"bottom-end\" enterDelay={300}>\n                        <Moment style={{ color: getDateTimeDifferenceColor(wr.pastMinutes), ...noWrap }} format=\"HH:mm\">\n                            {wr.date}\n                        </Moment>\n                    </Tooltip>\n                </MinTableCell>\n            )}\n            <MinTableCell align=\"left\">\n                {score}\n                {wr.note && (\n                    <Tooltip title={wr.note} placement=\"bottom-end\" enterDelay={300}>\n                        <span>\n                            <IconButton size=\"small\" disabled>\n                                <WarningIcon fontSize=\"inherit\" />\n                            </IconButton>\n                        </span>\n                    </Tooltip>\n                )}\n            </MinTableCell>\n            <MinTableCell align=\"left\">{delta ? '-' + delta : ''}</MinTableCell>\n            <MinTableCell align=\"left\">{wr.user.name}</MinTableCell>\n            <MinTableCell align=\"left\">\n                <Tooltip title={wr.user.zone.map((zone) => zone.name).join(' | ')} placement=\"bottom\" enterDelay={300}>\n                    <span>{wr.user.zone[2].name}</span>\n                </Tooltip>\n            </MinTableCell>\n            <MinTableCell align=\"left\">\n                <Tooltip title=\"Download Ghost\" placement=\"bottom\" enterDelay={300}>\n                    <IconButton\n                        size=\"small\"\n                        style={noWrap}\n                        color=\"inherit\"\n                        href={'https://prod.trackmania.core.nadeo.online/storageObjects/' + wr.replay}\n                        rel=\"noreferrer\"\n                        target=\"_blank\"\n                    >\n                        <SaveAltIcon fontSize=\"inherit\" />\n                    </IconButton>\n                </Tooltip>\n            </MinTableCell>\n        </TableRow>\n    );\n};\n\nconst RecordsRow = ({ wr, official, orderBy, useLiveDuration, history, onClickHistory }) => {\n    const score = formatScore(wr.score, 'tm2');\n    const delta = wr.delta !== 0 ? formatScore(wr.delta, 'tm2') : null;\n\n    const classes = useRowStyles();\n\n    const open = history === wr.track.id;\n    const defaultSort = orderBy === 'track.monthDay' || orderBy === 'track.name';\n\n    return (\n        <>\n            <TableRow tabIndex={-1}>\n                {!official && (wr.track.isFirst || !defaultSort) && (\n                    <MinTableCell align=\"left\" rowSpan={defaultSort ? wr.track.records : 1}>\n                        {wr.track.monthDay}\n                    </MinTableCell>\n                )}\n                {(wr.track.isFirst || !defaultSort) && (\n                    <MinTableCell style={noWrap} rowSpan={defaultSort ? wr.track.records : 1} align=\"left\">\n                        <Link\n                            color=\"inherit\"\n                            href={linkToExchange(wr.track, official)}\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                        >\n                            {wr.track.name}\n                        </Link>\n                    </MinTableCell>\n                )}\n                <MinTableCell align=\"left\">\n                    {official && delta && (\n                        <Tooltip title={<span>-{delta} to former record</span>} placement=\"bottom\" enterDelay={300}>\n                            <span>{score}</span>\n                        </Tooltip>\n                    )}\n                    {official && !delta && <span>{score}</span>}\n                    {!official && delta && (\n                        <Tooltip title={<span>-{delta} to former record</span>} placement=\"bottom\" enterDelay={300}>\n                            <span>{score}</span>\n                        </Tooltip>\n                    )}\n                    {!official && !delta && <span>{score}</span>}\n                </MinTableCell>\n                <MinTableCell align=\"left\">{wr.user.name}</MinTableCell>\n                <MinTableCell align=\"left\">\n                    <Tooltip\n                        title={wr.user.zone.map((zone) => zone.name).join(' | ')}\n                        placement=\"bottom\"\n                        enterDelay={300}\n                    >\n                        <span>{wr.user.zone[2].name}</span>\n                    </Tooltip>\n                </MinTableCell>\n                {official && (\n                    <>\n                        <MinTableCell align=\"left\">\n                            <Tooltip title={<Moment fromNow>{wr.date}</Moment>} placement=\"bottom-end\" enterDelay={300}>\n                                <Moment\n                                    style={{ color: getDateDifferenceColor(wr.date), ...noWrap }}\n                                    format=\"YYYY-MM-DD\"\n                                >\n                                    {wr.date}\n                                </Moment>\n                            </Tooltip>\n                        </MinTableCell>\n                        <MinTableCell align=\"left\">\n                            <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\n                                {useLiveDuration ? (\n                                    <Moment style={noWrap} diff={wr.date} unit=\"days\"></Moment>\n                                ) : (\n                                    <span>{wr.duration}</span>\n                                )}\n                            </Tooltip>\n                        </MinTableCell>\n                    </>\n                )}\n                <MinTableCell align=\"left\">\n                    <Tooltip title=\"Download Ghost\" placement=\"bottom\" enterDelay={300}>\n                        <IconButton\n                            size=\"small\"\n                            style={noWrap}\n                            color=\"inherit\"\n                            href={'https://prod.trackmania.core.nadeo.online/storageObjects/' + wr.replay}\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                        >\n                            <SaveAltIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    </Tooltip>\n                    {wr.track.isLast && wr.track.history && (\n                        <IconButton\n                            color=\"inherit\"\n                            size=\"small\"\n                            style={noWrap}\n                            onClick={() => onClickHistory(wr.track.id)}\n                        >\n                            <HistoryIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    )}\n                </MinTableCell>\n            </TableRow>\n            {wr.track.isLast && wr.track.history && (\n                <TableRow className={classes.root}>\n                    <MinTableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={7}>\n                        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                            <Box margin={1}>\n                                <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                    History\n                                </Typography>\n                                <Table size=\"small\" aria-label=\"purchases\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <MinTableCell>{official ? 'Date' : 'Time'}</MinTableCell>\n                                            <MinTableCell>Record</MinTableCell>\n                                            <MinTableCell>Timesave</MinTableCell>\n                                            <MinTableCell>Player</MinTableCell>\n                                            <MinTableCell colSpan={2}>Zone</MinTableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {wr.track.history.map((historyWr, idx) => {\n                                            return <RecordsHistoryRow wr={historyWr} official={official} key={idx} />;\n                                        })}\n                                    </TableBody>\n                                </Table>\n                            </Box>\n                        </Collapse>\n                    </MinTableCell>\n                </TableRow>\n            )}\n        </>\n    );\n};\n\nconst RecordsTable = ({ data, stats, official, useLiveDuration }) => {\n    const [{ order, rowsPerPage, page, ...state }, setState] = React.useState(defaultState);\n    const [history, setHistory] = React.useState(null);\n\n    let { orderBy } = state;\n    orderBy = official && orderBy === 'track.monthDay' ? 'track.name' : orderBy;\n\n    const handleRequestSort = (_, property) => {\n        const newOrderBy = property;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n        }));\n    };\n\n    React.useEffect(() => {\n        setState((s) => ({ ...s, orderBy: official ? 'track.name' : 'track.monthDay' }));\n    }, [data, official]);\n\n    const onClickHistory = React.useCallback(\n        (id) => {\n            if (history !== id) {\n                setHistory(id);\n            } else {\n                setHistory(null);\n            }\n        },\n        [history, setHistory],\n    );\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RecordsTableHead\n                    order={order}\n                    orderBy={orderBy}\n                    onRequestSort={handleRequestSort}\n                    official={official}\n                />\n                <TableBody>\n                    {stableSort(data, order, orderBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((wr, idx) => {\n                            return (\n                                <RecordsRow\n                                    wr={wr}\n                                    official={official}\n                                    orderBy={orderBy}\n                                    useLiveDuration={useLiveDuration}\n                                    history={history}\n                                    onClickHistory={onClickHistory}\n                                    key={idx}\n                                />\n                            );\n                        })}\n                </TableBody>\n                <TableBody>\n                    {stats.totalTime > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\" colSpan={official ? 1 : 2}>\n                                Total Time\n                            </MinTableCell>\n                            <MinTableCell>\n                                <Tooltip\n                                    title={moment.duration(stats.totalTime, 'ms').humanize()}\n                                    placement=\"bottom-end\"\n                                    enterDelay={300}\n                                >\n                                    <span>{formatScore(stats.totalTime, 'tm2')}</span>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell colSpan={official ? 5 : 3}></MinTableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { withTheme } from '@material-ui/styles';\n\nconst UniqueRecordsChart = ({ labels, series, title, theme }) => {\n    const isDarkTheme = theme.palette.type === 'dark';\n\n    return (\n        <Chart\n            options={{\n                xaxis: {\n                    categories: labels,\n                },\n                legend: {\n                    show: false,\n                },\n                dataLabels: {\n                    enabled: false,\n                },\n                chart: {\n                    toolbar: {\n                        show: false,\n                    },\n                    foreColor: isDarkTheme ? 'white' : 'black',\n                },\n                tooltip: {\n                    theme: isDarkTheme ? 'dark' : 'light',\n                },\n                responsive: [\n                    {\n                        breakpoint: 380,\n                        options: {\n                            chart: {\n                                height: '300px',\n                            },\n                        },\n                    },\n                ],\n                plotOptions: {\n                    bar: {\n                        horizontal: true,\n                    },\n                },\n            }}\n            series={series}\n            type=\"bar\"\n            height=\"800\"\n        />\n    );\n};\n\nexport default withTheme(UniqueRecordsChart);\n","import React from 'react';\nimport moment from 'moment-timezone';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport RankingsTable from '../RankingsTableTrackmania';\nimport RecordsTable from '../RecordsTableTrackmania';\nimport RecordsChart from '../RecordsChart';\nimport SimpleTitle from '../SimpleTitle';\nimport UniqueRecordsChart from '../UniqueRecordsChart';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Api from '../../Api';\nimport { useIsMounted } from '../../Hooks';\nimport { seasonMenu, totdMenu } from './CampaignMenus';\n\nconst s = (value) => (value === 1 ? '' : 's');\n\nconst calculateSetAfter = (releasedAt, wrDate) => {\n    const diffSeconds = wrDate.diff(releasedAt, 'seconds');\n    const setAfterHours = wrDate.diff(releasedAt, 'hours');\n    if (diffSeconds > 0) {\n        const setAfterMinutes = wrDate.diff(releasedAt, 'minutes') - setAfterHours * 60;\n        return `set after ${setAfterHours} hour${s(setAfterHours)} and ${setAfterMinutes} minute${s(setAfterMinutes)}`;\n    } else {\n        const setBeforeHours = -setAfterHours;\n        const setBeforeMinutes = -wrDate.diff(releasedAt, 'minutes') - setBeforeHours * 60;\n        return `set before ${setBeforeHours} hour${s(setBeforeHours)} and ${setBeforeMinutes} minute${s(\n            setBeforeMinutes,\n        )}`;\n    }\n};\n\nconst useStyles = makeStyles((theme) => ({\n    padTop: {\n        paddingTop: '70px',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nconst CampaignTab = ({ campaign, onChangeCampaign, isOfficial }) => {\n    const isMounted = useIsMounted();\n\n    const [game, setGame] = React.useState(undefined);\n    const [rankingsType, setRankingsType] = React.useState('leaderboard');\n\n    const onChangeRankingsType = React.useCallback(\n        (event) => {\n            setRankingsType(event.target.value);\n        },\n        [setRankingsType],\n    );\n\n    React.useEffect(() => {\n        setGame(undefined);\n\n        Api.request('trackmania', campaign)\n            .then((campaign) => {\n                const rows = [];\n                for (const track of campaign.tracks) {\n                    for (const wr of track.wrs) {\n                        const wrDate = moment(wr.date);\n                        const releasedAt = !campaign.isOfficial\n                            ? moment().tz('Europe/Paris').set({\n                                  year: campaign.year,\n                                  month: campaign.month - 1,\n                                  date: track.monthDay,\n                                  hour: 19,\n                                  minute: 0,\n                                  second: 0,\n                              }).utc()\n                            : undefined;\n\n                        const setAfter = !campaign.isOfficial ? calculateSetAfter(releasedAt, wrDate) : undefined;\n\n                        const isLast = wr === track.wrs[track.wrs.length - 1];\n                        const history = isLast && (track.history || []).length > 1 ? track.history : undefined;\n\n                        if (history && !campaign.isOfficial) {\n                            history.forEach((historyWr) => {\n                                const historyWrDate = moment(historyWr.date);\n                                historyWr.setAfter = calculateSetAfter(releasedAt, historyWrDate);\n                                historyWr.pastMinutes = historyWrDate.diff(releasedAt, 'minutes');\n                            });\n                        }\n\n                        rows.push({\n                            track: {\n                                id: track.id,\n                                name: track.name.replace(/(\\$[0-9a-fA-F]{3}|\\$[WNOITSGZBEMwnoitsgzbem]{1})/g, ''),\n                                monthDay: track.monthDay,\n                                isFirst: wr === track.wrs[0],\n                                isLast,\n                                records: track.wrs.length,\n                                history,\n                            },\n                            ...wr,\n                            zone: (wr.user.zone[2] ? wr.user.zone[2] : wr.user.zone[0]).name,\n                            setAfter,\n                        });\n                    }\n                }\n\n                campaign.tracks = rows;\n\n                if (isMounted.current) {\n                    setGame(campaign);\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n\n                if (isMounted.current) {\n                    setGame(null);\n                }\n            });\n    }, [isMounted, campaign]);\n\n    const rankingsCountryType = rankingsType\n        .replace('Leaderboard', 'CountryLeaderboard')\n        .replace('leaderboard', 'countryLeaderboard');\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <FormControl className={classes.formControl}>\n                <InputLabel>Campaign</InputLabel>\n                <Select value={campaign} onChange={onChangeCampaign}>\n                    {isOfficial ? seasonMenu : totdMenu}\n                </Select>\n            </FormControl>\n            {game === null && <SimpleTitle data=\"No data.\" />}\n            {game === undefined && <LinearProgress />}\n            <Grid container direction=\"column\" justify=\"center\">\n                {game !== undefined && game !== null && (\n                    <>\n                        <Grid item xs={12}>\n                            <RecordsTable data={game.tracks} stats={game.stats} official={game.isOfficial} />\n                        </Grid>\n                        <Grid item xs={12} className={classes.padTop}>\n                            <FormControl className={classes.formControl}>\n                                <InputLabel>Rankings Type</InputLabel>\n                                <Select value={rankingsType} onChange={onChangeRankingsType}>\n                                    <MenuItem value={'leaderboard'}>Live</MenuItem>\n                                    <MenuItem value={'uniqueLeaderboard'}>Unique</MenuItem>\n                                    <MenuItem value={'historyLeaderboard'}>Total</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                                <Grid item xs={12} md={6}>\n                                    <RankingsTable\n                                        data={game[rankingsType]}\n                                        hasDuration={game.isOfficial && rankingsType !== 'uniqueLeaderboard'}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6} className={classes.padTop}>\n                                    <Grid container direction=\"column\" justify=\"center\">\n                                        <Grid item xs={12}>\n                                            {rankingsType === 'uniqueLeaderboard' ? (\n                                                <UniqueRecordsChart\n                                                    title=\"WRs\"\n                                                    labels={game[rankingsType].map((row) => row.user.name).slice(0, 20)}\n                                                    series={[\n                                                        {\n                                                            name: 'Unique WRs',\n                                                            data: game[rankingsType].slice(0, 20).map((row) => row.wrs),\n                                                        },\n                                                    ]}\n                                                />\n                                            ) : (\n                                                <RecordsChart\n                                                    title=\"WRs\"\n                                                    labels={game[rankingsType].map((row) => row.user.name)}\n                                                    series={game[rankingsType].map((row) => row.wrs)}\n                                                />\n                                            )}\n                                        </Grid>\n                                        <Grid item xs={12} className={classes.padTop}>\n                                            {rankingsType === 'uniqueLeaderboard' ? (\n                                                <UniqueRecordsChart\n                                                    title=\"WRs\"\n                                                    labels={game[rankingsCountryType]\n                                                        .map((row) => (row.zone[2] ? row.zone[2] : row.zone[0]).name)\n                                                        .slice(0, 20)}\n                                                    series={[\n                                                        {\n                                                            name: 'Unique WRs by Zone',\n                                                            data: game[rankingsCountryType]\n                                                                .slice(0, 20)\n                                                                .map((row) => row.wrs),\n                                                        },\n                                                    ]}\n                                                />\n                                            ) : (\n                                                <RecordsChart\n                                                    title=\"WRs by Zone\"\n                                                    labels={game[rankingsCountryType].map(\n                                                        (row) => (row.zone[2] ? row.zone[2] : row.zone[0]).name,\n                                                    )}\n                                                    series={game[rankingsCountryType].map((row) => row.wrs)}\n                                                />\n                                            )}\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </>\n                )}\n            </Grid>\n        </>\n    );\n};\n\nexport default CampaignTab;\n","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RecordsChart from '../RecordsChart';\nimport UniqueRecordsChart from '../UniqueRecordsChart';\nimport RankingsTable from '../RankingsTableTrackmania';\nimport SimpleTitle from '../SimpleTitle';\nimport Api from '../../Api';\nimport { useIsMounted } from '../../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    padTop: {\n        paddingTop: '70px',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nconst RankingsTab = () => {\n    const isMounted = useIsMounted();\n\n    const [game, setGame] = React.useState(undefined);\n    const [campaign, setCampaign] = React.useState('rankings/campaign');\n    const [rankingsType, setRankingsType] = React.useState('leaderboard');\n\n    const onChangeCampaign = React.useCallback(\n        (event) => {\n            setCampaign(event.target.value);\n        },\n        [setCampaign],\n    );\n    const onChangeRankingsType = React.useCallback(\n        (event) => {\n            setRankingsType(event.target.value);\n        },\n        [setRankingsType],\n    );\n\n    React.useEffect(() => {\n        setGame(undefined);\n\n        Api.request('trackmania', campaign)\n            .then((game) => {\n                if (isMounted.current) {\n                    setGame(game);\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                if (isMounted.current) {\n                    setGame(null);\n                }\n            });\n    }, [setGame, campaign, isMounted]);\n\n    const rankingsCountryType = rankingsType\n        .replace('Leaderboard', 'CountryLeaderboard')\n        .replace('leaderboard', 'countryLeaderboard');\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <FormControl className={classes.formControl}>\n                <InputLabel>Campaign</InputLabel>\n                <Select value={campaign} onChange={onChangeCampaign}>\n                    <MenuItem value=\"rankings/campaign\">Official</MenuItem>\n                    <MenuItem value=\"rankings/totd\">TOTD</MenuItem>\n                    <MenuItem value=\"rankings/combined\">Combined</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel>Rankings Type</InputLabel>\n                <Select value={rankingsType} onChange={onChangeRankingsType}>\n                    <MenuItem value={'leaderboard'}>Live</MenuItem>\n                    <MenuItem value={'uniqueLeaderboard'}>Unique</MenuItem>\n                    <MenuItem value={'historyLeaderboard'}>Total</MenuItem>\n                </Select>\n            </FormControl>\n            {game === null && <SimpleTitle data=\"No data.\" />}\n            {game === undefined && <LinearProgress />}\n            {game !== null && game !== undefined && (\n                <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                    <Grid item xs={12} md={6}>\n                        <RankingsTable\n                            data={game[rankingsType]}\n                            hasDuration={campaign === 'rankings/campaign' && rankingsType !== 'uniqueLeaderboard'}\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Grid container direction=\"column\" justify=\"center\">\n                            <Grid item xs={12} className={classes.padTop}>\n                                {rankingsType === 'uniqueLeaderboard' ? (\n                                    <UniqueRecordsChart\n                                        title=\"WRs\"\n                                        labels={game[rankingsType].map((row) => row.user.name).slice(0, 20)}\n                                        series={[\n                                            {\n                                                name: 'Unique WRs',\n                                                data: game[rankingsType].slice(0, 20).map((row) => row.wrs),\n                                            },\n                                        ]}\n                                    />\n                                ) : (\n                                    <RecordsChart\n                                        title=\"WRs\"\n                                        labels={game[rankingsType].map((row) => row.user.name)}\n                                        series={game[rankingsType].map((row) => row.wrs)}\n                                    />\n                                )}\n                            </Grid>\n                            <Grid item xs={12} className={classes.padTop}>\n                                {rankingsType === 'uniqueLeaderboard' ? (\n                                    <UniqueRecordsChart\n                                        title=\"WRs\"\n                                        labels={game[rankingsCountryType]\n                                            .map((row) => (row.zone[2] ? row.zone[2] : row.zone[0]).name)\n                                            .slice(0, 20)}\n                                        series={[\n                                            {\n                                                name: 'Unique WRs by Zone',\n                                                data: game[rankingsCountryType].slice(0, 20).map((row) => row.wrs),\n                                            },\n                                        ]}\n                                    />\n                                ) : (\n                                    <RecordsChart\n                                        title=\"WRs by Zone\"\n                                        labels={game[rankingsCountryType].map(\n                                            (row) => (row.zone[2] ? row.zone[2] : row.zone[0]).name,\n                                        )}\n                                        series={game[rankingsCountryType].map((row) => row.wrs)}\n                                    />\n                                )}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            )}\n        </>\n    );\n};\n\nexport default RankingsTab;\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport FloatingActionButton from '../components/FloatingActionButton';\nimport ViewContent from './ViewContent';\nimport CampaignTab from '../components/trackmania/CampaignTab';\nimport RankingsTab from '../components/trackmania/RankingsTab';\nimport { seasonMenu, totdMenu } from '../components/trackmania/CampaignMenus';\n\nconst TrackmaniaView = ({ match }) => {\n    const [tab, setTab] = React.useState(0);\n    const [campaign, setCampaign] = React.useState((tab === 0 ? seasonMenu : totdMenu)[0].props.value);\n\n    const page = match.params[0];\n\n    React.useEffect(() => {\n        setTab(0);\n    }, [page]);\n\n    const handleTab = (_, newValue) => {\n        setTab(newValue);\n        setCampaign((newValue === 0 ? seasonMenu : totdMenu)[0].props.value);\n    };\n\n    const onChangeCampaign = React.useCallback(\n        (event) => {\n            setCampaign(event.target.value);\n        },\n        [setCampaign],\n    );\n\n    return (\n        <ViewContent>\n            <Paper>\n                <Tabs\n                    value={tab}\n                    onChange={handleTab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                >\n                    <Tab label=\"Campaign\" />\n                    <Tab label=\"Track of the Day\" />\n                    <Tab label=\"Rankings\" />\n                </Tabs>\n                <Typography component=\"div\" role=\"tabpanel\">\n                    <Box p={3}>\n                        {(tab === 0 || tab === 1) && (\n                            <CampaignTab\n                                campaign={campaign}\n                                onChangeCampaign={onChangeCampaign}\n                                isOfficial={tab === 0}\n                            />\n                        )}\n                        {tab === 2 && <RankingsTab />}\n                    </Box>\n                </Typography>\n            </Paper>\n            <FloatingActionButton />\n        </ViewContent>\n    );\n};\n\nexport default withRouter(TrackmaniaView);\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { red, orange } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport AppBar from './components/AppBar';\nimport AboutView from './views/AboutView';\nimport GameView from './views/GameView';\nimport ReplayView from './views/ReplayView';\nimport NotFoundView from './views/NotFoundView';\nimport AppState, { AppReducer } from './AppState';\nimport TrackmaniaView from './views/TrackmaniaView';\n\nconst useStyles = makeStyles((theme) => ({\n    views: {\n        marginTop: theme.spacing(5),\n    },\n}));\n\nconst App = () => {\n    const [state, dispatch] = React.useReducer(...AppReducer);\n\n    const theme = React.useMemo(() => {\n        return createMuiTheme({\n            palette: {\n                primary: {\n                    light: red[300],\n                    main: red[500],\n                    dark: red[700],\n                },\n                secondary: {\n                    light: orange[300],\n                    main: orange[500],\n                    dark: orange[700],\n                },\n                error: {\n                    main: red.A400,\n                },\n                type: state.darkMode.enabled ? 'dark' : 'light',\n            },\n        });\n    }, [state.darkMode.enabled]);\n\n    const classes = useStyles();\n    const context = React.useMemo(() => ({ state, dispatch }), [state, dispatch]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <AppState.Provider value={context}>\n                <BrowserRouter basename={process.env.NODE_ENV === 'production' ? '/trackmania-records' : '/'}>\n                    <AppBar />\n                    <div className={classes.views}>\n                        <Switch>\n                            <Redirect exact from=\"/\" to=\"/trackmania\" />\n                            <Redirect exact from=\"/tm\" to=\"/trackmania\" />\n                            <Redirect exact from=\"/wii\" to=\"/tmwii\" />\n                            <Redirect exact from=\"/tmo\" to=\"/original\" />\n                            <Redirect exact from=\"/tmn\" to=\"/nations\" />\n                            <Redirect exact from=\"/tms\" to=\"/sunrise\" />\n                            <Redirect exact from=\"/tmnf\" to=\"/tmnforever\" />\n                            <Route exact path=\"/trackmania\" component={TrackmaniaView} />\n                            <Route\n                                exact\n                                path=\"/(nations|original|sunrise|tm2|tmnforever|tmwii|united)/:date?\"\n                                component={GameView}\n                            />\n                            <Route exact path=\"/about\" component={AboutView} />\n                            <Route exact path=\"/replay\" component={ReplayView} />\n                            <Route component={NotFoundView} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </AppState.Provider>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './utils/serviceWorker';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}