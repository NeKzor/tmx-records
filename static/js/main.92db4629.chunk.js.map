{"version":3,"sources":["Hooks.js","components/AppBar.js","views/ViewContent.js","AppState.js","views/AboutView.js","utils/stableSort.js","utils/tmx.js","components/RankingsTable.js","utils/tools.js","components/trackmania/CampaignMenus.js","components/RecordsTable.js","utils/srcom.js","components/RecordsTableSrcom.js","components/SimpleTitle.js","components/RecordsChart.js","components/FloatingActionButton.js","Api.js","views/GameView.js","views/ReplayView.js","views/NotFoundView.js","components/RankingsTableTrackmania.js","components/RecordsTableTrackmania.js","components/UniqueRecordsChart.js","components/trackmania/CampaignTab.js","components/trackmania/RankingsTab.js","views/TrackmaniaView.js","components/RecordsTableHistory.js","components/history/CampaignTab.js","components/history/RankingsTab.js","components/LongestDomination.js","components/LongestLasting.js","components/LargestImprovement.js","components/history/StatisticsTab.js","views/TrackmaniaHistoryView.js","App.js","utils/serviceWorker.js","index.js"],"names":["useIsMounted","ref","React","useRef","useEffect","current","useLocalStorage","key","initialStorage","useState","storage","localStorage","getItem","JSON","parse","setItem","stringify","internalSetStorage","useCallback","newStorage","useStyles","makeStyles","theme","root","paddingBottom","spacing","list","width","menuButton","marginLeft","marginRight","drawer","flexShrink","appBar","zIndex","flex","active","color","palette","primary","main","pageLinks","title","link","inDrawer","default","withRouter","location","open","setOpen","page","useMemo","find","x","pathname","startsWith","document","host","showDrawer","state","classes","className","List","ListItem","button","component","RouterLink","to","ListItemText","Divider","filter","map","item","index","undefined","position","Toolbar","Hidden","lgUp","IconButton","onClick","Typography","variant","Link","underline","implementation","SwipeableDrawer","onClose","onOpen","tabIndex","role","onKeyDown","mdDown","Drawer","_","marginBottom","ViewContent","children","Grid","container","xs","md","lg","initialState","darkMode","this","enabled","toString","AppReducer","action","toggle","Error","createContext","aboutBox","padding","branches","repo","branch","noWrap","whiteSpace","MinTableCell","props","TableCell","size","Padding","style","paddingTop","getUpdate","now","moment","utc","updateIn","endOf","add","isBefore","duration","from","hours","get","minutes","seconds","g","value","clockTimer","AboutView","isMounted","useContext","AppState","dispatch","gitHub","setGitHub","nextUpdate","setNextUpdate","setInterval","clearInterval","anyErrors","err","console","error","Promise","all","fetch","then","results","res","json","sha","author","commit","message","date","catch","Paper","length","CircularProgress","progress","overflowX","TableHead","TableRow","TableBody","idx","align","rel","href","Tooltip","html_url","login","name","FormGroup","row","FormControlLabel","control","Switch","checked","onChange","label","cmpOptions","numeric","stableSort","array","order","orderBy","desc","a","b","aa","getPropFast","localeCompare","cmp","el","sort","stableSortSort","thenBy","bb","emptyObj","obj","path","indexOf","split","s","reduce","acc","val","protocol","game","includes","trackUrl","id","imageUrl","replayUrl","userUrl","rows","sortable","id2","RankingsTableHead","onRequestSort","sortDirection","placement","enterDelay","TableSortLabel","direction","prop1","prop2","event","defaultState","rowsPerPage","minifiedStyle","RecordsTable","data","setState","newOrderBy","newThenBy","slice","tmx","user","target","wrs","formatScore","score","type","csec","tsec","Math","floor","sec","min","msec","hourScale","scaleLinear","domain","range","getDateDifferenceColor","passedHours","diff","minuteScale","RecordsTableHead","property","stats","useLiveDuration","tmxGame","wr","track","isFirst","rowSpan","records","replay","disabled","fontSize","fromNow","format","unit","totalTime","humanize","colSpan","totalPoints","level","category","RecordsTableSrcomHead","RecordsTableSrcom","srcom","media","gutterBottom","withTheme","labels","series","rest","isDarkTheme","push","colors","Array","fill","random","padStart","options","legend","show","responsive","breakpoint","chart","height","plotOptions","pie","donut","total","fab","margin","top","right","bottom","left","jumpToTop","smoothScroll","y","documentElement","scrollTop","window","requestAnimationFrame","scrollTo","FloatingActionButton","timeout","onScroll","clearTimeout","setTimeout","scrollX","scrollY","addEventListener","removeEventListener","useScroll","Zoom","in","Fab","baseApi","file","log","url","status","ok","padTop","match","setGame","gameName","setGameName","tab","setTab","params","Api","request","tracks","campaign","t","leaderboard","forEach","entry","r","Table","LinearProgress","SimpleTitle","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","Box","p","justify","alignContent","RankingsTable","Alert","elevation","defaultReplay","info","magic","version","settings","classId","headerSize","headerChunks","chunkOffset","ReplayView","useTheme","setReplay","parseGhost","setParseGhost","errorMessage","setErrorMessage","handleClose","reason","parseReplay","reader","FileReader","onload","result","Buffer","Replay","read","ghost","restData","removeData","Object","keys","_view","readAsArrayBuffer","handleChange","ev","files","removeDragData","dataTransfer","items","clear","clearData","openFile","click","Button","disableElevation","display","Checkbox","onDrop","preventDefault","i","kind","getAsFile","onDragOver","src","displayDataTypes","displayObjectSize","enableClipboard","Snackbar","autoHideDuration","severity","NotFoundView","rowsOficial","rowsTOTD","hasDuration","encodeURIComponent","rowsOfficial","official","linkToTrackmaniaIoProfile","useRowStyles","borderBottom","RecordsHistoryRow","pastMinutes","delta","setAfter","note","zone","join","RecordsRow","history","onClickHistory","defaultSort","monthDay","isLast","Collapse","unmountOnExit","aria-label","historyWr","totd","setStorage","setHistory","savedState","xaxis","categories","dataLabels","toolbar","foreColor","tooltip","bar","horizontal","seasonMenu","yearMenu","releaseDate","currentMonth","clone","seasons","0","1","2","3","season","month","year","MenuItem","toLowerCase","reverse","getTotdMenu","menu","isFirstYear","lastMonth","monthName","getInitialValue","calculateSetAfter","releasedAt","wrDate","diffSeconds","setAfterHours","setAfterMinutes","setBeforeHours","setBeforeMinutes","formControl","minWidth","CampaignTab","onChangeCampaign","onChangeYear","isOfficial","rankingsType","setRankingsType","onChangeRankingsType","tz","set","hour","minute","second","historyWrDate","replace","rankingsCountryType","FormControl","InputLabel","Select","RankingsTab","setCampaign","setYear","trackType","deltaSign","campaignName","campaigns","currentCampaign","label2","LongestDominationHead","scoreType","lastScore","abs","beatenBy","LongestLastingHead","LargestImprovementHead","rowl","StatisticsTab","setType","setTrackType","onChangeType","onChangeTrackType","StatsComponent","LongestDomination","LongestLasting","LargestImprovement","Set","views","marginTop","App","useReducer","createMuiTheme","light","red","dark","secondary","orange","A400","context","ThemeProvider","CssBaseline","Provider","basename","exact","TrackmaniaView","TrackmaniaHistoryView","GameView","Boolean","hostname","ReactDOM","render","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92db4629.chunk.js","sourcesContent":["import React from 'react';\n\nexport const useIsMounted = () => {\n    const ref = React.useRef(false);\n    React.useEffect(() => {\n        ref.current = true;\n        return () => (ref.current = false);\n    }, []);\n    return ref;\n};\n\nexport const useRenders = (debug) => {\n    const ref = React.useRef(0);\n    console.log(debug + ' renders: ', ++ref.current);\n};\n\nexport const useTitle = (title) => {\n    React.useEffect(() => {\n        document.title = title + ' - ' + document.location.host;\n    }, [title]);\n};\n\nexport const useScroll = () => {\n    const timeout = React.useRef(undefined);\n    const [state, setState] = React.useState({ x: 0, y: 0 });\n\n    const onScroll = React.useCallback(() => {\n        clearTimeout(timeout.current);\n        timeout.current = setTimeout(() => {\n            setState({ x: window.scrollX, y: window.scrollY });\n        }, 100);\n    }, [setState]);\n\n    React.useEffect(() => {\n        window.addEventListener('scroll', onScroll);\n        return () => {\n            clearTimeout(timeout.current);\n            window.removeEventListener('scroll', onScroll);\n        };\n    }, [onScroll]);\n\n    return state;\n};\n\nexport const useLocalStorage = (key, initialStorage) => {\n    const [storage, internalSetStorage] = React.useState(() => {\n        const storage = localStorage.getItem(key);\n        if (storage) {\n            try {\n                return JSON.parse(storage);\n            } catch {\n            }\n        }\n\n        localStorage.setItem(key, JSON.stringify(initialStorage));\n        return initialStorage;\n    });\n\n    const setStorage = React.useCallback((newStorage) => {\n        internalSetStorage(newStorage);\n        localStorage.setItem(key, JSON.stringify(newStorage));\n    }, [internalSetStorage]);\n\n    return [storage, setStorage];\n};\n","import React from 'react';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport MaterialAppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useTitle } from '../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingBottom: theme.spacing(8),\n    },\n    list: {\n        width: theme.spacing(25),\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n    drawer: {\n        width: 240,\n        flexShrink: 0,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    flex: {\n        flex: 1,\n    },\n    active: {\n        color: theme.palette.primary.main,\n    },\n}));\n\nconst pageLinks = [\n    { title: '404 - Page Not Found', link: null, inDrawer: false },\n    { title: 'trackmania-records', link: '/', inDrawer: false },\n    { title: 'Trackmania', link: '/trackmania', inDrawer: true, default: true },\n    { title: 'Trackmania 2', link: '/tm2', inDrawer: true, default: true },\n    { title: 'Trackmania Wii', link: '/tmwii', inDrawer: true, default: true },\n    { title: 'Nations Forever', link: '/tmnforever', inDrawer: true },\n    { title: 'United', link: '/united', inDrawer: true },\n    { title: 'Nations ESWC', link: '/nations', inDrawer: true },\n    /* { title: 'Sunrise', link: '/sunrise', inDrawer: true },\n    { title: 'Original', link: '/original', inDrawer: true }, */\n    { title: 'Replay Inspection', link: '/replay', inDrawer: false },\n    { title: 'About', link: '/about', inDrawer: false },\n];\n\nconst AppBar = ({ location }) => {\n    const [open, setOpen] = React.useState(false);\n\n    const page = React.useMemo(\n        () =>\n            pageLinks.find(\n                (x) => x.link === location.pathname || (x.link !== null && location.pathname.startsWith(x.link + '/')),\n            ) || pageLinks[0],\n        [location],\n    );\n\n    useTitle(page.title);\n\n    const showDrawer = (state) => () => {\n        setOpen(state);\n    };\n\n    const classes = useStyles();\n\n    const list = (\n        <div className={classes.list}>\n            <List>\n                <ListItem button key={0} component={RouterLink} to={'/'}>\n                    <ListItemText primary=\"Trackmania Records\" />\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n                {pageLinks\n                    .filter((x) => x.inDrawer)\n                    .map((item, index) => (\n                        <ListItem\n                            button\n                            key={index}\n                            component={RouterLink}\n                            to={item.link}\n                            className={item.title === page.title ? classes.active : undefined}\n                        >\n                            <ListItemText primary={item.title} />\n                        </ListItem>\n                    ))}\n                <Divider />\n                <List>\n                    <ListItem button key={0} component={RouterLink} to={'/replay'}>\n                        <ListItemText primary={'Replay Inspection'} />\n                    </ListItem>\n                    <ListItem button key={1} component={RouterLink} to={'/about'}>\n                        <ListItemText primary={'About'} />\n                    </ListItem>\n                </List>\n            </List>\n        </div>\n    );\n\n    return (\n        <div className={classes.root}>\n            <MaterialAppBar className={classes.appBar} position=\"fixed\">\n                <Toolbar>\n                    <Hidden lgUp>\n                        <IconButton className={classes.menuButton} onClick={showDrawer(true)} color=\"inherit\">\n                            <MenuIcon />\n                        </IconButton>\n                    </Hidden>\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        <Link component={RouterLink} to=\"/\" color=\"inherit\" underline=\"none\">\n                            Trackmania Records\n                        </Link>\n                    </Typography>\n                </Toolbar>\n            </MaterialAppBar>\n            <Hidden lgUp implementation=\"css\">\n                <SwipeableDrawer open={open} onClose={showDrawer(false)} onOpen={showDrawer(true)} variant=\"temporary\">\n                    <div tabIndex={0} role=\"button\" onClick={showDrawer(false)} onKeyDown={showDrawer(false)}>\n                        {list}\n                    </div>\n                </SwipeableDrawer>\n            </Hidden>\n            <Hidden mdDown implementation=\"css\">\n                <Drawer variant=\"permanent\">\n                    <div tabIndex={0} role=\"button\">\n                        {list}\n                    </div>\n                </Drawer>\n            </Hidden>\n        </div>\n    );\n};\n\nexport default withRouter(AppBar);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        marginBottom: 30,\n    },\n}));\n\nconst ViewContent = ({ children }) => {\n    const classes = useStyles();\n\n    return (\n        <Grid className={classes.root} container>\n            <Grid item xs={false} md={1} lg={2} />\n            <Grid item xs={12} md={10} lg={9}>\n                {children}\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default ViewContent;\n","import React from 'react';\n\nclass DarkMode {\n    constructor() {\n        this.enabled = localStorage.getItem('dark_mode') === 'true';\n    }\n    toggle() {\n        this.enabled = !this.enabled;\n        localStorage.setItem('dark_mode', this.enabled.toString());\n        return this;\n    }\n}\n\nconst initialState = {\n    darkMode: new DarkMode(),\n};\n\nexport const AppReducer = [\n    (state, { action }) => {\n        switch (action) {\n            case 'toggleDarkMode':\n                return {\n                    ...state,\n                    darkMode: state.darkMode.toggle(),\n                };\n            default:\n                throw new Error('Unknown action type.');\n        }\n    },\n    initialState,\n];\n\nexport default React.createContext(initialState);\n","import React from 'react';\nimport moment from 'moment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Switch from '@material-ui/core/Switch';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ViewContent from './ViewContent';\nimport AppState from '../AppState';\nimport { useIsMounted } from '../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    aboutBox: {\n        padding: theme.spacing(3),\n    },\n}));\n\nconst branches = [\n    { repo: 'NeKzor/trackmania-records', branch: 'master' },\n    { repo: 'NeKzBot/tmx-records', branch: 'api' },\n    { repo: 'NeKzor/trackmania-records', branch: 'gh-pages' },\n];\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst MinTableCell = (props) => <TableCell size=\"small\" {...props} />;\nconst Padding = () => <div style={{ paddingTop: '50px' }} />;\n\nconst getUpdate = () => {\n    const now = moment.utc();\n    let updateIn = moment().utc().endOf('day').add(17, 'hours');\n\n    if (updateIn.isBefore(now)) {\n        updateIn = moment().utc().endOf('day').add(1, 'day').add(17, 'hours');\n    }\n\n    const duration = moment.duration({ from: now, to: updateIn });\n    const hours = duration.get('hours');\n    const minutes = duration.get('minutes');\n    const seconds = duration.get('seconds');\n\n    const g = (value) => (value === 1 ? '' : 's');\n    return `${hours} hour${g(hours)}, ${minutes} minute${g(minutes)}, ${seconds} second${g(seconds)}`;\n};\n\nlet clockTimer = null;\n\nconst AboutView = () => {\n    const isMounted = useIsMounted();\n\n    const {\n        state: { darkMode },\n        dispatch,\n    } = React.useContext(AppState);\n\n    const [gitHub, setGitHub] = React.useState([]);\n    const [nextUpdate, setNextUpdate] = React.useState(getUpdate());\n\n    React.useEffect(() => {\n        clockTimer = setInterval(() => {\n            setNextUpdate(getUpdate());\n        }, 1000);\n\n        return () => clearInterval(clockTimer);\n    }, []);\n\n    const toggleDarkMode = () => {\n        dispatch({ action: 'toggleDarkMode' });\n    };\n\n    React.useEffect(() => {\n        const anyErrors = (err) => {\n            console.error(err);\n            if (isMounted.current) {\n                setGitHub(undefined);\n            }\n        };\n\n        Promise.all(branches.map(({ repo, branch }) => fetch(`https://api.github.com/repos/${repo}/commits/${branch}`)))\n            .then((results) => {\n                Promise.all(results.map((res) => res.json()))\n                    .then((branches) => {\n                        if (isMounted.current) {\n                            setGitHub(\n                                branches.map((branch) => ({\n                                    sha: branch.sha,\n                                    author: branch.author ? branch.author : branch.commit.author,\n                                    message: branch.commit.message,\n                                    date: branch.commit.author.date,\n                                })),\n                            );\n                        }\n                    })\n                    .catch(anyErrors);\n            })\n            .catch(anyErrors);\n    }, [isMounted]);\n\n    const classes = useStyles();\n\n    return (\n        <ViewContent>\n            <Paper className={classes.aboutBox}>\n                <Typography component=\"h2\" variant=\"h5\">\n                    Trackmania Campaign Records & Statistics\n                </Typography>\n                <br />\n                <Typography variant=\"body1\">\n                    The largest mirror for campaign world records of many Trackmania games.\n                </Typography>\n                <Typography variant=\"body1\">\n                    We list, rank and compare players who set the fastest and best runs.\n                </Typography>\n\n                <Padding />\n\n                <Typography variant=\"h5\">Next Update</Typography>\n                <br />\n                {nextUpdate}\n                <br />\n                <br />\n                For Trackmania we scan every 15 minutes, for everything else every 24 hours.\n\n                <Padding />\n\n                <Typography variant=\"h5\">Changelog</Typography>\n                <br />\n\n                {gitHub === undefined ? (\n                    <Typography variant=\"body1\">Unable to fetch status from GitHub.</Typography>\n                ) : gitHub.length === 0 ? (\n                    <CircularProgress className={classes.progress} />\n                ) : (\n                    <div style={{ overflowX: 'auto' }}>\n                        <Table size=\"small\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Branch</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Date</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Author</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Commit</Typography>\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {gitHub.map((commit, idx) => {\n                                    const { repo, branch } = branches[idx];\n                                    return (\n                                        <TableRow tabIndex={-1} key={idx} style={noWrap}>\n                                            <MinTableCell align=\"left\">\n                                                <Link\n                                                    color=\"inherit\"\n                                                    rel=\"noopener\"\n                                                    href={`https://github.com/${repo}/tree/${branch}`}\n                                                >\n                                                    {branch}\n                                                </Link>\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\" style={noWrap}>\n                                                <Tooltip title={moment(commit.date).toString()}>\n                                                    <span>{moment(commit.date).from()}</span>\n                                                </Tooltip>\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\">\n                                                {commit.author.html_url ? (\n                                                    <Link color=\"inherit\" rel=\"noopener\" href={commit.author.html_url}>\n                                                        {commit.author.login}\n                                                    </Link>\n                                                ) : (\n                                                    commit.author.name || 'n/a'\n                                                )}\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\" style={noWrap}>\n                                                <Tooltip title={commit.message}>\n                                                    <Link\n                                                        color=\"inherit\"\n                                                        rel=\"noopener\"\n                                                        href={`https://github.com/${repo}/commit/${commit.sha}`}\n                                                    >\n                                                        {commit.sha}\n                                                    </Link>\n                                                </Tooltip>\n                                            </MinTableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            </TableBody>\n                        </Table>\n                    </div>\n                )}\n\n                <Padding />\n\n                <Typography variant=\"h5\">Theme Settings</Typography>\n                <br />\n                <FormGroup row>\n                    <FormControlLabel\n                        control={<Switch checked={darkMode.enabled} onChange={toggleDarkMode} color=\"primary\" />}\n                        label=\"Dark Mode\"\n                    />\n                </FormGroup>\n\n                <Padding />\n\n                <Typography variant=\"h5\">Sources</Typography>\n                <br />\n                <Link rel=\"noopener\" href=\"https://www.tm-exchange.com\">\n                    tm-exchange.com\n                </Link>\n                <br />\n                <Link rel=\"noopener\" href=\"https://tm.mania-exchange.com\">\n                    tm.mania-exchange.com\n                </Link>\n                <br />\n                <Link rel=\"noopener\" href=\"https://www.speedrun.com/tmwii\">\n                    speedrun.com/tmwii\n                </Link>\n                <br />\n                live-services.trackmania.nadeo.live\n\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default AboutView;\n","const cmpOptions = { numeric: true };\n\nexport const stableSort = (array, order, orderBy) => {\n    const desc = (a, b) => {\n        const aa = getPropFast(a, orderBy).toString();\n        const bb = getPropFast(b, orderBy).toString();\n        return bb.localeCompare(aa, undefined, cmpOptions);\n    };\n\n    const cmp = order === 'desc' ? (a, b) => desc(a, b) : (a, b) => -desc(a, b);\n\n    const sort = (a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    };\n\n    return array\n        .map((el, index) => [el, index])\n        .sort(sort)\n        .map((el) => el[0]);\n};\nexport const stableSortSort = (array, order, orderBy, thenBy) => {\n    if (orderBy === thenBy || thenBy === undefined) {\n        return stableSort(array, order, orderBy);\n    }\n\n    const desc = (a, b) => {\n        let aa = getPropFast(a, orderBy).toString();\n        let bb = getPropFast(b, orderBy).toString();\n        const cmp = bb.localeCompare(aa, undefined, cmpOptions);\n        if (cmp !== 0) return cmp;\n        aa = getPropFast(a, thenBy).toString();\n        bb = getPropFast(b, thenBy).toString();\n        return bb.localeCompare(aa, undefined, cmpOptions);\n    };\n\n    const cmp = order === 'desc' ? (a, b) => desc(a, b) : (a, b) => -desc(a, b);\n\n    const sort = (a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    };\n\n    return array\n        .map((el, index) => [el, index])\n        .sort(sort)\n        .map((el) => el[0]);\n};\n\nconst emptyObj = {};\n\n// Util which returns the value of nested objects by string: getPropFast({ a: { b: 3 } }, 'a.b') === 3\nconst getPropFast = (obj, path) =>\n    (path.indexOf('.') !== -1\n        ? path\n              .split('.')\n              .filter((s) => s)\n              .reduce((acc, val) => acc && acc[val], obj)\n        : obj[path]) || emptyObj;\n","const protocol = (game) => (['nations', 'sunrise', 'original'].includes(game) ? 'http' : 'https');\n\nexport default (game) =>\n    game === 'tm2'\n        ? {\n              trackUrl: (id) => `https://tm.mania-exchange.com/tracks/${id}`,\n              imageUrl: (id) => `https://tm.mania-exchange.com/tracks/screenshot/normal/${id}`,\n              replayUrl: (id) => `https://tm.mania-exchange.com/replays/download/${id}`,\n              userUrl: (id) => `https://tm.mania-exchange.com/user/profile/${id}`,\n          }\n        : game === 'tmwii'\n        ? {\n              trackUrl: (id) => `https://speedrun.com/tmwii/${id}`,\n              imageUrl: (id) => undefined,\n              replayUrl: (id) => undefined,\n              userUrl: (id) => `https://www.speedrun.com/user/${id}`,\n          }\n        : (() => ({\n              trackUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/main.aspx?action=trackshow&id=${id}`,\n              imageUrl: (id) =>\n                  `${protocol(game)}://${game}.tm-exchange.com/getclean.aspx?action=trackscreenscreens&id=${id}`,\n              replayUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/get.aspx?action=recordgbx&id=${id}`,\n              userUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/main.aspx?action=usershow&id=${id}`,\n          }))();\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { stableSortSort } from '../utils/stableSort';\nimport tmx from '../utils/tmx';\n\nconst rows = [\n    { id: 'user.name', sortable: false, label: 'Player', align: 'left' },\n    { id: 'wrs', id2: 'duration', sortable: true, label: 'World Records', align: 'left' },\n    { id: 'duration', id2: 'wrs', sortable: true, label: 'Total Duration', align: 'left' },\n];\n\nconst RankingsTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (prop1, prop2) => (event) => {\n        onRequestSort(event, prop1, prop2);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id, row.id2)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'desc',\n    orderBy: 'wrs',\n    thenBy: 'duration',\n    page: 0,\n    rowsPerPage: 50,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTable = ({ data, game }) => {\n    const [{ order, orderBy, thenBy, rowsPerPage, page }, setState] = React.useState(defaultState);\n\n    const handleRequestSort = (_, prop1, prop2) => {\n        const newOrderBy = prop1;\n        const newThenBy = prop2;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n            thenBy: newThenBy,\n        }));\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RankingsTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n                <TableBody>\n                    {stableSortSort(data, order, orderBy, thenBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row) => (\n                            <TableRow tabIndex={-1} key={row.user.id}>\n                                <MinTableCell align=\"left\">\n                                    <Link\n                                        style={noWrap}\n                                        color=\"inherit\"\n                                        href={tmx(game).userUrl(row.user.id)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {row.user.name}\n                                    </Link>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">{row.wrs}</MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    {row.duration} day{row.duration === 1 ? '' : 's'}\n                                </MinTableCell>\n                            </TableRow>\n                        ))}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import { scaleLinear } from 'd3-scale';\nimport moment from 'moment';\n\nexport function formatScore(score, game, type = undefined) {\n    if (score === undefined || score === null) {\n        return score;\n    }\n\n    if (type === 'Stunts') {\n        return score + ' pts.';\n    }\n\n    if (game !== 'tm2') {\n        score /= 10;\n\n        let csec = score % 100;\n        let tsec = Math.floor(score / 100);\n        let sec = tsec % 60;\n        let min = Math.floor(tsec / 60);\n\n        return (\n            (min > 0 ? min + ':' : '') + (sec < 10 && min > 0 ? '0' + sec : sec) + '.' + (csec < 10 ? '0' + csec : csec)\n        );\n    }\n\n    let msec = score % 1000;\n    let tsec = Math.floor(score / 1000);\n    let sec = tsec % 60;\n    let min = Math.floor(tsec / 60);\n\n    return (\n        (min > 0 ? min + ':' : '') +\n        (sec < 10 && min > 0 ? '0' + sec : sec) +\n        '.' +\n        (msec < 100 ? (msec < 10 ? '00' + msec : '0' + msec) : msec)\n    );\n}\n\n// credits: https://github.com/iVerb1/Portal2Boards/blob/master/public/js/date.js#L21\nconst hourScale = scaleLinear()\n    .domain([0, 24, 14 * 24, 2 * 30 * 24])\n    .range(['#2eb82e', '#258e25', '#cca300', '#e67300']);\n\nexport function getDateDifferenceColor(date) {\n    const passedHours = moment().diff(moment(date), 'hours');\n    return passedHours <= 2 * 30 * 24 ? hourScale(passedHours) : undefined;\n}\n\nconst minuteScale = scaleLinear()\n    .domain([0, 8 * 60, 16 * 60, 24 * 60])\n    .range(['#2eb82e', '#cca300', '#e67300', '#e63200']);\n\nexport function getDateTimeDifferenceColor(pastMinutes) {\n    return pastMinutes >= 0 && pastMinutes <= 24 * 60 ? minuteScale(pastMinutes) : undefined;\n}\n","import React from 'react';\nimport moment from 'moment';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst seasonMenu = [];\nlet yearMenu = [];\nconst totdMenu = [];\n\nconst now = moment();\nconst releaseDate = moment('2020-07-01');\nconst currentMonth = releaseDate.clone();\n\nconst seasons = {\n    0: 'Winter',\n    1: 'Spring',\n    2: 'Summer',\n    3: 'Fall',\n};\n\nwhile (currentMonth.diff(now) < 0) {\n    const season = seasons[Math.floor(currentMonth.month() / 3)];\n    const year = currentMonth.format('YYYY');\n\n    if (yearMenu.indexOf(year) === -1) {\n        yearMenu.push(year);\n    }\n\n    seasonMenu.push(\n        <MenuItem value={`campaign/${season}-${year}`.toLowerCase()} key={seasonMenu.length}>\n            {season} {year}\n        </MenuItem>,\n    );\n\n    currentMonth.add(3, 'months');\n}\n\nseasonMenu.reverse();\ntotdMenu.reverse();\nyearMenu.reverse();\n\nseasonMenu.push(\n    <MenuItem value=\"campaign/training\" key={seasonMenu.length}>\n        Training\n    </MenuItem>,\n);\n\nyearMenu = yearMenu.map((year) => {\n    return (\n        <MenuItem value={year} key={year}>\n            {year}\n        </MenuItem>\n    );\n});\n\nconst getTotdMenu = (year) => {\n    const menu = [];\n\n    const isFirstYear = year.toString() === releaseDate.year().toString();\n\n    const month = isFirstYear ? releaseDate.clone() : moment(`${year}-01-01`);\n    const lastMonth = isFirstYear ? 11 : now.month();\n\n    for (let i = month.month(); i <= lastMonth; ++i) {\n        const monthName = month.format('MMMM');\n\n        menu.push(\n            <MenuItem value={`totd/${monthName}-${year}`.toLowerCase()} key={menu.length}>\n                {monthName} {year}\n            </MenuItem>,\n        );\n\n        month.add(1, 'month');\n    }\n\n    return menu;\n};\n\nconst getInitialValue = (official, year = undefined) => {\n    const isFirstYear = year && year.toString() === releaseDate.year().toString();\n    const month = (isFirstYear ? releaseDate : now).clone();\n\n    return (official\n        ? `campaign/${seasons[Math.floor(now.month() / 3)]}-${now.year()}`\n        : `totd/${month.format('MMMM')}-${year ? year : now.year()}`\n    ).toLowerCase();\n};\n\nexport { seasonMenu, yearMenu, getTotdMenu, getInitialValue };\n","import React from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { stableSort } from '../utils/stableSort';\nimport tmx from '../utils/tmx';\nimport { formatScore, getDateDifferenceColor } from '../utils/tools';\n\nconst rows = [\n    { id: 'track.name', sortable: true, label: 'Track', align: 'left' },\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\n    { id: 'date', sortable: true, label: 'Date', align: 'left' },\n    { id: 'duration', sortable: true, label: 'Duration', align: 'left' },\n];\n\nconst RecordsTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'asc',\n    orderBy: 'track.name',\n    page: 0,\n    rowsPerPage: 250,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTable = ({ data, game, stats, useLiveDuration }) => {\n    const [{ order, orderBy, rowsPerPage, page }, setState] = React.useState(defaultState);\n\n    const handleRequestSort = (_, property) => {\n        const newOrderBy = property;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n        }));\n    };\n\n    const tmxGame = tmx(game);\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RecordsTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n                <TableBody>\n                    {stableSort(data, order, orderBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((wr) => {\n                            const score = formatScore(wr.score, game, wr.track.type);\n\n                            return (\n                                <TableRow tabIndex={-1} key={`${wr.track.name}-${wr.user.id}`}>\n                                    {(wr.track.isFirst || orderBy !== 'track.name') && (\n                                        <MinTableCell\n                                            style={noWrap}\n                                            rowSpan={orderBy !== 'track.name' ? 1 : wr.track.records}\n                                            align=\"left\"\n                                        >\n                                            <Link\n                                                color=\"inherit\"\n                                                href={tmxGame.trackUrl(wr.track.id)}\n                                                rel=\"noreferrer\"\n                                                target=\"_blank\"\n                                            >\n                                                {wr.track.name}\n                                            </Link>\n                                        </MinTableCell>\n                                    )}\n                                    <MinTableCell align=\"left\">\n                                        <Tooltip title=\"Download Replay\" placement=\"bottom-end\" enterDelay={300}>\n                                            <Link\n                                                style={noWrap}\n                                                color=\"inherit\"\n                                                href={tmxGame.replayUrl(wr.replay)}\n                                                rel=\"noreferrer\"\n                                                target=\"_blank\"\n                                            >\n                                                {score}\n                                            </Link>\n                                        </Tooltip>\n                                        {game === 'tm2' && moment(wr.date).isBefore('2017-05-09') && (\n                                            <Tooltip\n                                                title=\"This run was done on an older game version.\"\n                                                placement=\"bottom-end\"\n                                                enterDelay={300}\n                                            >\n                                                <span>\n                                                    <IconButton size=\"small\" disabled>\n                                                        <WarningIcon fontSize=\"inherit\" />\n                                                    </IconButton>\n                                                </span>\n                                            </Tooltip>\n                                        )}\n                                    </MinTableCell>\n                                    <MinTableCell align=\"left\">\n                                        <Link\n                                            style={noWrap}\n                                            color=\"inherit\"\n                                            href={tmxGame.userUrl(wr.user.id)}\n                                            rel=\"noreferrer\"\n                                            target=\"_blank\"\n                                        >\n                                            {wr.user.name}\n                                        </Link>\n                                    </MinTableCell>\n                                    <MinTableCell align=\"left\">\n                                        <Tooltip\n                                            title={<Moment fromNow>{wr.date}</Moment>}\n                                            placement=\"bottom-end\"\n                                            enterDelay={300}\n                                        >\n                                            <Moment\n                                                style={{ color: getDateDifferenceColor(wr.date), ...noWrap }}\n                                                format=\"YYYY-MM-DD\"\n                                            >\n                                                {wr.date}\n                                            </Moment>\n                                        </Tooltip>\n                                    </MinTableCell>\n                                    <MinTableCell align=\"left\">\n                                        <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\n                                            {useLiveDuration ? (\n                                                <Moment style={noWrap} diff={wr.date} unit=\"days\"></Moment>\n                                            ) : (\n                                                <span>{wr.duration}</span>\n                                            )}\n                                        </Tooltip>\n                                    </MinTableCell>\n                                </TableRow>\n                            );\n                        })}\n                </TableBody>\n                <TableBody>\n                    {stats.totalTime > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">Total Time</MinTableCell>\n                            <MinTableCell>\n                                <Tooltip\n                                    title={moment.duration(stats.totalTime, 'ms').humanize()}\n                                    placement=\"bottom-end\"\n                                    enterDelay={300}\n                                >\n                                    <span>{formatScore(stats.totalTime, game)}</span>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell colSpan={3}></MinTableCell>\n                        </TableRow>\n                    )}\n                    {stats.totalPoints > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">Total Points</MinTableCell>\n                            <MinTableCell>\n                                <span>{formatScore(stats.totalPoints, game, 'Stunts')}</span>\n                            </MinTableCell>\n                            <MinTableCell colSpan={3}></MinTableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","export default {\n    trackUrl: (level, category) => `https://speedrun.com/tmwii/${level}#${category}`,\n    userUrl: (name) => `https://www.speedrun.com/user/${name}`,\n    runUrl: (id) => `https://www.speedrun.com/tmwii/run/${id}`,\n};\n","import React from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { stableSort } from '../utils/stableSort';\nimport srcom from '../utils/srcom';\nimport { formatScore, getDateDifferenceColor } from '../utils/tools';\n\nconst rows = [\n    { id: 'track.name', sortable: true, label: 'Track', align: 'left' },\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\n    { id: 'date', sortable: true, label: 'Date', align: 'left' },\n    { id: 'duration', sortable: true, label: 'Duration', align: 'left' },\n    { id: 'replay', sortable: false, label: 'Video', align: 'left' },\n];\n\nconst RecordsTableSrcomHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'asc',\n    orderBy: 'track.name',\n    page: 0,\n    rowsPerPage: 250,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTableSrcom = ({ data, game, stats, useLiveDuration, category }) => {\n    const [{ order, orderBy, rowsPerPage, page }, setState] = React.useState(defaultState);\n\n    const handleRequestSort = (_, property) => {\n        const newOrderBy = property;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n        }));\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RecordsTableSrcomHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n                <TableBody>\n                    {stableSort(data, order, orderBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((wr) => (\n                            <TableRow tabIndex={-1} key={`${wr.track.name}-${wr.user.id}`}>\n                                {(wr.track.isFirst || orderBy !== 'track.name') && (\n                                    <MinTableCell\n                                        style={noWrap}\n                                        rowSpan={orderBy !== 'track.name' ? 1 : wr.track.records}\n                                        align=\"left\"\n                                    >\n                                        <Link\n                                            color=\"inherit\"\n                                            href={srcom.trackUrl(wr.track.name, category)}\n                                            rel=\"noreferrer\"\n                                            target=\"_blank\"\n                                        >\n                                            {wr.track.name}\n                                        </Link>\n                                    </MinTableCell>\n                                )}\n                                <MinTableCell align=\"left\">\n                                    <Link\n                                        style={noWrap}\n                                        color=\"inherit\"\n                                        href={srcom.runUrl(wr.id)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {formatScore(wr.score, game)}\n                                    </Link>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Link\n                                        style={noWrap}\n                                        color=\"inherit\"\n                                        href={srcom.userUrl(wr.user.name)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {wr.user.name}\n                                    </Link>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Tooltip\n                                        title={<Moment fromNow>{wr.date}</Moment>}\n                                        placement=\"bottom-end\"\n                                        enterDelay={300}\n                                    >\n                                        <Moment\n                                            style={{ color: getDateDifferenceColor(wr.date), ...noWrap }}\n                                            format=\"YYYY-MM-DD\"\n                                        >\n                                            {wr.date}\n                                        </Moment>\n                                    </Tooltip>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\n                                        {useLiveDuration ? (\n                                            <Moment style={noWrap} diff={wr.date} unit=\"days\"></Moment>\n                                        ) : (\n                                            <span>{wr.duration}</span>\n                                        )}\n                                    </Tooltip>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Tooltip title=\"Watch Run\" placement=\"bottom-end\" enterDelay={300}>\n                                        <IconButton size=\"small\" href={wr.media} target=\"_blank\">\n                                            <PlayArrowIcon fontSize=\"inherit\" />\n                                        </IconButton>\n                                    </Tooltip>\n                                </MinTableCell>\n                            </TableRow>\n                        ))}\n                </TableBody>\n                <TableBody>\n                    {stats.totalTime > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">Total Time</MinTableCell>\n                            <MinTableCell>\n                                <Tooltip\n                                    title={moment.duration(stats.totalTime, 'ms').humanize()}\n                                    placement=\"bottom-end\"\n                                    enterDelay={300}\n                                >\n                                    <span>{formatScore(stats.totalTime, game)}</span>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell colSpan={4}></MinTableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTableSrcom;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default ({ data, props }) => (\n    <Typography variant=\"h5\" gutterBottom style={{ padding: '50px 0px 50px 50px' }} {...props}>\n        {data}\n    </Typography>\n);\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { withTheme } from '@material-ui/styles';\n\nconst randomColor = () => '#' + ((Math.random() * 0xffffff) << 0).toString(16).padStart(6, '0');\n\nconst MAX_DATAPOINTS = 30;\n\nconst RecordsChart = ({ labels, series, title, theme, rest = true }) => {\n    const isDarkTheme = theme.palette.type === 'dark';\n\n    if (rest && series.length > MAX_DATAPOINTS) {\n        const rest = series.slice(MAX_DATAPOINTS).reduce((acc, val) => (acc += val), 0);\n\n        series = series.slice(0, MAX_DATAPOINTS);\n        labels = labels.slice(0, MAX_DATAPOINTS);\n\n        series.push(rest);\n        labels.push('Rest');\n    }\n\n    const colors = new Array(series.length).fill(0).map(() => randomColor());\n\n    return (\n        <Chart\n            options={{\n                labels,\n                legend: {\n                    show: false,\n                },\n                responsive: [\n                    {\n                        breakpoint: 380,\n                        options: {\n                            chart: {\n                                height: '300px',\n                            },\n                        },\n                    },\n                ],\n                plotOptions: {\n                    pie: {\n                        donut: {\n                            labels: {\n                                show: true,\n                                name: {\n                                    show: true,\n                                },\n                                value: {\n                                    show: true,\n                                    color: isDarkTheme ? 'white' : 'black',\n                                },\n                                total: {\n                                    show: true,\n                                    label: title,\n                                    color: isDarkTheme ? 'white' : 'black',\n                                },\n                            },\n                        },\n                    },\n                },\n                colors,\n            }}\n            series={series}\n            type=\"donut\"\n            height=\"400\"\n        />\n    );\n};\n\nexport default withTheme(RecordsChart);\n","import React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport Zoom from '@material-ui/core/Zoom';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { useScroll } from '../Hooks';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((_) => ({\n    fab: {\n        margin: 0,\n        top: 'auto',\n        right: 30,\n        bottom: 30,\n        left: 'auto',\n        position: 'fixed',\n    },\n}));\n\nconst jumpToTop = () => {\n    const smoothScroll = () => {\n        const y = document.documentElement.scrollTop;\n        if (y > 0) {\n            window.requestAnimationFrame(smoothScroll);\n            window.scrollTo(0, y - y / 5);\n        }\n    };\n    smoothScroll();\n};\n\nconst FloatingActionButton = () => {\n    const { y } = useScroll();\n    const classes = useStyles();\n\n    return (\n        <Zoom in={y !== 0} timeout={1000}>\n            <Fab title=\"Jump to top\" color=\"primary\" className={classes.fab} onClick={jumpToTop}>\n                <KeyboardArrowUpIcon />\n            </Fab>\n        </Zoom>\n    );\n};\n\nexport default FloatingActionButton;\n","class Api {\n    constructor() {\n        this.baseApi =\n            process.env.NODE_ENV === 'development'\n                ? 'http://localhost:8080'\n                : 'https://raw.githubusercontent.com/NeKzBot/tmx-records/api';\n    }\n    async request(game, file) {\n        const res = await fetch(`${this.baseApi}/${game}/${file || 'latest'}.json`);\n        console.log(`GET ${res.url} (${res.status})`);\n\n        if (!res.ok) {\n            throw res;\n        }\n\n        return await res.json();\n    }\n}\n\nexport default new Api();\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport moment from 'moment';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport RankingsTable from '../components/RankingsTable';\nimport RecordsTable from '../components/RecordsTable';\nimport RecordsTableSrcom from '../components/RecordsTableSrcom';\nimport SimpleTitle from '../components/SimpleTitle';\nimport RecordsChart from '../components/RecordsChart';\nimport { makeStyles } from '@material-ui/core';\nimport FloatingActionButton from '../components/FloatingActionButton';\nimport Api from '../Api';\nimport { useIsMounted } from '../Hooks';\nimport ViewContent from './ViewContent';\n\nconst useStyles = makeStyles((_) => ({\n    padTop: {\n        paddingTop: '70px',\n    },\n}));\n\nconst GameView = ({ match }) => {\n    const isMounted = useIsMounted();\n\n    const [game, setGame] = React.useState(undefined);\n    const [gameName, setGameName] = React.useState('tm2');\n    const [tab, setTab] = React.useState(0);\n\n    const page = match.params[0];\n    const date = match.params.date;\n    const useLiveDuration = date === undefined || date === 'latest';\n\n    React.useEffect(() => {\n        setTab(0);\n        setGame(undefined);\n    }, [page]);\n\n    React.useEffect(() => {\n        (async () => {\n            const game = await Api.request(page, date);\n\n            if (game[0] && game[0].tracks[0].wrs) {\n                for (const campaign of game) {\n                    if (campaign.stats.totalPoints === undefined) {\n                        campaign.stats.totalTime = campaign.tracks\n                            .filter((t) => t.type !== 'Stunts')\n                            .map((t) => t.wrs[0].score)\n                            .reduce((a, b) => a + b, 0);\n                        campaign.stats.totalPoints = campaign.tracks\n                            .filter((t) => t.type === 'Stunts')\n                            .map((t) => t.wrs[0].score)\n                            .reduce((a, b) => a + b, 0);\n                    }\n\n                    const rows = [];\n                    for (const track of campaign.tracks) {\n                        for (const wr of track.wrs) {\n                            const duration = useLiveDuration ? moment().diff(moment(wr.date), 'd') : wr.duration;\n                            rows.push({\n                                track: {\n                                    id: track.id,\n                                    name: track.name,\n                                    type: track.type,\n                                    isFirst: wr === track.wrs[0],\n                                    records: track.wrs.length,\n                                },\n                                ...wr,\n                                duration,\n                            });\n                        }\n                    }\n\n                    campaign.tracks = rows;\n\n                    if (useLiveDuration) {\n                        campaign.leaderboard.forEach((entry, idx) => {\n                            campaign.leaderboard[idx].duration = campaign.tracks\n                                .filter((r) => r.user.id === entry.user.id)\n                                .map((r) => r.duration)\n                                .reduce((a, b) => a + b, 0);\n                        });\n                    }\n                }\n            }\n\n            if (!isMounted.current) return;\n            setGameName(page);\n            setGame(game);\n        })();\n    }, [isMounted, page, date, useLiveDuration]);\n\n    const handleTab = (_, newValue) => {\n        setTab(newValue);\n    };\n\n    const Table = gameName === 'tmwii' ? RecordsTableSrcom : RecordsTable;\n\n    const classes = useStyles();\n\n    return (\n        <ViewContent>\n            <Paper>\n                {game === undefined ? (\n                    <LinearProgress />\n                ) : game.length === 0 ? (\n                    <SimpleTitle data=\"No data.\" />\n                ) : (\n                    <>\n                        {game.length > 1 && (\n                            <Tabs\n                                value={tab}\n                                onChange={handleTab}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                                variant=\"scrollable\"\n                                scrollButtons=\"auto\"\n                            >\n                                {game.map((campaign) => (\n                                    <Tab label={campaign.name} key={campaign.name} />\n                                ))}\n                            </Tabs>\n                        )}\n                        <Typography component=\"div\" role=\"tabpanel\">\n                            <Box p={3}>\n                                <Grid container direction=\"column\" justify=\"center\">\n                                    <Grid item xs={12}>\n                                        <Table\n                                            data={game[tab].tracks}\n                                            game={gameName}\n                                            stats={game[tab].stats}\n                                            useLiveDuration={useLiveDuration}\n                                            category={game[tab].name}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} className={classes.padTop}>\n                                        <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                                            <Grid item xs={12} md={6}>\n                                                <RankingsTable data={game[tab].leaderboard} game={page} />\n                                            </Grid>\n                                            <Grid item xs={12} md={6} className={classes.padTop}>\n                                                <Grid container direction=\"column\" justify=\"center\">\n                                                    <Grid item xs={12}>\n                                                        <RecordsChart\n                                                            title=\"WRs\"\n                                                            labels={game[tab].leaderboard.map((row) => row.user.name)}\n                                                            series={game[tab].leaderboard.map((row) => row.wrs)}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} className={classes.padTop}>\n                                                        <RecordsChart\n                                                            title=\"Duration\"\n                                                            labels={game[tab].leaderboard.map((row) => row.user.name)}\n                                                            series={game[tab].leaderboard.map((row) => row.duration)}\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Box>\n                        </Typography>\n                    </>\n                )}\n            </Paper>\n            <FloatingActionButton />\n        </ViewContent>\n    );\n};\n\nexport default withRouter(GameView);\n","import React from 'react';\nimport ReactJson from 'react-json-view';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport ViewContent from './ViewContent';\nimport { useIsMounted } from '../Hooks';\nimport { useTheme } from '@material-ui/core';\n\nconst Alert = (props) => {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n};\n\nconst defaultReplay = {\n    info: 'drag & drop replay here :)',\n    magic: 'GBX',\n    version: 6,\n    settings: 'BUCR',\n    classId: 50933760,\n    headerSize: 331,\n    headerChunks: 2,\n    chunkOffset: 348,\n};\n\nconst ReplayView = () => {\n    const isMounted = useIsMounted();\n    const theme = useTheme();\n    const file = React.useRef(null);\n\n    const [replay, setReplay] = React.useState(defaultReplay);\n    const [parseGhost, setParseGhost] = React.useState(true);\n    const [errorMessage, setErrorMessage] = React.useState(false);\n\n    const handleClose = (_, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setErrorMessage(false);\n    };\n\n    const handleParseGhost = (event) => {\n        setParseGhost(event.target.checked);\n    };\n\n    const parseReplay = React.useCallback(\n        (file) => {\n            if (!file) return;\n\n            const reader = new FileReader();\n            reader.onload = ({ target: { result } }) => {\n                try {\n                    if (!isMounted.current) return;\n                    setReplay(defaultReplay);\n                    setErrorMessage(false);\n\n                    const { Buffer, Replay } = window;\n\n                    const replay = (window.replay = Replay.default().read(Buffer.from(result), { parseGhost }));\n                    if (!isMounted.current) return;\n\n                    const removeData = (obj) => {\n                        Object.keys(obj).forEach((key) => {\n                            if (key === '_view') {\n                                delete obj._view;\n                            } else if (typeof obj[key] === 'object') {\n                                removeData(obj[key]);\n                            }\n                        });\n                    };\n\n                    if (replay.ghost) {\n                        delete replay.ghost.restData;\n                    }\n\n                    removeData(replay);\n                    setReplay(replay);\n                } catch (err) {\n                    if (isMounted.current) {\n                        setErrorMessage(err.message);\n                    }\n                }\n            };\n            reader.readAsArrayBuffer(file);\n        },\n        [isMounted, parseGhost, setReplay, setErrorMessage],\n    );\n\n    const handleChange = React.useCallback((ev) => parseReplay(ev.target.files[0]), [parseReplay]);\n\n    const dropHandler = (ev) => {\n        ev.preventDefault();\n\n        const files = [];\n\n        if (ev.dataTransfer.items) {\n            for (let i = 0; i < ev.dataTransfer.items.length; ++i) {\n                if (ev.dataTransfer.items[i].kind === 'file') {\n                    files.push(ev.dataTransfer.items[i].getAsFile());\n                }\n            }\n        }\n\n        parseReplay(files[0]);\n        removeDragData(ev);\n    };\n\n    const dragOverHandler = (ev) => {\n        ev.preventDefault();\n    };\n\n    const removeDragData = (ev) => {\n        if (ev.dataTransfer.items) {\n            ev.dataTransfer.items.clear();\n        } else {\n            ev.dataTransfer.clearData();\n        }\n    };\n\n    React.useEffect(() => {\n        file.current && file.current.addEventListener('change', handleChange);\n        return () => file.current && file.current.removeEventListener('change', handleChange);\n    }, [file, handleChange]);\n\n    const openFile = React.useCallback(() => {\n        file.current.click();\n    }, [file]);\n\n    return (\n        <ViewContent>\n            <Paper style={{ padding: '20px 20px 20px 20px' }}>\n                <Button variant=\"contained\" color=\"primary\" disableElevation onClick={openFile}>\n                    Open file\n                </Button>\n                <input type=\"file\" ref={file} style={{ display: 'none' }} />\n                <FormControlLabel\n                    style={{ marginLeft: '20px' }}\n                    control={<Checkbox color=\"primary\" checked={parseGhost} onChange={handleParseGhost} />}\n                    label=\"Parse Ghost\"\n                />\n                <div style={{ paddingBottom: '20px' }}></div>\n                <div onDrop={dropHandler} onDragOver={dragOverHandler}>\n                    <ReactJson\n                        name=\"replay\"\n                        style={{ fontSize: '14px' }}\n                        src={replay}\n                        theme={theme.palette.type === 'light' ? 'bright:inverted' : 'solarized'}\n                        displayDataTypes={false}\n                        displayObjectSize={false}\n                        enableClipboard={false}\n                    />\n                </div>\n                <Snackbar open={errorMessage !== false} autoHideDuration={6000} onClose={handleClose}>\n                    <Alert onClose={handleClose} severity=\"error\">\n                        {errorMessage}\n                    </Alert>\n                </Snackbar>\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default ReplayView;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport SimpleTitle from '../components/SimpleTitle';\nimport ViewContent from './ViewContent';\n\nconst NotFoundView = () => {\n    return (\n        <ViewContent>\n            <Paper>\n                <SimpleTitle data=\"Page not found :(\" />\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default NotFoundView;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { stableSort, stableSortSort } from '../utils/stableSort';\n\nconst rowsOficial = [\n    { id: 'user.name', sortable: false, label: 'Player', align: 'left' },\n    { id: 'wrs', id2: 'duration', sortable: true, label: 'World Records', align: 'left' },\n    { id: 'duration', id2: 'wrs', sortable: true, label: 'Total Duration', align: 'left' },\n];\n\nconst rowsTOTD = [\n    { id: 'user.name', sortable: false, label: 'Player', align: 'left' },\n    { id: 'wrs', sortable: true, label: 'World Records', align: 'left' },\n];\n\nconst RankingsTableHead = ({ order, orderBy, onRequestSort, hasDuration }) => {\n    const createSortHandler = (prop1, prop2) => (event) => {\n        onRequestSort(event, prop1, prop2);\n    };\n\n    const rows = hasDuration ? rowsOficial : rowsTOTD;\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id, row.id2)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'desc',\n    orderBy: 'wrs',\n    thenBy: 'duration',\n    page: 0,\n    rowsPerPage: 50,\n};\n\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst linkToTrackmaniaIoProfile = (user) => {\n    return `https://trackmania.io/#/player/${encodeURIComponent(user.id)}`;\n};\n\nconst RecordsTable = ({ data, hasDuration }) => {\n    const [{ order, orderBy, thenBy }, setState] = React.useState(defaultState);\n\n    const handleRequestSort = (_, prop1, prop2) => {\n        const newOrderBy = prop1;\n        const newThenBy = prop2;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n            thenBy: newThenBy,\n        }));\n    };\n\n    React.useEffect(() => {\n        setState((s) => ({ ...s, orderBy: 'wrs', thenBy: 'wrs' }));\n    }, [data, hasDuration]);\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RankingsTableHead\n                    order={order}\n                    orderBy={orderBy}\n                    onRequestSort={handleRequestSort}\n                    hasDuration={hasDuration}\n                />\n                <TableBody>\n                    {(hasDuration ? stableSortSort : stableSort)(data, order, orderBy, thenBy).map((row) => (\n                        <TableRow tabIndex={-1} key={row.user.name}>\n                            <MinTableCell align=\"left\">\n                                <Link\n                                    color=\"inherit\"\n                                    href={linkToTrackmaniaIoProfile(row.user)}\n                                    rel=\"noreferrer\"\n                                    target=\"_blank\"\n                                >\n                                    {row.user.name}\n                                </Link>\n                            </MinTableCell>\n                            <MinTableCell align=\"left\">{row.wrs}</MinTableCell>\n                            {hasDuration && (\n                                <MinTableCell align=\"left\">\n                                    {row.duration} day{row.duration === 1 ? '' : 's'}\n                                </MinTableCell>\n                            )}\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import React from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport HistoryIcon from '@material-ui/icons/History';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { stableSort } from '../utils/stableSort';\nimport { useLocalStorage, useRenders } from '../Hooks';\nimport { formatScore, getDateDifferenceColor, getDateTimeDifferenceColor } from '../utils/tools';\n\nconst rowsOfficial = [\n    { id: 'track.name', sortable: true, label: 'Track', align: 'left' },\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\n    { id: 'zone', sortable: true, label: 'Zone', align: 'left' },\n    { id: 'date', sortable: true, label: 'Date', align: 'left' },\n    { id: 'duration', sortable: true, label: 'Duration', align: 'left' },\n];\n\nconst rowsTOTD = [\n    { id: 'track.monthDay', sortable: true, label: 'Day', align: 'left' },\n    { id: 'track.name', sortable: true, label: 'Track', align: 'left' },\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\n    { id: 'zone', sortable: true, label: 'Zone', align: 'left' },\n];\n\nconst RecordsTableHead = ({ order, orderBy, onRequestSort, official }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    const rows = official ? rowsOfficial : rowsTOTD;\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row, idx) => (\n                    <TableCell\n                        key={idx}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                        colSpan={idx === rows.length - 1 ? 2 : 1}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'asc',\n    orderBy: 'track.name',\n    page: 0,\n    rowsPerPage: 250,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst linkToTrackmaniaIoLeaderboard = (track) => {\n    return `https://trackmania.io/#/leaderboard/${encodeURIComponent(track.id)}`;\n};\n\nconst linkToTrackmaniaIoProfile = (user) => {\n    return `https://trackmania.io/#/player/${encodeURIComponent(user.id)}`;\n};\n\nconst useRowStyles = makeStyles({\n    root: {\n        '& > *': {\n            borderBottom: 'unset',\n        },\n    },\n});\n\nconst RecordsHistoryRow = ({ wr, official }) => {\n    const score = formatScore(wr.score, 'tm2');\n    const delta = wr.delta !== 0 ? formatScore(wr.delta, 'tm2') : null;\n\n    return (\n        <TableRow tabIndex={-1}>\n            {official && (\n                <MinTableCell align=\"left\">\n                    <Tooltip title={<Moment format=\"HH:mm\">{wr.date}</Moment>} placement=\"bottom-end\" enterDelay={300}>\n                        <Moment style={{ color: getDateDifferenceColor(wr.date), ...noWrap }} format=\"YYYY-MM-DD\">\n                            {wr.date}\n                        </Moment>\n                    </Tooltip>\n                </MinTableCell>\n            )}\n            {!official && (\n                <MinTableCell align=\"left\">\n                    <Tooltip title={wr.setAfter} placement=\"bottom-end\" enterDelay={300}>\n                        <Moment style={{ color: getDateTimeDifferenceColor(wr.pastMinutes), ...noWrap }} format=\"HH:mm\">\n                            {wr.date}\n                        </Moment>\n                    </Tooltip>\n                </MinTableCell>\n            )}\n            <MinTableCell align=\"left\">\n                {score}\n                {wr.note && (\n                    <Tooltip title={wr.note} placement=\"bottom-end\" enterDelay={300}>\n                        <span>\n                            <IconButton size=\"small\" disabled>\n                                <WarningIcon fontSize=\"inherit\" />\n                            </IconButton>\n                        </span>\n                    </Tooltip>\n                )}\n            </MinTableCell>\n            <MinTableCell align=\"left\">{delta ? '-' + delta : ''}</MinTableCell>\n            <MinTableCell align=\"left\">\n                <Link color=\"inherit\" href={linkToTrackmaniaIoProfile(wr.user)} rel=\"noreferrer\" target=\"_blank\">\n                    {wr.user.name}\n                </Link>\n            </MinTableCell>\n            <MinTableCell align=\"left\">\n                <Tooltip title={wr.user.zone.map((zone) => zone.name).join(' | ')} placement=\"bottom\" enterDelay={300}>\n                    <span>{wr.user.zone[2].name}</span>\n                </Tooltip>\n            </MinTableCell>\n            <MinTableCell align=\"left\">\n                <Tooltip title=\"Download Ghost\" placement=\"bottom\" enterDelay={300}>\n                    <IconButton\n                        size=\"small\"\n                        style={noWrap}\n                        color=\"inherit\"\n                        href={'https://prod.trackmania.core.nadeo.online/storageObjects/' + wr.replay}\n                        rel=\"noreferrer\"\n                        target=\"_blank\"\n                        disabled={!wr.replay}\n                    >\n                        <SaveAltIcon fontSize=\"inherit\" />\n                    </IconButton>\n                </Tooltip>\n                {/* {wr.internal_note && (\n                    <Tooltip\n                        title={wr.internal_note}\n                        placement=\"bottom-end\"\n                        enterDelay={300}\n                    >\n                        <span>\n                            <IconButton size=\"small\" disabled>\n                                <WarningIcon fontSize=\"inherit\" />\n                            </IconButton>\n                        </span>\n                    </Tooltip>\n                )} */}\n            </MinTableCell>\n        </TableRow>\n    );\n};\n\nconst RecordsRow = ({ wr, official, orderBy, useLiveDuration, history, onClickHistory }) => {\n    const score = formatScore(wr.score, 'tm2');\n    const delta = wr.delta !== 0 ? formatScore(wr.delta, 'tm2') : null;\n\n    const classes = useRowStyles();\n\n    const open = history === wr.track.id;\n    const defaultSort = orderBy === 'track.monthDay' || orderBy === 'track.name';\n\n    return (\n        <>\n            <TableRow tabIndex={-1}>\n                {!official && (wr.track.isFirst || !defaultSort) && (\n                    <MinTableCell align=\"left\" rowSpan={defaultSort ? wr.track.records : 1}>\n                        {wr.track.monthDay}\n                    </MinTableCell>\n                )}\n                {(wr.track.isFirst || !defaultSort) && (\n                    <MinTableCell style={noWrap} rowSpan={defaultSort ? wr.track.records : 1} align=\"left\">\n                        <Link\n                            color=\"inherit\"\n                            href={linkToTrackmaniaIoLeaderboard(wr.track)}\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                        >\n                            {wr.track.name}\n                        </Link>\n                    </MinTableCell>\n                )}\n                <MinTableCell align=\"left\">\n                    {official && delta && (\n                        <Tooltip title={<span>-{delta} to former record</span>} placement=\"bottom\" enterDelay={300}>\n                            <span>{score}</span>\n                        </Tooltip>\n                    )}\n                    {official && !delta && <span>{score}</span>}\n                    {!official && delta && (\n                        <Tooltip title={<span>-{delta} to former record</span>} placement=\"bottom\" enterDelay={300}>\n                            <span>{score}</span>\n                        </Tooltip>\n                    )}\n                    {!official && !delta && <span>{score}</span>}\n                </MinTableCell>\n                <MinTableCell style={noWrap} align=\"left\">\n                    <Link color=\"inherit\" href={linkToTrackmaniaIoProfile(wr.user)} rel=\"noreferrer\" target=\"_blank\">\n                        {wr.user.name}\n                    </Link>\n                </MinTableCell>\n                <MinTableCell style={noWrap} align=\"left\">\n                    <Tooltip\n                        title={wr.user.zone.map((zone) => zone.name).join(' | ')}\n                        placement=\"bottom\"\n                        enterDelay={300}\n                    >\n                        <span>{wr.user.zone[2].name}</span>\n                    </Tooltip>\n                </MinTableCell>\n                {official && (\n                    <>\n                        <MinTableCell align=\"left\">\n                            <Tooltip title={<Moment fromNow>{wr.date}</Moment>} placement=\"bottom-end\" enterDelay={300}>\n                                <Moment\n                                    style={{ color: getDateDifferenceColor(wr.date), ...noWrap }}\n                                    format=\"YYYY-MM-DD\"\n                                >\n                                    {wr.date}\n                                </Moment>\n                            </Tooltip>\n                        </MinTableCell>\n                        <MinTableCell align=\"left\">\n                            <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\n                                {useLiveDuration ? (\n                                    <Moment style={noWrap} diff={wr.date} unit=\"days\"></Moment>\n                                ) : (\n                                    <span>{wr.duration}</span>\n                                )}\n                            </Tooltip>\n                        </MinTableCell>\n                    </>\n                )}\n                <MinTableCell style={noWrap} align=\"left\">\n                    <Tooltip title=\"Download Ghost\" placement=\"bottom\" enterDelay={300}>\n                        <IconButton\n                            size=\"small\"\n                            style={noWrap}\n                            color=\"inherit\"\n                            href={'https://prod.trackmania.core.nadeo.online/storageObjects/' + wr.replay}\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                        >\n                            <SaveAltIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    </Tooltip>\n                    {wr.track.isLast && wr.track.history && (\n                        <IconButton\n                            color=\"inherit\"\n                            size=\"small\"\n                            style={noWrap}\n                            onClick={() => onClickHistory(wr.track.id)}\n                        >\n                            <HistoryIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    )}\n                </MinTableCell>\n            </TableRow>\n            {wr.track.isLast && wr.track.history && (\n                <TableRow className={classes.root}>\n                    <MinTableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={7}>\n                        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                            <Box margin={1}>\n                                <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                    History\n                                </Typography>\n                                <Table size=\"small\" aria-label=\"purchases\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <MinTableCell>{official ? 'Date' : 'Time'}</MinTableCell>\n                                            <MinTableCell>Record</MinTableCell>\n                                            <MinTableCell>Timesave</MinTableCell>\n                                            <MinTableCell>Player</MinTableCell>\n                                            <MinTableCell colSpan={2}>Zone</MinTableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {wr.track.history.map((historyWr, idx) => {\n                                            return <RecordsHistoryRow wr={historyWr} official={official} key={idx} />;\n                                        })}\n                                    </TableBody>\n                                </Table>\n                            </Box>\n                        </Collapse>\n                    </MinTableCell>\n                </TableRow>\n            )}\n        </>\n    );\n};\n\nconst RecordsTable = ({ data, stats, official, useLiveDuration }) => {\n    const [storage, setStorage] = useLocalStorage('tm2020', {\n        official: { order: 'asc', orderBy: 'track.name' },\n        totd: { order: 'asc', orderBy: 'track.monthDay' },\n    });\n\n    const [{ order, rowsPerPage, page, ...state }, setState] = React.useState(defaultState);\n    const [history, setHistory] = React.useState(null);\n\n    let { orderBy } = state;\n    orderBy = official ? storage.official.orderBy : storage.totd.orderBy;\n    orderBy = official && orderBy === 'track.monthDay' ? 'track.name' : orderBy;\n\n    const handleRequestSort = (_, property) => {\n        const orderBy = property;\n        setState((state) => {\n            const order = state.orderBy === orderBy && state.order === 'desc' ? 'asc' : 'desc';\n            setStorage({ ...storage, [official ? 'official' : 'totd']: { order, orderBy } });\n\n            return {\n                ...state,\n                order,\n                orderBy,\n            };\n        });\n    };\n\n    React.useEffect(() => {\n        const savedState = storage[official ? 'official' : 'totd'];\n        setState((state) => ({ ...state, order: savedState.order, orderBy: savedState.orderBy }));\n    }, [data]);\n\n    const onClickHistory = React.useCallback(\n        (id) => {\n            if (history !== id) {\n                setHistory(id);\n            } else {\n                setHistory(null);\n            }\n        },\n        [history, setHistory],\n    );\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RecordsTableHead\n                    order={order}\n                    orderBy={orderBy}\n                    onRequestSort={handleRequestSort}\n                    official={official}\n                />\n                <TableBody>\n                    {stableSort(data, order, orderBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((wr, idx) => {\n                            return (\n                                <RecordsRow\n                                    wr={wr}\n                                    official={official}\n                                    orderBy={orderBy}\n                                    useLiveDuration={useLiveDuration}\n                                    history={history}\n                                    onClickHistory={onClickHistory}\n                                    key={idx}\n                                />\n                            );\n                        })}\n                </TableBody>\n                <TableBody>\n                    {stats.totalTime > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\" colSpan={official ? 1 : 2}>\n                                Total Time\n                            </MinTableCell>\n                            <MinTableCell>\n                                <Tooltip\n                                    title={moment.duration(stats.totalTime, 'ms').humanize()}\n                                    placement=\"bottom-end\"\n                                    enterDelay={300}\n                                >\n                                    <span>{formatScore(stats.totalTime, 'tm2')}</span>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell colSpan={official ? 5 : 3}></MinTableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { withTheme } from '@material-ui/styles';\n\nconst UniqueRecordsChart = ({ labels, series, title, theme }) => {\n    const isDarkTheme = theme.palette.type === 'dark';\n\n    return (\n        <Chart\n            options={{\n                xaxis: {\n                    categories: labels,\n                },\n                legend: {\n                    show: false,\n                },\n                dataLabels: {\n                    enabled: false,\n                },\n                chart: {\n                    toolbar: {\n                        show: false,\n                    },\n                    foreColor: isDarkTheme ? 'white' : 'black',\n                },\n                tooltip: {\n                    theme: isDarkTheme ? 'dark' : 'light',\n                },\n                responsive: [\n                    {\n                        breakpoint: 380,\n                        options: {\n                            chart: {\n                                height: '300px',\n                            },\n                        },\n                    },\n                ],\n                plotOptions: {\n                    bar: {\n                        horizontal: true,\n                    },\n                },\n            }}\n            series={series}\n            type=\"bar\"\n            height=\"800\"\n        />\n    );\n};\n\nexport default withTheme(UniqueRecordsChart);\n","import React from 'react';\nimport moment from 'moment-timezone';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport RankingsTable from '../RankingsTableTrackmania';\nimport RecordsTable from '../RecordsTableTrackmania';\nimport RecordsChart from '../RecordsChart';\nimport SimpleTitle from '../SimpleTitle';\nimport UniqueRecordsChart from '../UniqueRecordsChart';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Api from '../../Api';\nimport { useIsMounted } from '../../Hooks';\nimport { seasonMenu, yearMenu, getTotdMenu } from './CampaignMenus';\n\nconst s = (value) => (value === 1 ? '' : 's');\n\nconst calculateSetAfter = (releasedAt, wrDate) => {\n    const diffSeconds = wrDate.diff(releasedAt, 'seconds');\n    const setAfterHours = wrDate.diff(releasedAt, 'hours');\n    if (diffSeconds > 0) {\n        const setAfterMinutes = wrDate.diff(releasedAt, 'minutes') - setAfterHours * 60;\n        return `set after ${setAfterHours} hour${s(setAfterHours)} and ${setAfterMinutes} minute${s(setAfterMinutes)}`;\n    } else {\n        const setBeforeHours = -setAfterHours;\n        const setBeforeMinutes = -wrDate.diff(releasedAt, 'minutes') - setBeforeHours * 60;\n        return `set before ${setBeforeHours} hour${s(setBeforeHours)} and ${setBeforeMinutes} minute${s(\n            setBeforeMinutes,\n        )}`;\n    }\n};\n\nconst useStyles = makeStyles((theme) => ({\n    padTop: {\n        paddingTop: '70px',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nconst CampaignTab = ({ campaign, onChangeCampaign, onChangeYear, isOfficial, year }) => {\n    const isMounted = useIsMounted();\n\n    const [game, setGame] = React.useState(undefined);\n    const [rankingsType, setRankingsType] = React.useState('leaderboard');\n\n    const onChangeRankingsType = React.useCallback(\n        (event) => {\n            setRankingsType(event.target.value);\n        },\n        [setRankingsType],\n    );\n\n    React.useEffect(() => {\n        setGame(undefined);\n\n        Api.request('trackmania', campaign)\n            .then((campaign) => {\n                const rows = [];\n                for (const track of campaign.tracks) {\n                    for (const wr of track.wrs) {\n                        const wrDate = moment(wr.date);\n                        const releasedAt = !campaign.isOfficial\n                            ? moment()\n                                  .tz('Europe/Paris')\n                                  .set({\n                                      year: campaign.year,\n                                      month: campaign.month - 1,\n                                      date: track.monthDay,\n                                      hour: 19,\n                                      minute: 0,\n                                      second: 0,\n                                  })\n                                  .utc()\n                            : undefined;\n\n                        const setAfter = !campaign.isOfficial ? calculateSetAfter(releasedAt, wrDate) : undefined;\n\n                        const isLast = wr === track.wrs[track.wrs.length - 1];\n                        const history = isLast && (track.history || []).length > 1 ? track.history : undefined;\n\n                        if (history && !campaign.isOfficial) {\n                            history.forEach((historyWr) => {\n                                const historyWrDate = moment(historyWr.date);\n                                historyWr.setAfter = calculateSetAfter(releasedAt, historyWrDate);\n                                historyWr.pastMinutes = historyWrDate.diff(releasedAt, 'minutes');\n                            });\n                        }\n\n                        rows.push({\n                            track: {\n                                id: track.id,\n                                name: track.name.replace(/(\\$[0-9a-fA-F]{3}|\\$[WNOITSGZBEMwnoitsgzbem]{1})/g, ''),\n                                monthDay: track.monthDay,\n                                isFirst: wr === track.wrs[0],\n                                isLast,\n                                records: track.wrs.length,\n                                history,\n                            },\n                            ...wr,\n                            zone: (wr.user.zone[2] ? wr.user.zone[2] : wr.user.zone[0]).name,\n                            setAfter,\n                        });\n                    }\n                }\n\n                campaign.tracks = rows;\n\n                if (isMounted.current) {\n                    setGame(campaign);\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n\n                if (isMounted.current) {\n                    setGame(null);\n                }\n            });\n    }, [isMounted, campaign]);\n\n    const rankingsCountryType = rankingsType\n        .replace('Leaderboard', 'CountryLeaderboard')\n        .replace('leaderboard', 'countryLeaderboard');\n\n    const classes = useStyles();\n\n    return (\n        <>\n            {isOfficial ? (\n                <FormControl className={classes.formControl}>\n                    <InputLabel>Campaign</InputLabel>\n                    <Select value={campaign} onChange={onChangeCampaign}>\n                        {seasonMenu}\n                    </Select>\n                </FormControl>\n            ) : (\n                <>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel>Year</InputLabel>\n                        <Select value={year} onChange={onChangeYear}>\n                            {yearMenu}\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel>Month</InputLabel>\n                        <Select value={campaign} onChange={onChangeCampaign}>\n                            {getTotdMenu(year)}\n                        </Select>\n                    </FormControl>\n                </>\n            )}\n            {game === null && <SimpleTitle data=\"No data.\" />}\n            {game === undefined && <LinearProgress />}\n            <Grid container direction=\"column\" justify=\"center\">\n                {game !== undefined && game !== null && (\n                    <>\n                        <Grid item xs={12}>\n                            <RecordsTable data={game.tracks} stats={game.stats} official={game.isOfficial} />\n                        </Grid>\n                        <Grid item xs={12} className={classes.padTop}>\n                            <FormControl className={classes.formControl}>\n                                <InputLabel>Rankings Type</InputLabel>\n                                <Select value={rankingsType} onChange={onChangeRankingsType}>\n                                    <MenuItem value={'leaderboard'}>Live</MenuItem>\n                                    <MenuItem value={'uniqueLeaderboard'}>Unique</MenuItem>\n                                    <MenuItem value={'historyLeaderboard'}>Total</MenuItem>\n                                </Select>\n                            </FormControl>\n                            <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                                <Grid item xs={12} md={6}>\n                                    <RankingsTable\n                                        data={game[rankingsType]}\n                                        hasDuration={game.isOfficial && rankingsType !== 'uniqueLeaderboard'}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6} className={classes.padTop}>\n                                    <Grid container direction=\"column\" justify=\"center\">\n                                        <Grid item xs={12}>\n                                            {rankingsType === 'uniqueLeaderboard' ? (\n                                                <UniqueRecordsChart\n                                                    title=\"WRs\"\n                                                    labels={game[rankingsType].map((row) => row.user.name).slice(0, 20)}\n                                                    series={[\n                                                        {\n                                                            name: 'Unique WRs',\n                                                            data: game[rankingsType].slice(0, 20).map((row) => row.wrs),\n                                                        },\n                                                    ]}\n                                                />\n                                            ) : (\n                                                <RecordsChart\n                                                    title=\"WRs\"\n                                                    labels={game[rankingsType].map((row) => row.user.name)}\n                                                    series={game[rankingsType].map((row) => row.wrs)}\n                                                />\n                                            )}\n                                        </Grid>\n                                        <Grid item xs={12} className={classes.padTop}>\n                                            {rankingsType === 'uniqueLeaderboard' ? (\n                                                <UniqueRecordsChart\n                                                    title=\"WRs\"\n                                                    labels={game[rankingsCountryType]\n                                                        .map((row) => (row.zone[2] ? row.zone[2] : row.zone[0]).name)\n                                                        .slice(0, 20)}\n                                                    series={[\n                                                        {\n                                                            name: 'Unique WRs by Zone',\n                                                            data: game[rankingsCountryType]\n                                                                .slice(0, 20)\n                                                                .map((row) => row.wrs),\n                                                        },\n                                                    ]}\n                                                />\n                                            ) : (\n                                                <RecordsChart\n                                                    title=\"WRs by Zone\"\n                                                    labels={game[rankingsCountryType].map(\n                                                        (row) => (row.zone[2] ? row.zone[2] : row.zone[0]).name,\n                                                    )}\n                                                    series={game[rankingsCountryType].map((row) => row.wrs)}\n                                                />\n                                            )}\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </>\n                )}\n            </Grid>\n        </>\n    );\n};\n\nexport default CampaignTab;\n","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RecordsChart from '../RecordsChart';\nimport UniqueRecordsChart from '../UniqueRecordsChart';\nimport RankingsTable from '../RankingsTableTrackmania';\nimport SimpleTitle from '../SimpleTitle';\nimport Api from '../../Api';\nimport { useIsMounted } from '../../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    padTop: {\n        paddingTop: '70px',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nconst RankingsTab = () => {\n    const isMounted = useIsMounted();\n\n    const [game, setGame] = React.useState(undefined);\n    const [campaign, setCampaign] = React.useState('rankings/campaign');\n    const [rankingsType, setRankingsType] = React.useState('leaderboard');\n\n    const onChangeCampaign = React.useCallback(\n        (event) => {\n            setCampaign(event.target.value);\n        },\n        [setCampaign],\n    );\n    const onChangeRankingsType = React.useCallback(\n        (event) => {\n            setRankingsType(event.target.value);\n        },\n        [setRankingsType],\n    );\n\n    React.useEffect(() => {\n        setGame(undefined);\n\n        Api.request('trackmania', campaign)\n            .then((game) => {\n                if (isMounted.current) {\n                    setGame(game);\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                if (isMounted.current) {\n                    setGame(null);\n                }\n            });\n    }, [setGame, campaign, isMounted]);\n\n    const rankingsCountryType = rankingsType\n        .replace('Leaderboard', 'CountryLeaderboard')\n        .replace('leaderboard', 'countryLeaderboard');\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <FormControl className={classes.formControl}>\n                <InputLabel>Campaign</InputLabel>\n                <Select value={campaign} onChange={onChangeCampaign}>\n                    <MenuItem value=\"rankings/campaign\">Official</MenuItem>\n                    <MenuItem value=\"rankings/totd\">TOTD</MenuItem>\n                    <MenuItem value=\"rankings/combined\">Combined</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel>Rankings Type</InputLabel>\n                <Select value={rankingsType} onChange={onChangeRankingsType}>\n                    <MenuItem value={'leaderboard'}>Live</MenuItem>\n                    <MenuItem value={'uniqueLeaderboard'}>Unique</MenuItem>\n                    <MenuItem value={'historyLeaderboard'}>Total</MenuItem>\n                </Select>\n            </FormControl>\n            {game === null && <SimpleTitle data=\"No data.\" />}\n            {game === undefined && <LinearProgress />}\n            {game !== null && game !== undefined && (\n                <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                    <Grid item xs={12} md={6}>\n                        <RankingsTable\n                            data={game[rankingsType]}\n                            hasDuration={campaign === 'rankings/campaign' && rankingsType !== 'uniqueLeaderboard'}\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Grid container direction=\"column\" justify=\"center\">\n                            <Grid item xs={12} className={classes.padTop}>\n                                {rankingsType === 'uniqueLeaderboard' ? (\n                                    <UniqueRecordsChart\n                                        title=\"WRs\"\n                                        labels={game[rankingsType].map((row) => row.user.name).slice(0, 20)}\n                                        series={[\n                                            {\n                                                name: 'Unique WRs',\n                                                data: game[rankingsType].slice(0, 20).map((row) => row.wrs),\n                                            },\n                                        ]}\n                                    />\n                                ) : (\n                                    <RecordsChart\n                                        title=\"WRs\"\n                                        labels={game[rankingsType].map((row) => row.user.name)}\n                                        series={game[rankingsType].map((row) => row.wrs)}\n                                    />\n                                )}\n                            </Grid>\n                            <Grid item xs={12} className={classes.padTop}>\n                                {rankingsType === 'uniqueLeaderboard' ? (\n                                    <UniqueRecordsChart\n                                        title=\"WRs\"\n                                        labels={game[rankingsCountryType]\n                                            .map((row) => (row.zone[2] ? row.zone[2] : row.zone[0]).name)\n                                            .slice(0, 20)}\n                                        series={[\n                                            {\n                                                name: 'Unique WRs by Zone',\n                                                data: game[rankingsCountryType].slice(0, 20).map((row) => row.wrs),\n                                            },\n                                        ]}\n                                    />\n                                ) : (\n                                    <RecordsChart\n                                        title=\"WRs by Zone\"\n                                        labels={game[rankingsCountryType].map(\n                                            (row) => (row.zone[2] ? row.zone[2] : row.zone[0]).name,\n                                        )}\n                                        series={game[rankingsCountryType].map((row) => row.wrs)}\n                                    />\n                                )}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            )}\n        </>\n    );\n};\n\nexport default RankingsTab;\n","import React from 'react';\nimport moment from 'moment';\nimport { withRouter } from 'react-router';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport FloatingActionButton from '../components/FloatingActionButton';\nimport ViewContent from './ViewContent';\nimport CampaignTab from '../components/trackmania/CampaignTab';\nimport RankingsTab from '../components/trackmania/RankingsTab';\nimport { getInitialValue } from '../components/trackmania/CampaignMenus';\n\nconst TrackmaniaView = ({ match }) => {\n    const [tab, setTab] = React.useState(0);\n    const [campaign, setCampaign] = React.useState(getInitialValue(tab === 0));\n    const [year, setYear] = React.useState(moment().year());\n\n    const page = match.path;\n\n    React.useEffect(() => {\n        setTab(0);\n    }, [page]);\n\n    const handleTab = (_, newValue) => {\n        setTab(newValue);\n        setCampaign(getInitialValue(newValue === 0, year));\n    };\n\n    const onChangeYear = React.useCallback(\n        (event) => {\n            setYear(event.target.value);\n            setCampaign(getInitialValue(false, event.target.value));\n        },\n        [setYear],\n    );\n\n    const onChangeCampaign = React.useCallback(\n        (event) => {\n            setCampaign(event.target.value);\n        },\n        [setCampaign],\n    );\n\n    return (\n        <ViewContent>\n            <Paper>\n                <Tabs\n                    value={tab}\n                    onChange={handleTab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                >\n                    <Tab label=\"Campaign\" />\n                    <Tab label=\"Track of the Day\" />\n                    <Tab label=\"Rankings\" />\n                </Tabs>\n                <Typography component=\"div\" role=\"tabpanel\">\n                    <Box p={3}>\n                        {(tab === 0 || tab === 1) && (\n                            <CampaignTab\n                                campaign={campaign}\n                                onChangeCampaign={onChangeCampaign}\n                                onChangeYear={onChangeYear}\n                                isOfficial={tab === 0}\n                                year={year}\n                            />\n                        )}\n                        {tab === 2 && <RankingsTab />}\n                    </Box>\n                </Typography>\n            </Paper>\n            <FloatingActionButton />\n        </ViewContent>\n    );\n};\n\nexport default withRouter(TrackmaniaView);\n","import React from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport HistoryIcon from '@material-ui/icons/History';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { stableSort } from '../utils/stableSort';\nimport { useLocalStorage, useRenders } from '../Hooks';\nimport tmx from '../utils/tmx';\nimport { formatScore, getDateDifferenceColor, getDateTimeDifferenceColor } from '../utils/tools';\n\nconst rows = [\n    { id: 'track.name', sortable: true, label: 'Track', align: 'left' },\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\n    { id: 'date', sortable: true, label: 'Date', align: 'left' },\n    { id: 'duration', sortable: true, label: 'Duration', align: 'left' },\n];\n\nconst RecordsTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row, idx) => (\n                    <TableCell\n                        key={idx}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                        colSpan={idx === rows.length - 1 ? 2 : 1}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'asc',\n    orderBy: 'track.name',\n    page: 0,\n    rowsPerPage: 250,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst linkToExchange = (trac) => {\n    return '';\n};\n\nconst useRowStyles = makeStyles({\n    root: {\n        '& > *': {\n            borderBottom: 'unset',\n        },\n    },\n});\n\nconst RecordsHistoryRow = ({ game, wr, trackType }) => {\n    const score = formatScore(wr.score, game, trackType);\n    const delta = wr.delta !== 0 ? formatScore(wr.delta, game, trackType) : null;\n    const deltaSign = trackType === 'Stunts' ? '+' : '-';\n\n    const tmxGame = tmx(game);\n\n    return (\n        <TableRow tabIndex={-1}>\n            <MinTableCell align=\"left\">\n                <Tooltip title={<Moment format=\"HH:mm\">{wr.date}</Moment>} placement=\"bottom-end\" enterDelay={300}>\n                    <Moment style={{ color: getDateDifferenceColor(wr.date), ...noWrap }} format=\"YYYY-MM-DD\">\n                        {wr.date}\n                    </Moment>\n                </Tooltip>\n            </MinTableCell>\n            <MinTableCell align=\"left\">\n                {score}\n            </MinTableCell>\n            <MinTableCell align=\"left\">{delta ? deltaSign + delta : ''}</MinTableCell>\n            <MinTableCell align=\"left\">\n                <Link\n                    style={noWrap}\n                    color=\"inherit\"\n                    href={tmxGame.userUrl(wr.user.id)}\n                    rel=\"noreferrer\"\n                    target=\"_blank\"\n                >\n                    {wr.user.name}\n                </Link>\n            </MinTableCell>\n            <MinTableCell align=\"left\">\n                <Tooltip title=\"Download Replay\" placement=\"bottom\" enterDelay={300}>\n                    <IconButton\n                        size=\"small\"\n                        style={noWrap}\n                        color=\"inherit\"\n                        href={tmxGame.replayUrl(wr.replay)}\n                        rel=\"noreferrer\"\n                        target=\"_blank\"\n                    >\n                        <SaveAltIcon fontSize=\"inherit\" />\n                    </IconButton>\n                </Tooltip>\n            </MinTableCell>\n        </TableRow>\n    );\n};\n\nconst RecordsRow = ({ game, wr, orderBy, useLiveDuration, history, onClickHistory }) => {\n    const score = formatScore(wr.score, game, wr.track.type);\n    const delta = wr.delta !== 0 ? formatScore(wr.delta, game, wr.track.type) : null;\n    const deltaSign = wr.track.type === 'Stunts' ? '+' : '-';\n\n    const classes = useRowStyles();\n\n    const open = history === wr.track.id;\n    const defaultSort = orderBy === 'track.name';\n    const tmxGame = tmx(game);\n\n    return (\n        <>\n            <TableRow tabIndex={-1}>\n                {(wr.track.isFirst || !defaultSort) && (\n                    <MinTableCell style={noWrap} rowSpan={defaultSort ? wr.track.records : 1} align=\"left\">\n                        <Link\n                            color=\"inherit\"\n                            href={tmxGame.trackUrl(wr.track.id)}\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                        >\n                            {wr.track.name}\n                        </Link>\n                    </MinTableCell>\n                )}\n                <MinTableCell align=\"left\">\n                    {delta && (\n                        <Tooltip title={<span>{deltaSign}{delta} to former record</span>} placement=\"bottom\" enterDelay={300}>\n                            <span>{score}</span>\n                        </Tooltip>\n                    )}\n                    {!delta && <span>{score}</span>}\n                </MinTableCell>\n                <MinTableCell style={noWrap} align=\"left\">\n                    <Link\n                        color=\"inherit\"\n                        href={tmxGame.userUrl(wr.user.id)}\n                        rel=\"noreferrer\"\n                        target=\"_blank\"\n                    >\n                        {wr.user.name}\n                    </Link>\n                </MinTableCell>\n                <MinTableCell align=\"left\">\n                    <Tooltip title={<Moment fromNow>{wr.date}</Moment>} placement=\"bottom-end\" enterDelay={300}>\n                        <Moment\n                            style={{ color: getDateDifferenceColor(wr.date), ...noWrap }}\n                            format=\"YYYY-MM-DD\"\n                        >\n                            {wr.date}\n                        </Moment>\n                    </Tooltip>\n                </MinTableCell>\n                <MinTableCell align=\"left\">\n                    <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\n                        {useLiveDuration ? (\n                            <Moment style={noWrap} diff={wr.date} unit=\"days\"></Moment>\n                        ) : (\n                            <span>{wr.duration}</span>\n                        )}\n                    </Tooltip>\n                </MinTableCell>\n                <MinTableCell style={noWrap} align=\"left\">\n                    <Tooltip title=\"Download Replay\" placement=\"bottom\" enterDelay={300}>\n                        <IconButton\n                            size=\"small\"\n                            style={noWrap}\n                            color=\"inherit\"\n                            href={tmxGame.replayUrl(wr.replay)}\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                        >\n                            <SaveAltIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    </Tooltip>\n                    {wr.track.isLast && wr.track.history && (\n                        <IconButton\n                            color=\"inherit\"\n                            size=\"small\"\n                            style={noWrap}\n                            onClick={() => onClickHistory(wr.track.id)}\n                        >\n                            <HistoryIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    )}\n                </MinTableCell>\n            </TableRow>\n            {wr.track.isLast && wr.track.history && (\n                <TableRow className={classes.root}>\n                    <MinTableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={7}>\n                        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                            <Box margin={1}>\n                                <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                    History\n                                </Typography>\n                                <Table size=\"small\" aria-label=\"purchases\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <MinTableCell>Date</MinTableCell>\n                                            <MinTableCell>Record</MinTableCell>\n                                            <MinTableCell>\n                                                {wr.track.type === 'Stunts' ? 'Improvement' : 'Timesave'}\n                                            </MinTableCell>\n                                            <MinTableCell colSpan={2}>Player</MinTableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {wr.track.history.map((historyWr, idx) => {\n                                            return <RecordsHistoryRow\n                                                game={game}\n                                                wr={historyWr}\n                                                trackType={wr.track.type}\n                                                key={idx}\n                                            />;\n                                        })}\n                                    </TableBody>\n                                </Table>\n                            </Box>\n                        </Collapse>\n                    </MinTableCell>\n                </TableRow>\n            )}\n        </>\n    );\n};\n\nconst RecordsTable = ({ game, data, stats, useLiveDuration }) => {\n    const [storage, setStorage] = useLocalStorage(game, {\n        order: 'asc', orderBy: 'track.name',\n    });\n\n    const [{ order, rowsPerPage, page, orderBy }, setState] = React.useState(defaultState);\n    const [history, setHistory] = React.useState(null);\n\n    const handleRequestSort = (_, property) => {\n        const orderBy = property;\n        setState((state) => {\n            const order = state.orderBy === orderBy && state.order === 'desc' ? 'asc' : 'desc';\n            setStorage({ ...storage, order, orderBy });\n\n            return {\n                ...state,\n                order,\n                orderBy,\n            };\n        });\n    };\n\n    React.useEffect(() => {\n        setState((state) => ({ ...state, order: storage.order, orderBy: storage.orderBy }));\n    }, [data]);\n\n    const onClickHistory = React.useCallback(\n        (id) => {\n            if (history !== id) {\n                setHistory(id);\n            } else {\n                setHistory(null);\n            }\n        },\n        [history, setHistory],\n    );\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RecordsTableHead\n                    order={order}\n                    orderBy={orderBy}\n                    onRequestSort={handleRequestSort}\n                />\n                <TableBody>\n                    {stableSort(data, order, orderBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((wr, idx) => {\n                            return (\n                                <RecordsRow\n                                    game={game}\n                                    wr={wr}\n                                    orderBy={orderBy}\n                                    useLiveDuration={useLiveDuration}\n                                    history={history}\n                                    onClickHistory={onClickHistory}\n                                    key={idx}\n                                />\n                            );\n                        })}\n                </TableBody>\n                <TableBody>\n                    {stats.totalTime > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">\n                                Total Time\n                            </MinTableCell>\n                            <MinTableCell>\n                                <Tooltip\n                                    title={moment.duration(stats.totalTime, 'ms').humanize()}\n                                    placement=\"bottom-end\"\n                                    enterDelay={300}\n                                >\n                                    <span>{formatScore(stats.totalTime)}</span>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell colSpan={5}></MinTableCell>\n                        </TableRow>\n                    )}\n                    {stats.totalPoints > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">Total Points</MinTableCell>\n                            <MinTableCell>\n                                <span>{formatScore(stats.totalPoints, game, 'Stunts')}</span>\n                            </MinTableCell>\n                            <MinTableCell colSpan={3}></MinTableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import React from 'react';\nimport moment from 'moment-timezone';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport RankingsTable from '../RankingsTable';\nimport RecordsTable from '../RecordsTableHistory';\nimport RecordsChart from '../RecordsChart';\nimport SimpleTitle from '../SimpleTitle';\nimport UniqueRecordsChart from '../UniqueRecordsChart';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Api from '../../Api';\nimport { useIsMounted } from '../../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    padTop: {\n        paddingTop: '70px',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nconst CampaignTab = ({ gameName }) => {\n    const isMounted = useIsMounted();\n\n    const [game, setGame] = React.useState(undefined);\n    const [campaignName, setCampaign] = React.useState(undefined);\n    const [rankingsType] = React.useState('leaderboard');\n\n    const onChangeCampaign = React.useCallback(\n        (event) => {\n            setCampaign(event.target.value);\n        },\n        [setCampaign],\n    );\n\n    React.useEffect(() => {\n        setGame(undefined);\n\n        Api.request(gameName)\n            .then((campaigns) => {\n                const game = [];\n                for (const campaign of campaigns) {\n                    const rows = [];\n                    for (const track of campaign.tracks) {\n                        for (const wr of track.wrs) {\n                            const isLast = wr === track.wrs[track.wrs.length - 1];\n                            const history = isLast && (track.history || []).length > 1 ? track.history : undefined;\n\n                            rows.push({\n                                track: {\n                                    id: track.id,\n                                    name: track.name.replace(/(\\$[0-9a-fA-F]{3}|\\$[WNOITSGZBEMwnoitsgzbem]{1})/g, ''),\n                                    isFirst: wr === track.wrs[0],\n                                    isLast,\n                                    records: track.wrs.length,\n                                    history,\n                                    type: track.type,\n                                },\n                                ...wr,\n                            });\n                        }\n                    }\n    \n                    campaign.tracks = rows;\n                    game.push(campaign);\n                }\n\n                if (isMounted.current) {\n                    setGame(game);\n                    setCampaign(game[0].name);\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n\n                if (isMounted.current) {\n                    setGame(null);\n                }\n            });\n    }, [isMounted, gameName, setCampaign, setGame]);\n\n    const classes = useStyles();\n\n    const currentCampaign = game ? game.find((campaign) => campaign.name === campaignName) : undefined;\n\n    return (\n        <>\n            {(campaignName && game && game.length > 1) && (\n                <FormControl className={classes.formControl}>\n                    <InputLabel>Campaign</InputLabel>\n                    <Select value={campaignName} onChange={onChangeCampaign}>\n                        {game.map((campaign) => {\n                            return (\n                                <MenuItem value={campaign.name} key={campaign.name}>\n                                    {campaign.name}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n            )}\n            {currentCampaign === null && <SimpleTitle data=\"No data.\" />}\n            {currentCampaign === undefined && <LinearProgress />}\n            <Grid container direction=\"column\" justify=\"center\">\n                {currentCampaign !== undefined && currentCampaign !== null && (\n                    <>\n                        <Grid item xs={12}>\n                            <RecordsTable\n                                game={gameName}\n                                data={currentCampaign.tracks}\n                                stats={currentCampaign.stats}\n                            />\n                        </Grid>\n                        <Grid item xs={12} className={classes.padTop}>\n                            <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                                <Grid item xs={12} md={6}>\n                                    <RankingsTable\n                                        data={currentCampaign[rankingsType]}\n                                        hasDuration={rankingsType !== 'uniqueLeaderboard'}\n                                    />\n                                </Grid>\n                                <Grid item xs={12} md={6} className={classes.padTop}>\n                                    <Grid container direction=\"column\" justify=\"center\">\n                                        <Grid item xs={12}>\n                                            {rankingsType === 'uniqueLeaderboard' ? (\n                                                <UniqueRecordsChart\n                                                    title=\"WRs\"\n                                                    labels={currentCampaign[rankingsType].map((row) => row.user.name).slice(0, 20)}\n                                                    series={[\n                                                        {\n                                                            name: 'Unique WRs',\n                                                            data: currentCampaign[rankingsType].slice(0, 20).map((row) => row.wrs),\n                                                        },\n                                                    ]}\n                                                />\n                                            ) : (\n                                                <RecordsChart\n                                                    title=\"WRs\"\n                                                    labels={currentCampaign[rankingsType].map((row) => row.user.name)}\n                                                    series={currentCampaign[rankingsType].map((row) => row.wrs)}\n                                                />\n                                            )}\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </>\n                )}\n            </Grid>\n        </>\n    );\n};\n\nexport default CampaignTab;\n","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RecordsChart from '../RecordsChart';\nimport UniqueRecordsChart from '../UniqueRecordsChart';\nimport RankingsTable from '../RankingsTable';\nimport SimpleTitle from '../SimpleTitle';\nimport Api from '../../Api';\nimport { useIsMounted } from '../../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    padTop: {\n        paddingTop: '70px',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nconst RankingsTab = ({ gameName }) => {\n    const isMounted = useIsMounted();\n\n    const [game, setGame] = React.useState(undefined);\n    const [campaignName, setCampaign] = React.useState(undefined);\n    const [rankingsType, setRankingsType] = React.useState('leaderboard');\n\n    const onChangeCampaign = React.useCallback(\n        (event) => {\n            setCampaign(event.target.value);\n        },\n        [setCampaign],\n    );\n    const onChangeRankingsType = React.useCallback(\n        (event) => {\n            setRankingsType(event.target.value);\n        },\n        [setRankingsType],\n    );\n\n    React.useEffect(() => {\n        setGame(undefined);\n\n        Api.request(gameName, 'ranks')\n            .then((game) => {\n                if (isMounted.current) {\n                    setGame(game);\n                    setCampaign(game[0].name);\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                if (isMounted.current) {\n                    setGame(null);\n                }\n            });\n    }, [setGame, isMounted]);\n\n    const classes = useStyles();\n\n    const currentCampaign = game ? game.find((campaign) => campaign.name === campaignName) : undefined;\n\n    return (\n        <>\n            {(campaignName && game && game.length > 1) && (\n                <FormControl className={classes.formControl}>\n                    <InputLabel>Campaign</InputLabel>\n                    <Select value={campaignName} onChange={onChangeCampaign}>\n                        {game.map((campaign) => {\n                            return (\n                                <MenuItem value={campaign.name} key={campaign.name}>\n                                    {campaign.name}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n            )}\n            <FormControl className={classes.formControl}>\n                <InputLabel>Rankings Type</InputLabel>\n                <Select value={rankingsType} onChange={onChangeRankingsType}>\n                    <MenuItem value={'leaderboard'}>Live</MenuItem>\n                    <MenuItem value={'uniqueLeaderboard'}>Unique</MenuItem>\n                    <MenuItem value={'historyLeaderboard'}>Total</MenuItem>\n                </Select>\n            </FormControl>\n            {currentCampaign === null && <SimpleTitle data=\"No data.\" />}\n            {currentCampaign === undefined && <LinearProgress />}\n            {currentCampaign !== null && currentCampaign !== undefined && (\n                <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                    <Grid item xs={12} md={6}>\n                        <RankingsTable\n                            data={currentCampaign[rankingsType]}\n                            hasDuration={rankingsType !== 'uniqueLeaderboard'}\n                        />\n                    </Grid>\n                    <Grid item xs={12} md={6}>\n                        <Grid container direction=\"column\" justify=\"center\">\n                            <Grid item xs={12} className={classes.padTop}>\n                                {rankingsType === 'uniqueLeaderboard' ? (\n                                    <UniqueRecordsChart\n                                        title=\"WRs\"\n                                        labels={currentCampaign[rankingsType].map((row) => row.user.name).slice(0, 20)}\n                                        series={[\n                                            {\n                                                name: 'Unique WRs',\n                                                data: currentCampaign[rankingsType].slice(0, 20).map((row) => row.wrs),\n                                            },\n                                        ]}\n                                    />\n                                ) : (\n                                    <RecordsChart\n                                        title=\"WRs\"\n                                        labels={currentCampaign[rankingsType].map((row) => row.user.name)}\n                                        series={currentCampaign[rankingsType].map((row) => row.wrs)}\n                                    />\n                                )}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            )}\n        </>\n    );\n};\n\nexport default RankingsTab;\n","import React from 'react';\nimport Moment from 'react-moment';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { stableSortSort } from '../utils/stableSort';\nimport { getDateDifferenceColor, formatScore } from '../utils/tools';\nimport tmx from '../utils/tmx';\n\nconst rows = [\n    { id: 'track.name', sortable: false, label: 'Map', align: 'left' },\n    { id: 'score', sortable: false, label: 'Times', label2: 'Scores', align: 'left' },\n    { id: 'delta', sortable: false, label: 'Timesave', label2: 'Improvement', align: 'left' },\n    { id: 'user.name', sortable: false, label: 'Player', align: 'left' },\n    { id: 'duration', sortable: false, label: 'Duration', align: 'left' },\n    { id: 'date', sortable: false, label: 'Start', align: 'left' },\n    { id: 'beatenBy.date', sortable: false, label: 'Ended', align: 'left' },\n    { id: 'beatenBy.user.name', sortable: false, label: 'Beaten By', align: 'left' },\n];\n\nconst LongestDominationHead = ({ order, orderBy, onRequestSort, scoreType }) => {\n    const createSortHandler = (prop1, prop2) => (event) => {\n        onRequestSort(event, prop1, prop2);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id, row.id2)}\n                                >\n                                    {scoreType === 'Stunts' && row.label2 ? row.label2 : row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'desc',\n    orderBy: 'duration',\n    thenBy: 'date',\n    page: 0,\n    rowsPerPage: 50,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTable = ({ game, data, scoreType }) => {\n    const [{ order, orderBy, thenBy }, setState] = React.useState({ ...defaultState });\n\n    const handleRequestSort = (_, prop1, prop2) => {\n        const newOrderBy = prop1;\n        const newThenBy = prop2;\n\n        setState((state) => ({\n            ...state,\n            order: state.orderBy === newOrderBy && state.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n            thenBy: newThenBy,\n        }));\n    };\n\n    const classes = useStyles();\n\n    const tmxGame = tmx(game);\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <LongestDominationHead\n                    order={order}\n                    orderBy={orderBy}\n                    onRequestSort={handleRequestSort}\n                    scoreType={scoreType}\n                />\n                <TableBody>\n                    {stableSortSort(data, order, orderBy, thenBy).map((row) => (\n                        <TableRow tabIndex={-1} key={row.replay}>\n                            <MinTableCell style={noWrap} align=\"left\">\n                                <Link\n                                    color=\"inherit\"\n                                    href={tmxGame.trackUrl(row.track.id)}\n                                    rel=\"noreferrer\"\n                                    target=\"_blank\"\n                                >\n                                    {row.track.name}\n                                </Link>\n                            </MinTableCell>\n                            <MinTableCell align=\"left\" style={noWrap}>\n                                {formatScore(row.score, game, row.track.type)} →{' '}\n                                {formatScore(row.lastScore, game, row.track.type)}\n                            </MinTableCell>\n                            <MinTableCell align=\"left\">\n                                {row.track.type === 'Stunts' ? '+' : '-'}\n                                {formatScore(Math.abs(row.lastScore - row.score), game, row.track.type)}\n                            </MinTableCell>\n                            <MinTableCell style={noWrap} align=\"left\">\n                                <Link\n                                    color=\"inherit\"\n                                    href={tmxGame.userUrl(row.user.id)}\n                                    rel=\"noreferrer\"\n                                    target=\"_blank\"\n                                >\n                                    {row.user.name}\n                                </Link>\n                            </MinTableCell>\n                            <MinTableCell align=\"left\">\n                                <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\n                                    <span>{row.duration}</span>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell align=\"left\">\n                                <Tooltip\n                                    title={<Moment fromNow>{row.date}</Moment>}\n                                    placement=\"bottom-end\"\n                                    enterDelay={300}\n                                >\n                                    <Moment\n                                        style={{ color: getDateDifferenceColor(row.date), ...noWrap }}\n                                        format=\"YYYY-MM-DD\"\n                                    >\n                                        {row.date}\n                                    </Moment>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell align=\"left\">\n                                {row.beatenBy.length > 0 ? (\n                                    <Tooltip\n                                        title={<Moment fromNow>{row.beatenBy[0].date}</Moment>}\n                                        placement=\"bottom-end\"\n                                        enterDelay={300}\n                                    >\n                                        <Moment\n                                            style={{\n                                                color: getDateDifferenceColor(row.beatenBy[0].date),\n                                                ...noWrap,\n                                            }}\n                                            format=\"YYYY-MM-DD\"\n                                        >\n                                            {row.beatenBy[0].date}\n                                        </Moment>\n                                    </Tooltip>\n                                ) : (\n                                    <span>ongoing</span>\n                                )}\n                            </MinTableCell>\n                            <MinTableCell style={noWrap} align=\"left\">\n                                {row.beatenBy.length > 0 ? (\n                                    <Link\n                                        color=\"inherit\"\n                                        href={tmxGame.userUrl(row.beatenBy[0].user.id)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {row.beatenBy[0].user.name}\n                                    </Link>\n                                ) : (\n                                    <span>unbeaten</span>\n                                )}\n                            </MinTableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import React from 'react';\nimport Moment from 'react-moment';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { stableSortSort } from '../utils/stableSort';\nimport { getDateDifferenceColor, formatScore } from '../utils/tools';\nimport tmx from '../utils/tmx';\n\nconst rows = [\n    { id: 'track.name', sortable: false, label: 'Map', align: 'left' },\n    { id: 'score', sortable: false, label: 'Time', label2: 'Score', align: 'left' },\n    { id: 'user.name', sortable: false, label: 'Player', align: 'left' },\n    { id: 'duration', sortable: false, label: 'Duration', align: 'left' },\n    { id: 'date', sortable: false, label: 'Start', align: 'left' },\n    { id: 'beatenBy.date', sortable: false, label: 'Ended', align: 'left' },\n    { id: 'beatenBy.user.name', sortable: false, label: 'Beaten By', align: 'left' },\n];\n\nconst LongestLastingHead = ({ order, orderBy, onRequestSort, scoreType }) => {\n    const createSortHandler = (prop1, prop2) => (event) => {\n        onRequestSort(event, prop1, prop2);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id, row.id2)}\n                                >\n                                    {scoreType === 'Stunts' && row.label2 ? row.label2 : row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'desc',\n    orderBy: 'duration',\n    thenBy: 'date',\n    page: 0,\n    rowsPerPage: 50,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTable = ({ game, data, scoreType }) => {\n    const [{ order, orderBy, thenBy }, setState] = React.useState({ ...defaultState });\n\n    const handleRequestSort = (_, prop1, prop2) => {\n        const newOrderBy = prop1;\n        const newThenBy = prop2;\n\n        setState((state) => ({\n            ...state,\n            order: state.orderBy === newOrderBy && state.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n            thenBy: newThenBy,\n        }));\n    };\n\n    const classes = useStyles();\n\n    const tmxGame = tmx(game);\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <LongestLastingHead\n                    order={order}\n                    orderBy={orderBy}\n                    onRequestSort={handleRequestSort}\n                    scoreType={scoreType}\n                />\n                <TableBody>\n                    {stableSortSort(data, order, orderBy, thenBy).map((row) => (\n                        <TableRow tabIndex={-1} key={row.replay}>\n                            <MinTableCell style={noWrap} align=\"left\">\n                                <Link\n                                    color=\"inherit\"\n                                    href={tmxGame.trackUrl(row.track.id)}\n                                    rel=\"noreferrer\"\n                                    target=\"_blank\"\n                                >\n                                    {row.track.name}\n                                </Link>\n                            </MinTableCell>\n                            <MinTableCell align=\"left\">{formatScore(row.score, game, row.track.type)}</MinTableCell>\n                            <MinTableCell style={noWrap} align=\"left\">\n                                <Link\n                                    color=\"inherit\"\n                                    href={tmxGame.userUrl(row.user.id)}\n                                    rel=\"noreferrer\"\n                                    target=\"_blank\"\n                                >\n                                    {row.user.name}\n                                </Link>\n                            </MinTableCell>\n                            <MinTableCell align=\"left\">\n                                <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\n                                    <span>{row.duration}</span>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell align=\"left\">\n                                <Tooltip\n                                    title={<Moment fromNow>{row.date}</Moment>}\n                                    placement=\"bottom-end\"\n                                    enterDelay={300}\n                                >\n                                    <Moment\n                                        style={{ color: getDateDifferenceColor(row.date), ...noWrap }}\n                                        format=\"YYYY-MM-DD\"\n                                    >\n                                        {row.date}\n                                    </Moment>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell align=\"left\">\n                                {row.beatenBy.length > 0 ? (\n                                    <Tooltip\n                                        title={<Moment fromNow>{row.beatenBy[0].date}</Moment>}\n                                        placement=\"bottom-end\"\n                                        enterDelay={300}\n                                    >\n                                        <Moment\n                                            style={{ color: getDateDifferenceColor(row.beatenBy[0].date), ...noWrap }}\n                                            format=\"YYYY-MM-DD\"\n                                        >\n                                            {row.beatenBy[0].date}\n                                        </Moment>\n                                    </Tooltip>\n                                ) : (\n                                    <span>ongoing</span>\n                                )}\n                            </MinTableCell>\n                            <MinTableCell style={noWrap} align=\"left\">\n                                {row.beatenBy.length > 0 ? (\n                                    <Link\n                                        color=\"inherit\"\n                                        href={tmxGame.userUrl(row.beatenBy[0].user.id)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {row.beatenBy[0].user.name}\n                                    </Link>\n                                ) : (\n                                    <span>unbeaten</span>\n                                )}\n                            </MinTableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import React from 'react';\nimport Moment from 'react-moment';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { stableSortSort } from '../utils/stableSort';\nimport { getDateDifferenceColor, formatScore } from '../utils/tools';\nimport tmx from '../utils/tmx';\n\nconst rows = [\n    { id: 'track.name', sortable: false, label: 'Map', align: 'left' },\n    { id: 'score', sortable: false, label: 'Time', label2: 'Score', align: 'left' },\n    { id: 'user.name', sortable: false, label: 'Player', align: 'left' },\n    { id: 'delta', sortable: false, label: 'Improvement', align: 'left' },\n    { id: 'date', sortable: false, label: 'Date', align: 'left' },\n];\n\nconst LargestImprovementHead = ({ order, orderBy, onRequestSort, scoreType }) => {\n    const createSortHandler = (prop1, prop2) => (event) => {\n        onRequestSort(event, prop1, prop2);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id, row.id2)}\n                                >\n                                    {scoreType === 'Stunts' && row.label2 ? rowl.label2 : row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'desc',\n    orderBy: 'delta',\n    thenBy: 'date',\n    page: 0,\n    rowsPerPage: 50,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTable = ({ game, data, scoreType }) => {\n    const [{ order, orderBy, thenBy }, setState] = React.useState({ ...defaultState });\n\n    const handleRequestSort = (_, prop1, prop2) => {\n        const newOrderBy = prop1;\n        const newThenBy = prop2;\n\n        setState((state) => ({\n            ...state,\n            order: state.orderBy === newOrderBy && state.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n            thenBy: newThenBy,\n        }));\n    };\n\n    const classes = useStyles();\n\n    const tmxGame = tmx(game);\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <LargestImprovementHead\n                    order={order}\n                    orderBy={orderBy}\n                    onRequestSort={handleRequestSort}\n                    scoreType={scoreType}\n                />\n                <TableBody>\n                    {stableSortSort(data, order, orderBy, thenBy).map((row) => (\n                        <TableRow tabIndex={-1} key={row.replay}>\n                            <MinTableCell style={noWrap} align=\"left\">\n                                <Link\n                                    color=\"inherit\"\n                                    href={tmxGame.trackUrl(row.track.id)}\n                                    rel=\"noreferrer\"\n                                    target=\"_blank\"\n                                >\n                                    {row.track.name}\n                                </Link>\n                            </MinTableCell>\n                            <MinTableCell align=\"left\">{formatScore(row.score, game, row.track.type)}</MinTableCell>\n                            <MinTableCell style={noWrap} align=\"left\">\n                                <Link\n                                    color=\"inherit\"\n                                    href={tmxGame.userUrl(row.user.id)}\n                                    rel=\"noreferrer\"\n                                    target=\"_blank\"\n                                >\n                                    {row.user.name}\n                                </Link>\n                            </MinTableCell>\n                            <MinTableCell align=\"left\">\n                                <span>\n                                    {row.track.type === 'Stunts' ? '+' : '-'}\n                                    {formatScore(row.delta, game, row.track.type)}\n                                </span>\n                            </MinTableCell>\n                            <MinTableCell align=\"left\">\n                                <Tooltip\n                                    title={<Moment fromNow>{row.date}</Moment>}\n                                    placement=\"bottom-end\"\n                                    enterDelay={300}\n                                >\n                                    <Moment\n                                        style={{ color: getDateDifferenceColor(row.date), ...noWrap }}\n                                        format=\"YYYY-MM-DD\"\n                                    >\n                                        {row.date}\n                                    </Moment>\n                                </Tooltip>\n                            </MinTableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RecordsChart from '../RecordsChart';\nimport UniqueRecordsChart from '../UniqueRecordsChart';\nimport LongestDomination from '../LongestDomination';\nimport LongestLasting from '../LongestLasting';\nimport LargestImprovement from '../LargestImprovement';\nimport RankingsTable from '../RankingsTableTrackmania';\nimport SimpleTitle from '../SimpleTitle';\nimport Api from '../../Api';\nimport { useIsMounted, useRenders } from '../../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    padTop: {\n        paddingTop: '70px',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nconst StatisticsTab = ({ gameName }) => {\n    const isMounted = useIsMounted();\n\n    const [game, setGame] = React.useState(undefined);\n    const [campaignName, setCampaign] = React.useState(undefined);\n    const [type, setType] = React.useState('longestLasting');\n    const [trackType, setTrackType] = React.useState('Race');\n\n    const onChangeType = React.useCallback(\n        (event) => {\n            setType(event.target.value);\n        },\n        [setType],\n    );\n    const onChangeTrackType = React.useCallback(\n        (event) => {\n            setTrackType(event.target.value);\n        },\n        [setTrackType],\n    );\n    const onChangeCampaign = React.useCallback(\n        (event) => {\n            setCampaign(event.target.value);\n            setTrackType(\n                game ? game.find((campaign) => campaign.name === event.target.value)[type][0].track.type : 'Race',\n            );\n        },\n        [game, setCampaign, setTrackType],\n    );\n\n    React.useEffect(() => {\n        setGame(undefined);\n\n        Api.request(gameName, 'stats')\n            .then((game) => {\n                if (isMounted.current) {\n                    setGame(game);\n                    setCampaign(game[0].name);\n                    setTrackType(game[0][type][0].track.type);\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                if (isMounted.current) {\n                    setGame(null);\n                }\n            });\n    }, [setGame, setCampaign, setTrackType, isMounted]);\n\n    const StatsComponent = (() => {\n        switch (type) {\n            case 'longestDomination':\n                return LongestDomination;\n            case 'longestLasting':\n                return LongestLasting;\n            case 'largestImprovement':\n                return LargestImprovement;\n            default:\n                return null;\n        }\n    })();\n\n    const classes = useStyles();\n\n    const currentCampaign = game ? game.find((campaign) => campaign.name === campaignName) : undefined;\n\n    return (\n        <>\n            {campaignName && game && game.length > 1 && (\n                <FormControl className={classes.formControl}>\n                    <InputLabel>Campaign</InputLabel>\n                    <Select value={campaignName} onChange={onChangeCampaign}>\n                        {game.map((campaign) => {\n                            return (\n                                <MenuItem value={campaign.name} key={campaign.name}>\n                                    {campaign.name}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n            )}\n            <FormControl className={classes.formControl}>\n                <InputLabel>Stats Type</InputLabel>\n                <Select value={type} onChange={onChangeType}>\n                    <MenuItem value={'longestLasting'}>Longest Lasting</MenuItem>\n                    <MenuItem value={'longestDomination'}>Longest Domination</MenuItem>\n                    <MenuItem value={'largestImprovement'}>Largest Improvement</MenuItem>\n                </Select>\n            </FormControl>\n            {currentCampaign && new Set(currentCampaign[type].map(({ track }) => track.type)).size > 1 && (\n                <FormControl className={classes.formControl}>\n                    <InputLabel>Track Type</InputLabel>\n                    <Select value={trackType} onChange={onChangeTrackType}>\n                        <MenuItem value={'Race'}>Race</MenuItem>\n                        <MenuItem value={'Stunts'}>Stunts</MenuItem>\n                    </Select>\n                </FormControl>\n            )}\n            {currentCampaign === null && <SimpleTitle data=\"No data.\" />}\n            {currentCampaign === undefined && <LinearProgress />}\n            {currentCampaign !== null && currentCampaign !== undefined && (\n                <Grid container direction=\"column\" justify=\"center\">\n                    <Grid item xs={12}>\n                        <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                            <Grid item xs={12}>\n                                {currentCampaign && currentCampaign[type] && (\n                                    <StatsComponent\n                                        game={gameName}\n                                        data={currentCampaign[type].filter(({ track }) => track.type === trackType)}\n                                        trackType={trackType}\n                                    />\n                                )}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            )}\n        </>\n    );\n};\n\nexport default StatisticsTab;\n","import React from 'react';\nimport moment from 'moment';\nimport { withRouter } from 'react-router';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport FloatingActionButton from '../components/FloatingActionButton';\nimport ViewContent from './ViewContent';\nimport CampaignTab from '../components/history/CampaignTab';\nimport RankingsTab from '../components/history/RankingsTab';\nimport StatisticsTab from '../components/history/StatisticsTab';\n\nconst TrackmaniaHistoryView = ({ match }) => {\n    const [tab, setTab] = React.useState(0);\n\n    const page = match.path;\n\n    React.useEffect(() => {\n        setTab(0);\n    }, [page]);\n\n    const handleTab = (_, newValue) => {\n        setTab(newValue);\n    };\n\n    const gameName = match.path.slice(1);\n\n    return (\n        <ViewContent>\n            <Paper>\n                <Tabs\n                    value={tab}\n                    onChange={handleTab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                >\n                    <Tab label=\"Campaign\" />\n                    <Tab label=\"Rankings\" />\n                    <Tab label=\"Statistics\" />\n                </Tabs>\n                <Typography component=\"div\" role=\"tabpanel\">\n                    <Box p={3}>\n                        {tab === 0 && <CampaignTab gameName={gameName} />}\n                        {tab === 1 && <RankingsTab gameName={gameName} />}\n                        {tab === 2 && <StatisticsTab gameName={gameName} />}\n                    </Box>\n                </Typography>\n            </Paper>\n            <FloatingActionButton />\n        </ViewContent>\n    );\n};\n\nexport default withRouter(TrackmaniaHistoryView);\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { red, orange } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport AppBar from './components/AppBar';\nimport AboutView from './views/AboutView';\nimport GameView from './views/GameView';\nimport ReplayView from './views/ReplayView';\nimport NotFoundView from './views/NotFoundView';\nimport AppState, { AppReducer } from './AppState';\nimport TrackmaniaView from './views/TrackmaniaView';\nimport TrackmaniaHistoryView from './views/TrackmaniaHistoryView';\n\nconst useStyles = makeStyles((theme) => ({\n    views: {\n        marginTop: theme.spacing(5),\n    },\n}));\n\nconst App = () => {\n    const [state, dispatch] = React.useReducer(...AppReducer);\n\n    const theme = React.useMemo(() => {\n        return createMuiTheme({\n            palette: {\n                primary: {\n                    light: red[300],\n                    main: red[500],\n                    dark: red[700],\n                },\n                secondary: {\n                    light: orange[300],\n                    main: orange[500],\n                    dark: orange[700],\n                },\n                error: {\n                    main: red.A400,\n                },\n                type: state.darkMode.enabled ? 'dark' : 'light',\n            },\n        });\n    }, [state.darkMode.enabled]);\n\n    const classes = useStyles();\n    const context = React.useMemo(() => ({ state, dispatch }), [state, dispatch]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <AppState.Provider value={context}>\n                <BrowserRouter basename={process.env.NODE_ENV === 'production' ? '/trackmania-records' : '/'}>\n                    <AppBar />\n                    <div className={classes.views}>\n                        <Switch>\n                            <Redirect exact from=\"/\" to=\"/trackmania\" />\n                            <Redirect exact from=\"/tm\" to=\"/trackmania\" />\n                            <Redirect exact from=\"/wii\" to=\"/tmwii\" />\n                            <Redirect exact from=\"/tmo\" to=\"/original\" />\n                            <Redirect exact from=\"/tmn\" to=\"/nations\" />\n                            <Redirect exact from=\"/tms\" to=\"/sunrise\" />\n                            <Redirect exact from=\"/tmnf\" to=\"/tmnforever\" />\n                            <Route exact path=\"/trackmania\" component={TrackmaniaView} />\n                            <Route exact path=\"/tmnforever\" component={TrackmaniaHistoryView} />\n                            <Route exact path=\"/united\" component={TrackmaniaHistoryView} />\n                            <Route\n                                exact\n                                path=\"/(nations|original|sunrise|tm2|tmwii)/:date?\"\n                                component={GameView}\n                            />\n                            <Route exact path=\"/about\" component={AboutView} />\n                            <Route exact path=\"/replay\" component={ReplayView} />\n                            <Route component={NotFoundView} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </AppState.Provider>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './utils/serviceWorker';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}