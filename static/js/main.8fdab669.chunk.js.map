{"version":3,"sources":["api lazy /^/.//.*/.json$/ groupOptions: {} namespace object","Hooks.js","components/AppBar.js","views/ViewContent.js","AppState.js","views/AboutView.js","utils/stableSort.js","utils/tmx.js","components/RankingsTable.js","utils/tools.js","components/RecordsTable.js","components/SimpleTitle.js","components/RecordsChart.js","Api.js","views/GameView.js","views/ReplayView.js","views/NotFoundView.js","App.js","utils/serviceWorker.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","useIsMounted","ref","React","useRef","useEffect","current","useStyles","makeStyles","theme","root","paddingBottom","spacing","list","width","menuButton","marginLeft","marginRight","drawer","flexShrink","appBar","zIndex","flex","active","color","palette","primary","main","pageLinks","title","link","inDrawer","default","withRouter","location","useState","open","setOpen","page","useMemo","find","x","pathname","startsWith","document","host","showDrawer","state","classes","className","List","ListItem","button","key","component","RouterLink","to","ListItemText","Divider","filter","item","index","undefined","position","Toolbar","Hidden","lgUp","IconButton","onClick","Typography","variant","Link","underline","implementation","SwipeableDrawer","onClose","onOpen","tabIndex","role","onKeyDown","mdDown","Drawer","ViewContent","children","Grid","container","xs","md","lg","inititalState","darkMode","this","enabled","localStorage","getItem","setItem","toString","AppReducer","action","toggle","createContext","aboutBox","padding","branches","noWrap","whiteSpace","MinTableCell","props","TableCell","size","Padding","style","paddingTop","AboutView","isMounted","useContext","AppState","dispatch","gitHub","setGitHub","anyErrors","err","console","error","all","branch","fetch","results","res","json","log","sha","author","message","commit","date","catch","Paper","length","CircularProgress","progress","overflowX","Table","TableHead","TableRow","TableBody","idx","align","rel","href","Tooltip","moment","from","html_url","login","FormGroup","row","FormControlLabel","control","Switch","checked","onChange","label","getPropFast","obj","path","indexOf","split","s","reduce","acc","val","protocol","game","includes","trackUrl","imageUrl","replayUrl","userUrl","rows","sortable","id2","RankingsTableHead","order","orderBy","onRequestSort","sortDirection","placement","enterDelay","TableSortLabel","direction","prop1","prop2","event","_","defaultState","thenBy","rowsPerPage","minifiedStyle","RecordsTable","data","setState","newOrderBy","newThenBy","array","desc","a","b","aa","bb","cmp","el","sort","stableSortSort","slice","user","tmx","target","name","wrs","duration","formatScore","score","csec","tsec","Math","floor","sec","min","msec","hourScale","scaleLinear","domain","range","getDateDifferenceColor","passedHours","diff","RecordsTableHead","property","stats","useLiveDuration","stableSort","wr","track","isFirst","rowSpan","records","type","fromNow","format","unit","totalTime","humanize","colSpan","totalPoints","gutterBottom","withTheme","labels","series","isDarkTheme","options","legend","show","responsive","breakpoint","chart","height","plotOptions","pie","donut","value","total","url","status","ok","fab","margin","top","right","bottom","left","padTop","match","setGame","gameName","setGameName","tab","setTab","params","Api","request","tracks","campaign","push","leaderboard","forEach","entry","r","LinearProgress","SimpleTitle","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","Box","p","justify","alignContent","RankingsTable","Zoom","in","timeout","Fab","smoothScroll","y","documentElement","scrollTop","window","requestAnimationFrame","scrollTo","NotFoundView","replay","setReplay","handleChange","useCallback","ev","file","files","reader","FileReader","onload","result","Buffer","Replay","read","parseGhost","removeData","_view","readAsArrayBuffer","querySelector","addEventListener","removeEventListener","fontSize","src","displayDataTypes","displayObjectSize","enableClipboard","views","marginTop","App","useReducer","createMuiTheme","light","red","dark","secondary","orange","A400","context","ThemeProvider","CssBaseline","Provider","basename","exact","GameView","ReplayView","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8fdab669.chunk.js","sourcesContent":["var map = {\n\t\"./nations/2019-09-22.json\": [\n\t\t150,\n\t\t3\n\t],\n\t\"./nations/2019-09-23.json\": [\n\t\t151,\n\t\t4\n\t],\n\t\"./nations/latest.json\": [\n\t\t152,\n\t\t5\n\t],\n\t\"./original/2019-09-22.json\": [\n\t\t153,\n\t\t6\n\t],\n\t\"./original/2019-09-23.json\": [\n\t\t154,\n\t\t7\n\t],\n\t\"./original/latest.json\": [\n\t\t155,\n\t\t8\n\t],\n\t\"./sunrise/2019-09-22.json\": [\n\t\t156,\n\t\t9\n\t],\n\t\"./sunrise/2019-09-23.json\": [\n\t\t157,\n\t\t10\n\t],\n\t\"./sunrise/latest.json\": [\n\t\t158,\n\t\t11\n\t],\n\t\"./tm2/2019-09-22.json\": [\n\t\t159,\n\t\t12\n\t],\n\t\"./tm2/2019-09-23.json\": [\n\t\t160,\n\t\t13\n\t],\n\t\"./tm2/latest.json\": [\n\t\t161,\n\t\t14\n\t],\n\t\"./tmnforever/2019-09-22.json\": [\n\t\t162,\n\t\t15\n\t],\n\t\"./tmnforever/2019-09-23.json\": [\n\t\t163,\n\t\t16\n\t],\n\t\"./tmnforever/latest.json\": [\n\t\t164,\n\t\t17\n\t],\n\t\"./united/2019-09-23.json\": [\n\t\t165,\n\t\t18\n\t],\n\t\"./united/latest.json\": [\n\t\t166,\n\t\t19\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 145;\nmodule.exports = webpackAsyncContext;","import React from 'react';\n\nexport const useIsMounted = () => {\n    const ref = React.useRef(false);\n    React.useEffect(() => {\n        ref.current = true;\n        return () => (ref.current = false);\n    }, []);\n    return ref;\n};\n\nexport const useRenders = (debug) => {\n    const ref = React.useRef(0);\n    console.log(debug + ' renders: ', ++ref.current);\n};\n\nexport const useTitle = (title) => {\n    React.useEffect(() => {\n        document.title = title + ' - ' + document.location.host;\n    }, [title]);\n};\n","import React from 'react';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport MaterialAppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useTitle } from '../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingBottom: theme.spacing(8),\n    },\n    list: {\n        width: theme.spacing(25),\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n    drawer: {\n        width: 240,\n        flexShrink: 0,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    flex: {\n        flex: 1,\n    },\n    active: {\n        color: theme.palette.primary.main,\n    },\n}));\n\nconst pageLinks = [\n    { title: '404 - Page Not Found', link: null, inDrawer: false },\n    { title: 'tmx-records', link: '/', inDrawer: false },\n    { title: 'TrackMania 2', link: '/tm2', inDrawer: true, default: true },\n    { title: 'Nations Forever', link: '/tmnforever', inDrawer: true },\n    { title: 'United', link: '/united', inDrawer: true },\n    { title: 'Nations ESWC', link: '/nations', inDrawer: true },\n    { title: 'Sunrise', link: '/sunrise', inDrawer: true },\n    { title: 'Original', link: '/original', inDrawer: true },\n    { title: 'Replay Inspection', link: '/replay', inDrawer: false },\n    { title: 'About', link: '/about', inDrawer: false },\n];\n\nconst AppBar = ({ location }) => {\n    const [open, setOpen] = React.useState(false);\n\n    const page = React.useMemo(\n        () =>\n            pageLinks.find((x) => x.link === location.pathname || (x.link !== null && location.pathname.startsWith(x.link + '/'))) ||\n            pageLinks[0],\n        [location],\n    );\n\n    useTitle(page.title);\n\n    const showDrawer = (state) => () => {\n        setOpen(state);\n    };\n\n    const classes = useStyles();\n\n    const list = (\n        <div className={classes.list}>\n            <List>\n                <ListItem button key={0} component={RouterLink} to={'/'}>\n                    <ListItemText primary=\"TMX Records\" />\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n                {pageLinks\n                    .filter((x) => x.inDrawer)\n                    .map((item, index) => (\n                        <ListItem\n                            button\n                            key={index}\n                            component={RouterLink}\n                            to={item.link}\n                            className={item.title === page.title ? classes.active : undefined}\n                        >\n                            <ListItemText primary={item.title} />\n                        </ListItem>\n                    ))}\n                <Divider />\n                <List>\n                    <ListItem button key={0} component={RouterLink} to={'/about'}>\n                        <ListItemText primary={'About'} />\n                    </ListItem>\n                </List>\n            </List>\n        </div>\n    );\n\n    return (\n        <div className={classes.root}>\n            <MaterialAppBar className={classes.appBar} position=\"fixed\">\n                <Toolbar>\n                    <Hidden lgUp>\n                        <IconButton className={classes.menuButton} onClick={showDrawer(true)} color=\"inherit\">\n                            <MenuIcon />\n                        </IconButton>\n                    </Hidden>\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        <Link component={RouterLink} to=\"/\" color=\"inherit\" underline=\"none\">\n                            TMX Records\n                        </Link>\n                    </Typography>\n                </Toolbar>\n            </MaterialAppBar>\n            <Hidden lgUp implementation=\"css\">\n                <SwipeableDrawer open={open} onClose={showDrawer(false)} onOpen={showDrawer(true)} variant=\"temporary\">\n                    <div tabIndex={0} role=\"button\" onClick={showDrawer(false)} onKeyDown={showDrawer(false)}>\n                        {list}\n                    </div>\n                </SwipeableDrawer>\n            </Hidden>\n            <Hidden mdDown implementation=\"css\">\n                <Drawer variant=\"permanent\">\n                    <div tabIndex={0} role=\"button\">\n                        {list}\n                    </div>\n                </Drawer>\n            </Hidden>\n        </div>\n    );\n};\n\nexport default withRouter(AppBar);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nconst ViewContent = ({ children }) => (\n    <Grid container>\n        <Grid item xs={false} md={1} lg={2} />\n        <Grid item xs={12} md={10} lg={9}>\n            {children}\n        </Grid>\n    </Grid>\n);\n\nexport default ViewContent;\n","\nimport React from 'react';\n\nclass DarkMode {\n    constructor() {\n        this.enabled = localStorage.getItem('dark_mode') === 'true';\n    }\n    toggle() {\n        this.enabled = !this.enabled;\n        localStorage.setItem('dark_mode', this.enabled.toString());\n        return this;\n    }\n}\n\nconst inititalState = {\n    darkMode: new DarkMode(),\n};\n\nexport const AppReducer = [\n    (state, { action }) => {\n        switch (action) {\n            case 'toggleDarkMode':\n                return {\n                    ...state,\n                    darkMode: state.darkMode.toggle(),\n                };\n            default:\n                throw new Error('Unknown action type.');\n        }\n    },\n    inititalState,\n];\n\nexport default React.createContext(inititalState);\n","import React from 'react';\nimport moment from 'moment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Switch from '@material-ui/core/Switch';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ViewContent from './ViewContent';\nimport AppState from '../AppState';\nimport { useIsMounted } from '../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    aboutBox: {\n        padding: theme.spacing(3),\n    },\n}));\n\nconst branches = ['master', 'api', 'gh-pages'];\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst MinTableCell = (props) => <TableCell size=\"small\" {...props} />;\nconst Padding = () => <div style={{ paddingTop: '50px' }} />;\n\nconst AboutView = () => {\n    const isMounted = useIsMounted();\n\n    const {\n        state: { darkMode },\n        dispatch,\n    } = React.useContext(AppState);\n\n    const [gitHub, setGitHub] = React.useState([]);\n\n    const toggleDarkMode = () => {\n        dispatch({ action: 'toggleDarkMode' });\n    };\n\n    React.useEffect(() => {\n        const anyErrors = (err) => {\n            console.error(err);\n            if (isMounted.current) {\n                setGitHub(undefined);\n            }\n        };\n\n        Promise.all(branches.map((branch) => fetch('https://api.github.com/repos/NeKzor/tmx-records/commits/' + branch)))\n            .then((results) => {\n                Promise.all(results.map((res) => res.json()))\n                    .then((branches) => {\n                        console.log('fetched');\n                        if (isMounted.current) {\n                            setGitHub(\n                                branches.map((branch) => ({\n                                    sha: branch.sha,\n                                    author: branch.author,\n                                    message: branch.commit.message,\n                                    date: branch.commit.author.date,\n                                })),\n                            );\n                        }\n                    })\n                    .catch(anyErrors);\n            })\n            .catch(anyErrors);\n    }, [isMounted]);\n\n    const classes = useStyles();\n\n    return (\n        <ViewContent>\n            <Paper className={classes.aboutBox}>\n                <Typography component=\"h2\" variant=\"h5\">\n                    TrackMania Exchange Records & Statistics\n                </Typography>\n                <br />\n                <Typography variant=\"body1\">This web app mirrors TrackMania Exchange Nadeo records.</Typography>\n                <Typography variant=\"body1\">\n                    Additionally it ranks players based on how many world records they hold and how long their records have been lasting.\n                </Typography>\n\n                <Padding />\n\n                <Typography variant=\"h5\">Last Update</Typography>\n                <br />\n                {gitHub === undefined ? (\n                    <Typography variant=\"body1\">Unable to fetch status from GitHub.</Typography>\n                ) : gitHub.length === 0 ? (\n                    <CircularProgress className={classes.progress} />\n                ) : (\n                    <div style={{ overflowX: 'auto' }}>\n                        <Table size=\"small\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Branch</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Date</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Author</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Commit</Typography>\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {gitHub.map((commit, idx) => {\n                                    const branch = branches[idx];\n                                    return (\n                                        <TableRow tabIndex={-1} key={idx} style={noWrap}>\n                                            <MinTableCell align=\"left\">\n                                                <Link\n                                                    color=\"inherit\"\n                                                    rel=\"noopener\"\n                                                    href={'https://github.com/NeKzor/tmx-records/tree/' + branch}\n                                                >\n                                                    {branch}\n                                                </Link>\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\" style={noWrap}>\n                                                <Tooltip title={moment(commit.date).toString()}>\n                                                    <span>{moment(commit.date).from()}</span>\n                                                </Tooltip>\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\">\n                                                <Link color=\"inherit\" rel=\"noopener\" href={commit.author.html_url}>\n                                                    {commit.author.login}\n                                                </Link>\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\" style={noWrap}>\n                                                <Tooltip title={commit.message}>\n                                                    <Link\n                                                        color=\"inherit\"\n                                                        rel=\"noopener\"\n                                                        href={'https://github.com/NeKzor/tmx-records/commit/' + commit.sha}\n                                                    >\n                                                        {commit.sha}\n                                                    </Link>\n                                                </Tooltip>\n                                            </MinTableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            </TableBody>\n                        </Table>\n                    </div>\n                )}\n\n                <Padding />\n\n                <Typography variant=\"h5\">Theme Settings</Typography>\n                <br />\n                <FormGroup row>\n                    <FormControlLabel\n                        control={<Switch checked={darkMode.enabled} onChange={toggleDarkMode} color=\"primary\" />}\n                        label=\"Dark Mode\"\n                    />\n                </FormGroup>\n\n                <Padding />\n\n                <Typography variant=\"h5\">Credits</Typography>\n                <br />\n                <Link rel=\"noopener\" href=\"http://www.tm-exchange.com\">\n                    tm-exchange.com\n                </Link>\n                <br />\n                <Link rel=\"noopener\" href=\"https://tm.mania-exchange.com\">\n                    tm.mania-exchange.com\n                </Link>\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default AboutView;\n","export const stableSort = (array, order, orderBy) => {\n    let desc = (a, b) => {\n        let aa = getPropFast(a, orderBy);\n        let bb = getPropFast(b, orderBy);\n        if (bb < aa) return -1;\n        if (bb > aa) return 1;\n        return 0;\n    };\n\n    let cmp = order === 'desc' ? (a, b) => desc(a, b) : (a, b) => -desc(a, b);\n\n    let sort = (a, b) => {\n        let order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    };\n\n    return array\n        .map((el, index) => [el, index])\n        .sort(sort)\n        .map((el) => el[0]);\n};\nexport const stableSortSort = (array, order, orderBy, thenBy) => {\n    let desc = (a, b) => {\n        let aa = getPropFast(a, orderBy);\n        let bb = getPropFast(b, orderBy);\n        if (bb < aa) return -1;\n        if (bb > aa) return 1;\n        aa = getPropFast(a, thenBy);\n        bb = getPropFast(b, thenBy);\n        if (bb < aa) return -1;\n        if (bb > aa) return 1;\n        return 0;\n    };\n\n    let cmp = order === 'desc' ? (a, b) => desc(a, b) : (a, b) => -desc(a, b);\n\n    let sort = (a, b) => {\n        let order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    };\n\n    return array\n        .map((el, index) => [el, index])\n        .sort(sort)\n        .map((el) => el[0]);\n};\n\n// Util which returns the value of nested objects by string: getPropFast({ a: { b: 3 } }, 'a.b') === 3\nconst getPropFast = (obj, path) =>\n    path.indexOf('.') !== -1\n        ? path\n              .split('.')\n              .filter((s) => s)\n              .reduce((acc, val) => acc && acc[val], obj)\n        : obj[path];\n","const protocol = (game) => ['nations', 'sunrise', 'original'].includes(game) ? 'http' : 'https'; \n\nexport default (game) =>\n    game === 'tm2'\n        ? {\n              trackUrl: (id) => `https://tm.mania-exchange.com/tracks/${id}`,\n              imageUrl: (id) => `https://tm.mania-exchange.com/tracks/screenshot/normal/${id}`,\n              replayUrl: (id) => `https://tm.mania-exchange.com/replays/download/${id}`,\n              userUrl: (id) => `https://tm.mania-exchange.com/user/profile/${id}`,\n          }\n        : (() => ({\n              trackUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/main.aspx?action=trackshow&id=${id}`,\n              imageUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/getclean.aspx?action=trackscreenscreens&id=${id}`,\n              replayUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/get.aspx?action=recordgbx&id=${id}`,\n              userUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/main.aspx?action=usershow&id=${id}`,\n          }))();\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { stableSortSort } from '../utils/stableSort';\nimport tmx from '../utils/tmx';\n\nconst rows = [\n    { id: 'user.name', sortable: false, label: 'Player', align: 'left' },\n    { id: 'wrs', id2: 'duration', sortable: true, label: 'World Records', align: 'left' },\n    { id: 'duration', id2: 'wrs', sortable: true, label: 'Total Duration', align: 'left' },\n];\n\nconst RankingsTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (prop1, prop2) => (event) => {\n        onRequestSort(event, prop1, prop2);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell key={row.id} align={row.align} padding=\"default\" sortDirection={orderBy === row.id ? order : false}>\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel active={orderBy === row.id} direction={order} onClick={createSortHandler(row.id, row.id2)}>\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'desc',\n    orderBy: 'wrs',\n    thenBy: 'duration',\n    page: 0,\n    rowsPerPage: 50,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTable = ({ data, game }) => {\n    const [{ order, orderBy, thenBy, rowsPerPage, page }, setState] = React.useState(defaultState);\n\n    const handleRequestSort = (_, prop1, prop2) => {\n        const newOrderBy = prop1;\n        const newThenBy = prop2;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n            thenBy: newThenBy,\n        }));\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RankingsTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n                <TableBody>\n                    {stableSortSort(data, order, orderBy, thenBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row) => (\n                            <TableRow tabIndex={-1} key={row.user.id}>\n                                <MinTableCell align=\"left\">\n                                    <Link style={noWrap} color=\"inherit\" href={tmx(game).userUrl(row.user.id)} rel=\"noreferrer\" target=\"_blank\">\n                                        {row.user.name}\n                                    </Link>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">{row.wrs}</MinTableCell>\n                                <MinTableCell align=\"left\">{row.duration} day{row.duration === 1 ? '' : 's'}</MinTableCell>\n                            </TableRow>\n                        ))}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import { scaleLinear } from 'd3-scale';\nimport moment from 'moment';\n\nexport function formatScore(score, game, type = undefined) {\n    if (type === 'Stunts') {\n        return score + ' pts.';\n    }\n    if (game !== 'tm2') {\n        score /= 10;\n        let csec = score % 100;\n        let tsec = Math.floor(score / 100);\n        let sec = tsec % 60;\n        let min = Math.floor(tsec / 60);\n        return (min > 0 ? min + ':' : '') + (sec < 10 && min > 0 ? '0' + sec : sec) + '.' + (csec < 10 ? '0' + csec : csec);\n    }\n    let msec = score % 1000;\n    let tsec = Math.floor(score / 1000);\n    let sec = tsec % 60;\n    let min = Math.floor(tsec / 60);\n    return (\n        (min > 0 ? min + ':' : '') +\n        (sec < 10 && min > 0 ? '0' + sec : sec) +\n        '.' +\n        (msec < 100 ? (msec < 10 ? '00' + msec : '0' + msec) : msec)\n    );\n}\n\n// credits: https://github.com/iVerb1/Portal2Boards/blob/master/public/js/date.js#L21\nconst hourScale = scaleLinear()\n    .domain([0, 24, 14 * 24, 2 * 30 * 24])\n    .range(['#2eb82e', '#258e25', '#cca300', '#e67300']);\n\nexport function getDateDifferenceColor(date) {\n    let passedHours = moment().diff(moment(date), 'hours');\n    return passedHours <= 2 * 30 * 24 ? hourScale(passedHours) : undefined;\n}\n","import React from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\n/* import IconButton from '@material-ui/core/IconButton'; */\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\n/* import SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport WarningIcon from '@material-ui/icons/Warning'; */\nimport { stableSort } from '../utils/stableSort';\nimport tmx from '../utils/tmx';\nimport { formatScore, getDateDifferenceColor } from '../utils/tools';\n\nconst rows = [\n    { id: 'track.name', sortable: true, label: 'Track', align: 'left' },\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\n    { id: 'date', sortable: true, label: 'Date', align: 'left' },\n    { id: 'duration', sortable: true, label: 'Duration', align: 'left' },\n    /* { id: 'replay', sortable: false, label: 'Replay/Video', align: 'left' }, */\n];\n\nconst RecordsTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell key={row.id} align={row.align} padding=\"default\" sortDirection={orderBy === row.id ? order : false}>\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel active={orderBy === row.id} direction={order} onClick={createSortHandler(row.id)}>\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'asc',\n    orderBy: 'track.name',\n    page: 0,\n    rowsPerPage: 250,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTable = ({ data, game, stats, useLiveDuration }) => {\n    const [{ order, orderBy, rowsPerPage, page }, setState] = React.useState(defaultState);\n\n    const handleRequestSort = (_, property) => {\n        const newOrderBy = property;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n        }));\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RecordsTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n                <TableBody>\n                    {stableSort(data, order, orderBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((wr) => (\n                            <TableRow tabIndex={-1} key={`${wr.track.id}-${wr.user.id}`}>\n                                {(wr.track.isFirst || orderBy !== 'track.name') && (\n                                    <MinTableCell style={noWrap} rowSpan={orderBy !== 'track.name' ? 1 : wr.track.records} align=\"left\">\n                                        <Link color=\"inherit\" href={tmx(game).trackUrl(wr.track.id)} rel=\"noreferrer\" target=\"_blank\">\n                                            {wr.track.name}\n                                        </Link>\n                                    </MinTableCell>\n                                )}\n                                <MinTableCell align=\"left\">{formatScore(wr.score, game, wr.track.type)}</MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Link\n                                        style={noWrap}\n                                        color=\"inherit\"\n                                        href={tmx(game).userUrl(wr.user.id)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {wr.user.name}\n                                    </Link>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Tooltip title={<Moment fromNow>{wr.date}</Moment>} placement=\"bottom-end\" enterDelay={300}>\n                                        <Moment style={{ color: getDateDifferenceColor(wr.date), ...noWrap }} format=\"YYYY-MM-DD\">\n                                            {wr.date}\n                                        </Moment>\n                                    </Tooltip>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\n                                        {useLiveDuration ? (\n                                            <Moment style={noWrap} diff={wr.date} unit=\"days\"></Moment>\n                                        ) : (\n                                            <span>{wr.duration}</span>\n                                        )}\n                                    </Tooltip>\n                                </MinTableCell>\n                                {/* <MinTableCell align=\"left\">\n                                    <Tooltip title=\"Download Replay\" placement=\"bottom-end\" enterDelay={300}>\n                                        <IconButton size=\"small\" href={tmx(game).replayUrl(wr.replay)} target=\"_blank\">\n                                            <SaveAltIcon fontSize=\"inherit\" />\n                                        </IconButton>\n                                    </Tooltip>\n                                    <Tooltip title=\"Search Record on YouTube\" placement=\"bottom-end\" enterDelay={300}>\n                                        <IconButton\n                                            size=\"small\"\n                                            href={`https://www.youtube.com/results?search_query=${[\n                                                game,\n                                                wr.track.name,\n                                                'in',\n                                                formatScore(wr.score, game, wr.track.type),\n                                                'by',\n                                                wr.user.name,\n                                            ].join('+')}`}\n                                            target=\"_blank\"\n                                        >\n                                            <PlayArrowIcon fontSize=\"inherit\" />\n                                        </IconButton>\n                                    </Tooltip>\n                                    {game === 'tm2' && moment(wr.date).isBefore('2017-05-09') && (\n                                        <Tooltip\n                                            title=\"This run was done on an older game version.\"\n                                            placement=\"bottom-end\"\n                                            enterDelay={300}\n                                        >\n                                            <span>\n                                                <IconButton size=\"small\" disabled>\n                                                    <WarningIcon fontSize=\"inherit\" />\n                                                </IconButton>\n                                            </span>\n                                        </Tooltip>\n                                    )}\n                                </MinTableCell> */}\n                            </TableRow>\n                        ))}\n                </TableBody>\n                <TableBody>\n                    {stats.totalTime > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">Total Time</MinTableCell>\n                            <MinTableCell>\n                                <Tooltip title={moment.duration(stats.totalTime, 'ms').humanize()} placement=\"bottom-end\" enterDelay={300}>\n                                    <span>{formatScore(stats.totalTime, game)}</span>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell colSpan={3}></MinTableCell>\n                        </TableRow>\n                    )}\n                    {stats.totalPoints > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">Total Points</MinTableCell>\n                            <MinTableCell>\n                                <span>{formatScore(stats.totalPoints, game, 'Stunts')}</span>\n                            </MinTableCell>\n                            <MinTableCell colSpan={3}></MinTableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default ({ data, props }) => (\n    <Typography variant=\"h5\" gutterBottom style={{ padding: '50px 0px 50px 50px' }} {...props}>\n        {data}\n    </Typography>\n);\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { withTheme } from '@material-ui/styles';\n\nconst RecordsChart = ({ labels, series, title, theme }) => {\n    const isDarkTheme = theme.palette.type === 'dark';\n\n    return (\n        <Chart\n            options={{\n                labels,\n                legend: {\n                    show: false,\n                },\n                responsive: [\n                    {\n                        breakpoint: 380,\n                        options: {\n                            chart: {\n                                height: '300px'\n                            },\n                        },\n                    },\n                ],\n                plotOptions: {\n                    pie: {\n                        donut: {\n                            labels: {\n                                show: true,\n                                name: {\n                                    show: true,\n                                },\n                                value: {\n                                    show: true,\n                                    color: isDarkTheme ? 'white' : 'black',\n                                },\n                                total: {\n                                    show: true,\n                                    label: title,\n                                    color: isDarkTheme ? 'white' : 'black',\n                                },\n                            },\n                        },\n                    },\n                },\n            }}\n            series={series}\n            type=\"donut\"\n            height=\"400\"\n        />\n    );\n};\n\nexport default withTheme(RecordsChart);\n","class Api {\n    async request(game, date) {\n        if (process.env.NODE_ENV === 'development') {\n            try {\n                return (await import(`./api/${game}/${date || 'latest'}.json`)).default;\n            } catch (err) {}\n            return [];\n        }\n        let res = await fetch(`https://raw.githubusercontent.com/NeKzor/tmx-records/api/${game}/${date || 'latest'}.json`);\n        console.log(`GET ${res.url} (${res.status})`);\n        return res.ok ? await res.json() : [];\n    }\n}\n\nexport default new Api();\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport moment from 'moment';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Fab from '@material-ui/core/Fab';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport RankingsTable from '../components/RankingsTable';\nimport RecordsTable from '../components/RecordsTable';\nimport SimpleTitle from '../components/SimpleTitle';\nimport RecordsChart from '../components/RecordsChart';\nimport Api from '../Api';\nimport { useIsMounted } from '../Hooks';\nimport ViewContent from './ViewContent';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((_) => ({\n    fab: {\n        margin: 0,\n        top: 'auto',\n        right: 30,\n        bottom: 30,\n        left: 'auto',\n        position: 'fixed',\n    },\n    padTop: {\n        paddingTop: '70px',\n    },\n}));\n\nconst GameView = ({ match }) => {\n    const isMounted = useIsMounted();\n\n    const [game, setGame] = React.useState(undefined);\n    const [gameName, setGameName] = React.useState('tm2');\n    const [tab, setTab] = React.useState(0);\n\n    const page = match.params[0];\n    const date = match.params.date;\n    const useLiveDuration = date === undefined || date === 'latest';\n\n    React.useEffect(() => {\n        setTab(0);\n        setGame(undefined);\n    }, [page]);\n\n    React.useEffect(() => {\n        (async () => {\n            let game = await Api.request(page, date);\n\n            if (game[0] && game[0].tracks[0].wrs) {\n                for (let campaign of game) {\n                    if (campaign.stats.totalPoints === undefined) {\n                        campaign.stats.totalTime = campaign.tracks\n                            .filter((t) => t.type !== 'Stunts')\n                            .map((t) => t.wrs[0].score)\n                            .reduce((a, b) => a + b, 0);\n                        campaign.stats.totalPoints = campaign.tracks\n                            .filter((t) => t.type === 'Stunts')\n                            .map((t) => t.wrs[0].score)\n                            .reduce((a, b) => a + b, 0);\n                    }\n\n                    let rows = [];\n                    for (let track of campaign.tracks) {\n                        for (let wr of track.wrs) {\n                            let duration = useLiveDuration ? moment().diff(moment(wr.date), 'd') : wr.duration;\n                            rows.push({\n                                track: {\n                                    id: track.id,\n                                    name: track.name,\n                                    type: track.type,\n                                    isFirst: wr === track.wrs[0],\n                                    records: track.wrs.length,\n                                },\n                                ...wr,\n                                duration,\n                            });\n                        }\n                    }\n\n                    campaign.tracks = rows;\n\n                    if (useLiveDuration) {\n                        campaign.leaderboard.forEach((entry, idx) => {\n                            campaign.leaderboard[idx].duration = campaign.tracks\n                                .filter((r) => r.user.id === entry.user.id)\n                                .map((r) => r.duration)\n                                .reduce((a, b) => a + b, 0);\n                        });\n                    }\n                }\n            }\n\n            if (!isMounted.current) return;\n            setGameName(page);\n            setGame(game);\n        })();\n    }, [isMounted, page, date, useLiveDuration]);\n\n    const handleTab = (_, newValue) => {\n        setTab(newValue);\n    };\n\n    const jumpToTop = () => {\n        const smoothScroll = () => {\n            const y = document.documentElement.scrollTop;\n            if (y > 0) {\n                window.requestAnimationFrame(smoothScroll);\n                window.scrollTo(0, y - y / 5);\n            }\n        };\n        smoothScroll();\n    };\n\n    const classes = useStyles();\n\n    return (\n        <ViewContent>\n            <Paper>\n                {game === undefined ? (\n                    <LinearProgress />\n                ) : game.length === 0 ? (\n                    <SimpleTitle data=\"No data.\" />\n                ) : (\n                    <>\n                        {game.length > 1 && (\n                            <Tabs\n                                value={tab}\n                                onChange={handleTab}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                                variant=\"scrollable\"\n                                scrollButtons=\"auto\"\n                            >\n                                {game.map((campaign) => (\n                                    <Tab label={campaign.name} key={campaign.name} />\n                                ))}\n                            </Tabs>\n                        )}\n                        <Typography component=\"div\" role=\"tabpanel\">\n                            <Box p={3}>\n                                <Grid container direction=\"column\" justify=\"center\">\n                                    <Grid item xs={12}>\n                                        <RecordsTable\n                                            data={game[tab].tracks}\n                                            game={gameName}\n                                            stats={game[tab].stats}\n                                            useLiveDuration={useLiveDuration}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} className={classes.padTop}>\n                                        <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                                            <Grid item xs={12} md={6}>\n                                                <RankingsTable data={game[tab].leaderboard} game={page} />\n                                            </Grid>\n                                            <Grid item xs={12} md={6} className={classes.padTop}>\n                                                <Grid container direction=\"column\" justify=\"center\">\n                                                    <Grid item xs={12}>\n                                                        <RecordsChart\n                                                            title=\"WRs\"\n                                                            labels={game[tab].leaderboard.map((row) => row.user.name)}\n                                                            series={game[tab].leaderboard.map((row) => row.wrs)}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} className={classes.padTop}>\n                                                        <RecordsChart\n                                                            title=\"Duration\"\n                                                            labels={game[tab].leaderboard.map((row) => row.user.name)}\n                                                            series={game[tab].leaderboard.map((row) => row.duration)}\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Box>\n                        </Typography>\n                    </>\n                )}\n            </Paper>\n            <Zoom in={game !== undefined && game.length !== 0} timeout={1000}>\n                <Fab title=\"Jump to top\" color=\"primary\" className={classes.fab} onClick={jumpToTop}>\n                    <KeyboardArrowUpIcon />\n                </Fab>\n            </Zoom>\n        </ViewContent>\n    );\n};\n\nexport default withRouter(GameView);\n","import React from 'react';\nimport ReactJson from 'react-json-view';\nimport Paper from '@material-ui/core/Paper';\nimport ViewContent from './ViewContent';\nimport { useIsMounted } from '../Hooks';\n\nconst NotFoundView = () => {\n    const isMounted = useIsMounted();\n\n    const [replay, setReplay] = React.useState({});\n\n    const handleChange = React.useCallback((ev) => {\n        var file = ev.target.files[0];\n        if (file) {\n            var reader = new FileReader();\n            reader.file = file;\n            reader.onload = function({ target: { result } }) {\n                const { Buffer, Replay } = window;\n\n                let replay = window.replay = Replay.default().read(Buffer.from(result), { parseGhost: true });\n                if (!isMounted) return;\n\n                const removeData = (obj) => {\n                    Object.keys(obj).forEach((key) => {\n                        if (key === '_view') {\n                            delete obj._view;\n                        } else if (typeof obj[key] === 'object') {\n                            removeData(obj[key]);\n                        }\n                    });\n                };\n\n                removeData(replay);\n                setReplay(replay);\n            };\n            reader.readAsArrayBuffer(file);\n        }\n    }, [isMounted, setReplay]);\n\n    React.useEffect(() => {\n        document.querySelector('#fileinput').addEventListener('change', handleChange);\n        return () => document.querySelector('#fileinput').removeEventListener('change', handleChange);\n    }, [handleChange]);\n\n    return (\n        <ViewContent>\n            <Paper>\n                <input type=\"file\" id=\"fileinput\" />\n                <ReactJson\n                    name=\"replay\"\n                    style={{ fontSize: '14px' }}\n                    src={replay}\n                    theme=\"solarized\"\n                    displayDataTypes={false}\n                    displayObjectSize={false}\n                    enableClipboard={false}\n                />\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default NotFoundView;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport SimpleTitle from '../components/SimpleTitle';\nimport ViewContent from './ViewContent';\n\nconst NotFoundView = () => {\n    return (\n        <ViewContent>\n            <Paper>\n                <SimpleTitle data=\"Page not found :(\" />\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default NotFoundView;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { red, orange } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport AppBar from './components/AppBar';\nimport AboutView from './views/AboutView';\nimport GameView from './views/GameView';\nimport ReplayView from './views/ReplayView';\nimport NotFoundView from './views/NotFoundView';\nimport AppState, { AppReducer } from './AppState';\n\nconst useStyles = makeStyles((theme) => ({\n    views: {\n        marginTop: theme.spacing(5),\n    },\n}));\n\nconst App = () => {\n    const [state, dispatch] = React.useReducer(...AppReducer);\n\n    const theme = React.useMemo(() => {\n        return createMuiTheme({\n            palette: {\n                primary: {\n                    light: red[300],\n                    main: red[500],\n                    dark: red[700],\n                },\n                secondary: {\n                    light: orange[300],\n                    main: orange[500],\n                    dark: orange[700],\n                },\n                error: {\n                    main: red.A400,\n                },\n                type: state.darkMode.enabled ? 'dark' : 'light',\n            },\n        });\n    }, [state.darkMode.enabled]);\n\n    const classes = useStyles();\n    const context = React.useMemo(() => ({ state, dispatch }), [state, dispatch]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <AppState.Provider value={context}>\n                <BrowserRouter basename={process.env.NODE_ENV === 'production' ? '/tmx-records' : '/'}>\n                    <AppBar />\n                    <div className={classes.views}>\n                        <Switch>\n                            <Redirect exact from=\"/\" to=\"/tm2\" />\n                            <Redirect exact from=\"/tmo\" to=\"/original\" />\n                            <Redirect exact from=\"/tmn\" to=\"/nations\" />\n                            <Redirect exact from=\"/tms\" to=\"/sunrise\" />\n                            <Redirect exact from=\"/tmnf\" to=\"/tmnforever\" />\n                            <Route exact path=\"/(nations|original|sunrise|tm2|tmnforever|united)/:date?\" component={GameView} />\n                            <Route exact path=\"/about\" component={AboutView} />\n                            <Route exact path=\"/replay\" component={ReplayView} />\n                            <Route component={NotFoundView} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </AppState.Provider>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './utils/serviceWorker';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}