{"version":3,"sources":["Hooks.js","components/AppBar.js","views/ViewContent.js","AppState.js","views/AboutView.js","utils/stableSort.js","utils/tmx.js","components/RankingsTable.js","utils/tools.js","components/RecordsTable.js","components/SimpleTitle.js","components/RecordsChart.js","Api.js","views/GameView.js","views/ReplayView.js","views/NotFoundView.js","App.js","utils/serviceWorker.js","index.js"],"names":["useIsMounted","ref","React","useRef","useEffect","current","useStyles","makeStyles","theme","root","paddingBottom","spacing","list","width","menuButton","marginLeft","marginRight","drawer","flexShrink","appBar","zIndex","flex","active","color","palette","primary","main","pageLinks","title","link","inDrawer","default","withRouter","location","useState","open","setOpen","page","useMemo","find","x","pathname","startsWith","document","host","showDrawer","state","classes","className","List","ListItem","button","key","component","RouterLink","to","ListItemText","Divider","filter","map","item","index","undefined","position","Toolbar","Hidden","lgUp","IconButton","onClick","Typography","variant","Link","underline","implementation","SwipeableDrawer","onClose","onOpen","tabIndex","role","onKeyDown","mdDown","Drawer","ViewContent","children","Grid","container","xs","md","lg","inititalState","darkMode","this","enabled","localStorage","getItem","setItem","toString","AppReducer","action","toggle","Error","createContext","aboutBox","padding","branches","repo","branch","noWrap","whiteSpace","MinTableCell","props","TableCell","size","Padding","style","paddingTop","AboutView","isMounted","useContext","AppState","dispatch","gitHub","setGitHub","anyErrors","err","console","error","Promise","all","fetch","then","results","res","json","log","sha","author","message","commit","date","catch","Paper","length","CircularProgress","progress","overflowX","Table","TableHead","TableRow","TableBody","idx","align","rel","href","Tooltip","moment","from","html_url","login","FormGroup","row","FormControlLabel","control","Switch","checked","onChange","label","getPropFast","obj","path","indexOf","split","s","reduce","acc","val","protocol","game","includes","trackUrl","id","imageUrl","replayUrl","userUrl","rows","sortable","id2","RankingsTableHead","order","orderBy","onRequestSort","sortDirection","placement","enterDelay","TableSortLabel","direction","prop1","prop2","event","_","defaultState","thenBy","rowsPerPage","minifiedStyle","RecordsTable","data","setState","newOrderBy","newThenBy","array","desc","a","b","aa","bb","cmp","el","sort","stableSortSort","slice","user","tmx","target","name","wrs","duration","formatScore","score","type","csec","tsec","Math","floor","sec","min","msec","hourScale","scaleLinear","domain","range","getDateDifferenceColor","passedHours","diff","RecordsTableHead","property","stats","useLiveDuration","stableSort","wr","track","isFirst","rowSpan","records","fromNow","format","unit","totalTime","humanize","colSpan","totalPoints","gutterBottom","withTheme","labels","series","isDarkTheme","options","legend","show","responsive","breakpoint","chart","height","plotOptions","pie","donut","value","total","baseApi","url","status","ok","fab","margin","top","right","bottom","left","padTop","match","setGame","gameName","setGameName","tab","setTab","params","Api","request","tracks","campaign","t","push","leaderboard","forEach","entry","r","LinearProgress","SimpleTitle","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","Box","p","justify","alignContent","RankingsTable","Zoom","in","timeout","Fab","smoothScroll","y","documentElement","scrollTop","window","requestAnimationFrame","scrollTo","NotFoundView","replay","setReplay","handleChange","useCallback","ev","file","files","reader","FileReader","onload","result","Buffer","Replay","read","parseGhost","removeData","Object","keys","_view","readAsArrayBuffer","querySelector","addEventListener","removeEventListener","fontSize","src","displayDataTypes","displayObjectSize","enableClipboard","views","marginTop","App","useReducer","createMuiTheme","light","red","dark","secondary","orange","A400","context","ThemeProvider","CssBaseline","Provider","basename","exact","GameView","ReplayView","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bddd200f.chunk.js","sourcesContent":["import React from 'react';\n\nexport const useIsMounted = () => {\n    const ref = React.useRef(false);\n    React.useEffect(() => {\n        ref.current = true;\n        return () => (ref.current = false);\n    }, []);\n    return ref;\n};\n\nexport const useRenders = (debug) => {\n    const ref = React.useRef(0);\n    console.log(debug + ' renders: ', ++ref.current);\n};\n\nexport const useTitle = (title) => {\n    React.useEffect(() => {\n        document.title = title + ' - ' + document.location.host;\n    }, [title]);\n};\n","import React from 'react';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport MaterialAppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useTitle } from '../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingBottom: theme.spacing(8),\n    },\n    list: {\n        width: theme.spacing(25),\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n    drawer: {\n        width: 240,\n        flexShrink: 0,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    flex: {\n        flex: 1,\n    },\n    active: {\n        color: theme.palette.primary.main,\n    },\n}));\n\nconst pageLinks = [\n    { title: '404 - Page Not Found', link: null, inDrawer: false },\n    { title: 'tmx-records', link: '/', inDrawer: false },\n    { title: 'TrackMania 2', link: '/tm2', inDrawer: true, default: true },\n    { title: 'Nations Forever', link: '/tmnforever', inDrawer: true },\n    { title: 'United', link: '/united', inDrawer: true },\n    { title: 'Nations ESWC', link: '/nations', inDrawer: true },\n    { title: 'Sunrise', link: '/sunrise', inDrawer: true },\n    { title: 'Original', link: '/original', inDrawer: true },\n    { title: 'Replay Inspection', link: '/replay', inDrawer: false },\n    { title: 'About', link: '/about', inDrawer: false },\n];\n\nconst AppBar = ({ location }) => {\n    const [open, setOpen] = React.useState(false);\n\n    const page = React.useMemo(\n        () =>\n            pageLinks.find((x) => x.link === location.pathname || (x.link !== null && location.pathname.startsWith(x.link + '/'))) ||\n            pageLinks[0],\n        [location],\n    );\n\n    useTitle(page.title);\n\n    const showDrawer = (state) => () => {\n        setOpen(state);\n    };\n\n    const classes = useStyles();\n\n    const list = (\n        <div className={classes.list}>\n            <List>\n                <ListItem button key={0} component={RouterLink} to={'/'}>\n                    <ListItemText primary=\"TMX Records\" />\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n                {pageLinks\n                    .filter((x) => x.inDrawer)\n                    .map((item, index) => (\n                        <ListItem\n                            button\n                            key={index}\n                            component={RouterLink}\n                            to={item.link}\n                            className={item.title === page.title ? classes.active : undefined}\n                        >\n                            <ListItemText primary={item.title} />\n                        </ListItem>\n                    ))}\n                <Divider />\n                <List>\n                    <ListItem button key={0} component={RouterLink} to={'/about'}>\n                        <ListItemText primary={'About'} />\n                    </ListItem>\n                </List>\n            </List>\n        </div>\n    );\n\n    return (\n        <div className={classes.root}>\n            <MaterialAppBar className={classes.appBar} position=\"fixed\">\n                <Toolbar>\n                    <Hidden lgUp>\n                        <IconButton className={classes.menuButton} onClick={showDrawer(true)} color=\"inherit\">\n                            <MenuIcon />\n                        </IconButton>\n                    </Hidden>\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        <Link component={RouterLink} to=\"/\" color=\"inherit\" underline=\"none\">\n                            TMX Records\n                        </Link>\n                    </Typography>\n                </Toolbar>\n            </MaterialAppBar>\n            <Hidden lgUp implementation=\"css\">\n                <SwipeableDrawer open={open} onClose={showDrawer(false)} onOpen={showDrawer(true)} variant=\"temporary\">\n                    <div tabIndex={0} role=\"button\" onClick={showDrawer(false)} onKeyDown={showDrawer(false)}>\n                        {list}\n                    </div>\n                </SwipeableDrawer>\n            </Hidden>\n            <Hidden mdDown implementation=\"css\">\n                <Drawer variant=\"permanent\">\n                    <div tabIndex={0} role=\"button\">\n                        {list}\n                    </div>\n                </Drawer>\n            </Hidden>\n        </div>\n    );\n};\n\nexport default withRouter(AppBar);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nconst ViewContent = ({ children }) => (\n    <Grid container>\n        <Grid item xs={false} md={1} lg={2} />\n        <Grid item xs={12} md={10} lg={9}>\n            {children}\n        </Grid>\n    </Grid>\n);\n\nexport default ViewContent;\n","import React from 'react';\n\nclass DarkMode {\n    constructor() {\n        this.enabled = localStorage.getItem('dark_mode') === 'true';\n    }\n    toggle() {\n        this.enabled = !this.enabled;\n        localStorage.setItem('dark_mode', this.enabled.toString());\n        return this;\n    }\n}\n\nconst inititalState = {\n    darkMode: new DarkMode(),\n};\n\nexport const AppReducer = [\n    (state, { action }) => {\n        switch (action) {\n            case 'toggleDarkMode':\n                return {\n                    ...state,\n                    darkMode: state.darkMode.toggle(),\n                };\n            default:\n                throw new Error('Unknown action type.');\n        }\n    },\n    inititalState,\n];\n\nexport default React.createContext(inititalState);\n","import React from 'react';\nimport moment from 'moment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Switch from '@material-ui/core/Switch';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ViewContent from './ViewContent';\nimport AppState from '../AppState';\nimport { useIsMounted } from '../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    aboutBox: {\n        padding: theme.spacing(3),\n    },\n}));\n\nconst branches = [\n    { repo: 'NeKzor/tmx-records', branch: 'master' },\n    { repo: 'NeKzBot/tmx-records', branch: 'api' },\n    { repo: 'NeKzor/tmx-records', branch: 'gh-pages' },\n];\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst MinTableCell = (props) => <TableCell size=\"small\" {...props} />;\nconst Padding = () => <div style={{ paddingTop: '50px' }} />;\n\nconst AboutView = () => {\n    const isMounted = useIsMounted();\n\n    const {\n        state: { darkMode },\n        dispatch,\n    } = React.useContext(AppState);\n\n    const [gitHub, setGitHub] = React.useState([]);\n\n    const toggleDarkMode = () => {\n        dispatch({ action: 'toggleDarkMode' });\n    };\n\n    React.useEffect(() => {\n        const anyErrors = (err) => {\n            console.error(err);\n            if (isMounted.current) {\n                setGitHub(undefined);\n            }\n        };\n\n        Promise.all(branches.map(({ repo, branch }) => fetch(`https://api.github.com/repos/${repo}/commits/${branch}`)))\n            .then((results) => {\n                Promise.all(results.map((res) => res.json()))\n                    .then((branches) => {\n                        console.log('fetched');\n                        if (isMounted.current) {\n                            setGitHub(\n                                branches.map((branch) => ({\n                                    sha: branch.sha,\n                                    author: branch.author,\n                                    message: branch.commit.message,\n                                    date: branch.commit.author.date,\n                                })),\n                            );\n                        }\n                    })\n                    .catch(anyErrors);\n            })\n            .catch(anyErrors);\n    }, [isMounted]);\n\n    const classes = useStyles();\n\n    return (\n        <ViewContent>\n            <Paper className={classes.aboutBox}>\n                <Typography component=\"h2\" variant=\"h5\">\n                    TrackMania Exchange Records & Statistics\n                </Typography>\n                <br />\n                <Typography variant=\"body1\">This web app mirrors TrackMania Exchange Nadeo records.</Typography>\n                <Typography variant=\"body1\">\n                    Additionally it ranks players based on how many world records they hold and how long their records have been lasting.\n                </Typography>\n\n                <Padding />\n\n                <Typography variant=\"h5\">Last Update</Typography>\n                <br />\n                {gitHub === undefined ? (\n                    <Typography variant=\"body1\">Unable to fetch status from GitHub.</Typography>\n                ) : gitHub.length === 0 ? (\n                    <CircularProgress className={classes.progress} />\n                ) : (\n                    <div style={{ overflowX: 'auto' }}>\n                        <Table size=\"small\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Branch</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Date</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Author</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Commit</Typography>\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {gitHub.map((commit, idx) => {\n                                    const { repo, branch } = branches[idx];\n                                    return (\n                                        <TableRow tabIndex={-1} key={idx} style={noWrap}>\n                                            <MinTableCell align=\"left\">\n                                                <Link color=\"inherit\" rel=\"noopener\" href={`https://github.com/${repo}/tree/${branch}`}>\n                                                    {branch}\n                                                </Link>\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\" style={noWrap}>\n                                                <Tooltip title={moment(commit.date).toString()}>\n                                                    <span>{moment(commit.date).from()}</span>\n                                                </Tooltip>\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\">\n                                                {commit.author ? (\n                                                    <Link color=\"inherit\" rel=\"noopener\" href={commit.author.html_url}>\n                                                        {commit.author.login}\n                                                    </Link>\n                                                ) : (\n                                                    'n/a'\n                                                )}\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\" style={noWrap}>\n                                                <Tooltip title={commit.message}>\n                                                    <Link\n                                                        color=\"inherit\"\n                                                        rel=\"noopener\"\n                                                        href={'https://github.com/NeKzor/tmx-records/commit/' + commit.sha}\n                                                    >\n                                                        {commit.sha}\n                                                    </Link>\n                                                </Tooltip>\n                                            </MinTableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            </TableBody>\n                        </Table>\n                    </div>\n                )}\n\n                <Padding />\n\n                <Typography variant=\"h5\">Theme Settings</Typography>\n                <br />\n                <FormGroup row>\n                    <FormControlLabel\n                        control={<Switch checked={darkMode.enabled} onChange={toggleDarkMode} color=\"primary\" />}\n                        label=\"Dark Mode\"\n                    />\n                </FormGroup>\n\n                <Padding />\n\n                <Typography variant=\"h5\">Credits</Typography>\n                <br />\n                <Link rel=\"noopener\" href=\"http://www.tm-exchange.com\">\n                    tm-exchange.com\n                </Link>\n                <br />\n                <Link rel=\"noopener\" href=\"https://tm.mania-exchange.com\">\n                    tm.mania-exchange.com\n                </Link>\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default AboutView;\n","export const stableSort = (array, order, orderBy) => {\n    let desc = (a, b) => {\n        let aa = getPropFast(a, orderBy);\n        let bb = getPropFast(b, orderBy);\n        if (bb < aa) return -1;\n        if (bb > aa) return 1;\n        return 0;\n    };\n\n    let cmp = order === 'desc' ? (a, b) => desc(a, b) : (a, b) => -desc(a, b);\n\n    let sort = (a, b) => {\n        let order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    };\n\n    return array\n        .map((el, index) => [el, index])\n        .sort(sort)\n        .map((el) => el[0]);\n};\nexport const stableSortSort = (array, order, orderBy, thenBy) => {\n    let desc = (a, b) => {\n        let aa = getPropFast(a, orderBy);\n        let bb = getPropFast(b, orderBy);\n        if (bb < aa) return -1;\n        if (bb > aa) return 1;\n        aa = getPropFast(a, thenBy);\n        bb = getPropFast(b, thenBy);\n        if (bb < aa) return -1;\n        if (bb > aa) return 1;\n        return 0;\n    };\n\n    let cmp = order === 'desc' ? (a, b) => desc(a, b) : (a, b) => -desc(a, b);\n\n    let sort = (a, b) => {\n        let order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    };\n\n    return array\n        .map((el, index) => [el, index])\n        .sort(sort)\n        .map((el) => el[0]);\n};\n\n// Util which returns the value of nested objects by string: getPropFast({ a: { b: 3 } }, 'a.b') === 3\nconst getPropFast = (obj, path) =>\n    path.indexOf('.') !== -1\n        ? path\n              .split('.')\n              .filter((s) => s)\n              .reduce((acc, val) => acc && acc[val], obj)\n        : obj[path];\n","const protocol = (game) => (['nations', 'sunrise', 'original'].includes(game) ? 'http' : 'https');\n\nexport default (game) =>\n    game === 'tm2'\n        ? {\n              trackUrl: (id) => `https://tm.mania-exchange.com/tracks/${id}`,\n              imageUrl: (id) => `https://tm.mania-exchange.com/tracks/screenshot/normal/${id}`,\n              replayUrl: (id) => `https://tm.mania-exchange.com/replays/download/${id}`,\n              userUrl: (id) => `https://tm.mania-exchange.com/user/profile/${id}`,\n          }\n        : (() => ({\n              trackUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/main.aspx?action=trackshow&id=${id}`,\n              imageUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/getclean.aspx?action=trackscreenscreens&id=${id}`,\n              replayUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/get.aspx?action=recordgbx&id=${id}`,\n              userUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/main.aspx?action=usershow&id=${id}`,\n          }))();\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { stableSortSort } from '../utils/stableSort';\nimport tmx from '../utils/tmx';\n\nconst rows = [\n    { id: 'user.name', sortable: false, label: 'Player', align: 'left' },\n    { id: 'wrs', id2: 'duration', sortable: true, label: 'World Records', align: 'left' },\n    { id: 'duration', id2: 'wrs', sortable: true, label: 'Total Duration', align: 'left' },\n];\n\nconst RankingsTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (prop1, prop2) => (event) => {\n        onRequestSort(event, prop1, prop2);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell key={row.id} align={row.align} padding=\"default\" sortDirection={orderBy === row.id ? order : false}>\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel active={orderBy === row.id} direction={order} onClick={createSortHandler(row.id, row.id2)}>\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'desc',\n    orderBy: 'wrs',\n    thenBy: 'duration',\n    page: 0,\n    rowsPerPage: 50,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTable = ({ data, game }) => {\n    const [{ order, orderBy, thenBy, rowsPerPage, page }, setState] = React.useState(defaultState);\n\n    const handleRequestSort = (_, prop1, prop2) => {\n        const newOrderBy = prop1;\n        const newThenBy = prop2;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n            thenBy: newThenBy,\n        }));\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RankingsTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n                <TableBody>\n                    {stableSortSort(data, order, orderBy, thenBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row) => (\n                            <TableRow tabIndex={-1} key={row.user.id}>\n                                <MinTableCell align=\"left\">\n                                    <Link\n                                        style={noWrap}\n                                        color=\"inherit\"\n                                        href={tmx(game).userUrl(row.user.id)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {row.user.name}\n                                    </Link>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">{row.wrs}</MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    {row.duration} day{row.duration === 1 ? '' : 's'}\n                                </MinTableCell>\n                            </TableRow>\n                        ))}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import { scaleLinear } from 'd3-scale';\nimport moment from 'moment';\n\nexport function formatScore(score, game, type = undefined) {\n    if (type === 'Stunts') {\n        return score + ' pts.';\n    }\n    if (game !== 'tm2') {\n        score /= 10;\n        let csec = score % 100;\n        let tsec = Math.floor(score / 100);\n        let sec = tsec % 60;\n        let min = Math.floor(tsec / 60);\n        return (min > 0 ? min + ':' : '') + (sec < 10 && min > 0 ? '0' + sec : sec) + '.' + (csec < 10 ? '0' + csec : csec);\n    }\n    let msec = score % 1000;\n    let tsec = Math.floor(score / 1000);\n    let sec = tsec % 60;\n    let min = Math.floor(tsec / 60);\n    return (\n        (min > 0 ? min + ':' : '') +\n        (sec < 10 && min > 0 ? '0' + sec : sec) +\n        '.' +\n        (msec < 100 ? (msec < 10 ? '00' + msec : '0' + msec) : msec)\n    );\n}\n\n// credits: https://github.com/iVerb1/Portal2Boards/blob/master/public/js/date.js#L21\nconst hourScale = scaleLinear()\n    .domain([0, 24, 14 * 24, 2 * 30 * 24])\n    .range(['#2eb82e', '#258e25', '#cca300', '#e67300']);\n\nexport function getDateDifferenceColor(date) {\n    let passedHours = moment().diff(moment(date), 'hours');\n    return passedHours <= 2 * 30 * 24 ? hourScale(passedHours) : undefined;\n}\n","import React from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\n/* import IconButton from '@material-ui/core/IconButton'; */\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\n/* import SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport WarningIcon from '@material-ui/icons/Warning'; */\nimport { stableSort } from '../utils/stableSort';\nimport tmx from '../utils/tmx';\nimport { formatScore, getDateDifferenceColor } from '../utils/tools';\n\nconst rows = [\n    { id: 'track.name', sortable: true, label: 'Track', align: 'left' },\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\n    { id: 'date', sortable: true, label: 'Date', align: 'left' },\n    { id: 'duration', sortable: true, label: 'Duration', align: 'left' },\n    /* { id: 'replay', sortable: false, label: 'Replay/Video', align: 'left' }, */\n];\n\nconst RecordsTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell key={row.id} align={row.align} padding=\"default\" sortDirection={orderBy === row.id ? order : false}>\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel active={orderBy === row.id} direction={order} onClick={createSortHandler(row.id)}>\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'asc',\n    orderBy: 'track.name',\n    page: 0,\n    rowsPerPage: 250,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTable = ({ data, game, stats, useLiveDuration }) => {\n    const [{ order, orderBy, rowsPerPage, page }, setState] = React.useState(defaultState);\n\n    const handleRequestSort = (_, property) => {\n        const newOrderBy = property;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n        }));\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RecordsTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n                <TableBody>\n                    {stableSort(data, order, orderBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((wr) => (\n                            <TableRow tabIndex={-1} key={`${wr.track.id}-${wr.user.id}`}>\n                                {(wr.track.isFirst || orderBy !== 'track.name') && (\n                                    <MinTableCell style={noWrap} rowSpan={orderBy !== 'track.name' ? 1 : wr.track.records} align=\"left\">\n                                        <Link color=\"inherit\" href={tmx(game).trackUrl(wr.track.id)} rel=\"noreferrer\" target=\"_blank\">\n                                            {wr.track.name}\n                                        </Link>\n                                    </MinTableCell>\n                                )}\n                                <MinTableCell align=\"left\">{formatScore(wr.score, game, wr.track.type)}</MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Link\n                                        style={noWrap}\n                                        color=\"inherit\"\n                                        href={tmx(game).userUrl(wr.user.id)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {wr.user.name}\n                                    </Link>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Tooltip title={<Moment fromNow>{wr.date}</Moment>} placement=\"bottom-end\" enterDelay={300}>\n                                        <Moment style={{ color: getDateDifferenceColor(wr.date), ...noWrap }} format=\"YYYY-MM-DD\">\n                                            {wr.date}\n                                        </Moment>\n                                    </Tooltip>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\n                                        {useLiveDuration ? (\n                                            <Moment style={noWrap} diff={wr.date} unit=\"days\"></Moment>\n                                        ) : (\n                                            <span>{wr.duration}</span>\n                                        )}\n                                    </Tooltip>\n                                </MinTableCell>\n                                {/* <MinTableCell align=\"left\">\n                                    <Tooltip title=\"Download Replay\" placement=\"bottom-end\" enterDelay={300}>\n                                        <IconButton size=\"small\" href={tmx(game).replayUrl(wr.replay)} target=\"_blank\">\n                                            <SaveAltIcon fontSize=\"inherit\" />\n                                        </IconButton>\n                                    </Tooltip>\n                                    <Tooltip title=\"Search Record on YouTube\" placement=\"bottom-end\" enterDelay={300}>\n                                        <IconButton\n                                            size=\"small\"\n                                            href={`https://www.youtube.com/results?search_query=${[\n                                                game,\n                                                wr.track.name,\n                                                'in',\n                                                formatScore(wr.score, game, wr.track.type),\n                                                'by',\n                                                wr.user.name,\n                                            ].join('+')}`}\n                                            target=\"_blank\"\n                                        >\n                                            <PlayArrowIcon fontSize=\"inherit\" />\n                                        </IconButton>\n                                    </Tooltip>\n                                    {game === 'tm2' && moment(wr.date).isBefore('2017-05-09') && (\n                                        <Tooltip\n                                            title=\"This run was done on an older game version.\"\n                                            placement=\"bottom-end\"\n                                            enterDelay={300}\n                                        >\n                                            <span>\n                                                <IconButton size=\"small\" disabled>\n                                                    <WarningIcon fontSize=\"inherit\" />\n                                                </IconButton>\n                                            </span>\n                                        </Tooltip>\n                                    )}\n                                </MinTableCell> */}\n                            </TableRow>\n                        ))}\n                </TableBody>\n                <TableBody>\n                    {stats.totalTime > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">Total Time</MinTableCell>\n                            <MinTableCell>\n                                <Tooltip title={moment.duration(stats.totalTime, 'ms').humanize()} placement=\"bottom-end\" enterDelay={300}>\n                                    <span>{formatScore(stats.totalTime, game)}</span>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell colSpan={3}></MinTableCell>\n                        </TableRow>\n                    )}\n                    {stats.totalPoints > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">Total Points</MinTableCell>\n                            <MinTableCell>\n                                <span>{formatScore(stats.totalPoints, game, 'Stunts')}</span>\n                            </MinTableCell>\n                            <MinTableCell colSpan={3}></MinTableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default ({ data, props }) => (\n    <Typography variant=\"h5\" gutterBottom style={{ padding: '50px 0px 50px 50px' }} {...props}>\n        {data}\n    </Typography>\n);\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { withTheme } from '@material-ui/styles';\n\nconst RecordsChart = ({ labels, series, title, theme }) => {\n    const isDarkTheme = theme.palette.type === 'dark';\n\n    return (\n        <Chart\n            options={{\n                labels,\n                legend: {\n                    show: false,\n                },\n                responsive: [\n                    {\n                        breakpoint: 380,\n                        options: {\n                            chart: {\n                                height: '300px',\n                            },\n                        },\n                    },\n                ],\n                plotOptions: {\n                    pie: {\n                        donut: {\n                            labels: {\n                                show: true,\n                                name: {\n                                    show: true,\n                                },\n                                value: {\n                                    show: true,\n                                    color: isDarkTheme ? 'white' : 'black',\n                                },\n                                total: {\n                                    show: true,\n                                    label: title,\n                                    color: isDarkTheme ? 'white' : 'black',\n                                },\n                            },\n                        },\n                    },\n                },\n            }}\n            series={series}\n            type=\"donut\"\n            height=\"400\"\n        />\n    );\n};\n\nexport default withTheme(RecordsChart);\n","class Api {\n    constructor() {\n        this.baseApi =\n            process.env.NODE_ENV === 'development' ? 'http://localhost:8080' : 'https://raw.githubusercontent.com/NeKzBot/tmx-records/api';\n    }\n    async request(game, date) {\n        let res = await fetch(`${this.baseApi}/${game}/${date || 'latest'}.json`);\n        console.log(`GET ${res.url} (${res.status})`);\n        return res.ok ? await res.json() : [];\n    }\n}\n\nexport default new Api();\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport moment from 'moment';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Fab from '@material-ui/core/Fab';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport Zoom from '@material-ui/core/Zoom';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport RankingsTable from '../components/RankingsTable';\nimport RecordsTable from '../components/RecordsTable';\nimport SimpleTitle from '../components/SimpleTitle';\nimport RecordsChart from '../components/RecordsChart';\nimport Api from '../Api';\nimport { useIsMounted } from '../Hooks';\nimport ViewContent from './ViewContent';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((_) => ({\n    fab: {\n        margin: 0,\n        top: 'auto',\n        right: 30,\n        bottom: 30,\n        left: 'auto',\n        position: 'fixed',\n    },\n    padTop: {\n        paddingTop: '70px',\n    },\n}));\n\nconst GameView = ({ match }) => {\n    const isMounted = useIsMounted();\n\n    const [game, setGame] = React.useState(undefined);\n    const [gameName, setGameName] = React.useState('tm2');\n    const [tab, setTab] = React.useState(0);\n\n    const page = match.params[0];\n    const date = match.params.date;\n    const useLiveDuration = date === undefined || date === 'latest';\n\n    React.useEffect(() => {\n        setTab(0);\n        setGame(undefined);\n    }, [page]);\n\n    React.useEffect(() => {\n        (async () => {\n            let game = await Api.request(page, date);\n\n            if (game[0] && game[0].tracks[0].wrs) {\n                for (let campaign of game) {\n                    if (campaign.stats.totalPoints === undefined) {\n                        campaign.stats.totalTime = campaign.tracks\n                            .filter((t) => t.type !== 'Stunts')\n                            .map((t) => t.wrs[0].score)\n                            .reduce((a, b) => a + b, 0);\n                        campaign.stats.totalPoints = campaign.tracks\n                            .filter((t) => t.type === 'Stunts')\n                            .map((t) => t.wrs[0].score)\n                            .reduce((a, b) => a + b, 0);\n                    }\n\n                    let rows = [];\n                    for (let track of campaign.tracks) {\n                        for (let wr of track.wrs) {\n                            let duration = useLiveDuration ? moment().diff(moment(wr.date), 'd') : wr.duration;\n                            rows.push({\n                                track: {\n                                    id: track.id,\n                                    name: track.name,\n                                    type: track.type,\n                                    isFirst: wr === track.wrs[0],\n                                    records: track.wrs.length,\n                                },\n                                ...wr,\n                                duration,\n                            });\n                        }\n                    }\n\n                    campaign.tracks = rows;\n\n                    if (useLiveDuration) {\n                        campaign.leaderboard.forEach((entry, idx) => {\n                            campaign.leaderboard[idx].duration = campaign.tracks\n                                .filter((r) => r.user.id === entry.user.id)\n                                .map((r) => r.duration)\n                                .reduce((a, b) => a + b, 0);\n                        });\n                    }\n                }\n            }\n\n            if (!isMounted.current) return;\n            setGameName(page);\n            setGame(game);\n        })();\n    }, [isMounted, page, date, useLiveDuration]);\n\n    const handleTab = (_, newValue) => {\n        setTab(newValue);\n    };\n\n    const jumpToTop = () => {\n        const smoothScroll = () => {\n            const y = document.documentElement.scrollTop;\n            if (y > 0) {\n                window.requestAnimationFrame(smoothScroll);\n                window.scrollTo(0, y - y / 5);\n            }\n        };\n        smoothScroll();\n    };\n\n    const classes = useStyles();\n\n    return (\n        <ViewContent>\n            <Paper>\n                {game === undefined ? (\n                    <LinearProgress />\n                ) : game.length === 0 ? (\n                    <SimpleTitle data=\"No data.\" />\n                ) : (\n                    <>\n                        {game.length > 1 && (\n                            <Tabs\n                                value={tab}\n                                onChange={handleTab}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                                variant=\"scrollable\"\n                                scrollButtons=\"auto\"\n                            >\n                                {game.map((campaign) => (\n                                    <Tab label={campaign.name} key={campaign.name} />\n                                ))}\n                            </Tabs>\n                        )}\n                        <Typography component=\"div\" role=\"tabpanel\">\n                            <Box p={3}>\n                                <Grid container direction=\"column\" justify=\"center\">\n                                    <Grid item xs={12}>\n                                        <RecordsTable\n                                            data={game[tab].tracks}\n                                            game={gameName}\n                                            stats={game[tab].stats}\n                                            useLiveDuration={useLiveDuration}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} className={classes.padTop}>\n                                        <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                                            <Grid item xs={12} md={6}>\n                                                <RankingsTable data={game[tab].leaderboard} game={page} />\n                                            </Grid>\n                                            <Grid item xs={12} md={6} className={classes.padTop}>\n                                                <Grid container direction=\"column\" justify=\"center\">\n                                                    <Grid item xs={12}>\n                                                        <RecordsChart\n                                                            title=\"WRs\"\n                                                            labels={game[tab].leaderboard.map((row) => row.user.name)}\n                                                            series={game[tab].leaderboard.map((row) => row.wrs)}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} className={classes.padTop}>\n                                                        <RecordsChart\n                                                            title=\"Duration\"\n                                                            labels={game[tab].leaderboard.map((row) => row.user.name)}\n                                                            series={game[tab].leaderboard.map((row) => row.duration)}\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Box>\n                        </Typography>\n                    </>\n                )}\n            </Paper>\n            <Zoom in={game !== undefined && game.length !== 0} timeout={1000}>\n                <Fab title=\"Jump to top\" color=\"primary\" className={classes.fab} onClick={jumpToTop}>\n                    <KeyboardArrowUpIcon />\n                </Fab>\n            </Zoom>\n        </ViewContent>\n    );\n};\n\nexport default withRouter(GameView);\n","import React from 'react';\nimport ReactJson from 'react-json-view';\nimport Paper from '@material-ui/core/Paper';\nimport ViewContent from './ViewContent';\nimport { useIsMounted } from '../Hooks';\n\nconst NotFoundView = () => {\n    const isMounted = useIsMounted();\n\n    const [replay, setReplay] = React.useState({});\n\n    const handleChange = React.useCallback(\n        (ev) => {\n            var file = ev.target.files[0];\n            if (file) {\n                var reader = new FileReader();\n                reader.file = file;\n                reader.onload = function({ target: { result } }) {\n                    const { Buffer, Replay } = window;\n\n                    let replay = (window.replay = Replay.default().read(Buffer.from(result), { parseGhost: true }));\n                    if (!isMounted) return;\n\n                    const removeData = (obj) => {\n                        Object.keys(obj).forEach((key) => {\n                            if (key === '_view') {\n                                delete obj._view;\n                            } else if (typeof obj[key] === 'object') {\n                                removeData(obj[key]);\n                            }\n                        });\n                    };\n\n                    removeData(replay);\n                    setReplay(replay);\n                };\n                reader.readAsArrayBuffer(file);\n            }\n        },\n        [isMounted, setReplay],\n    );\n\n    React.useEffect(() => {\n        document.querySelector('#fileinput').addEventListener('change', handleChange);\n        return () => document.querySelector('#fileinput').removeEventListener('change', handleChange);\n    }, [handleChange]);\n\n    return (\n        <ViewContent>\n            <Paper>\n                <input type=\"file\" id=\"fileinput\" />\n                <ReactJson\n                    name=\"replay\"\n                    style={{ fontSize: '14px' }}\n                    src={replay}\n                    theme=\"solarized\"\n                    displayDataTypes={false}\n                    displayObjectSize={false}\n                    enableClipboard={false}\n                />\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default NotFoundView;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport SimpleTitle from '../components/SimpleTitle';\nimport ViewContent from './ViewContent';\n\nconst NotFoundView = () => {\n    return (\n        <ViewContent>\n            <Paper>\n                <SimpleTitle data=\"Page not found :(\" />\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default NotFoundView;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { red, orange } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport AppBar from './components/AppBar';\nimport AboutView from './views/AboutView';\nimport GameView from './views/GameView';\nimport ReplayView from './views/ReplayView';\nimport NotFoundView from './views/NotFoundView';\nimport AppState, { AppReducer } from './AppState';\n\nconst useStyles = makeStyles((theme) => ({\n    views: {\n        marginTop: theme.spacing(5),\n    },\n}));\n\nconst App = () => {\n    const [state, dispatch] = React.useReducer(...AppReducer);\n\n    const theme = React.useMemo(() => {\n        return createMuiTheme({\n            palette: {\n                primary: {\n                    light: red[300],\n                    main: red[500],\n                    dark: red[700],\n                },\n                secondary: {\n                    light: orange[300],\n                    main: orange[500],\n                    dark: orange[700],\n                },\n                error: {\n                    main: red.A400,\n                },\n                type: state.darkMode.enabled ? 'dark' : 'light',\n            },\n        });\n    }, [state.darkMode.enabled]);\n\n    const classes = useStyles();\n    const context = React.useMemo(() => ({ state, dispatch }), [state, dispatch]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <AppState.Provider value={context}>\n                <BrowserRouter basename={process.env.NODE_ENV === 'production' ? '/tmx-records' : '/'}>\n                    <AppBar />\n                    <div className={classes.views}>\n                        <Switch>\n                            <Redirect exact from=\"/\" to=\"/tm2\" />\n                            <Redirect exact from=\"/tmo\" to=\"/original\" />\n                            <Redirect exact from=\"/tmn\" to=\"/nations\" />\n                            <Redirect exact from=\"/tms\" to=\"/sunrise\" />\n                            <Redirect exact from=\"/tmnf\" to=\"/tmnforever\" />\n                            <Route exact path=\"/(nations|original|sunrise|tm2|tmnforever|united)/:date?\" component={GameView} />\n                            <Route exact path=\"/about\" component={AboutView} />\n                            <Route exact path=\"/replay\" component={ReplayView} />\n                            <Route component={NotFoundView} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </AppState.Provider>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './utils/serviceWorker';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}