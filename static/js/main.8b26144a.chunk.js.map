{"version":3,"sources":["Hooks.js","components/AppBar.js","views/ViewContent.js","AppState.js","views/AboutView.js","utils/stableSort.js","utils/tmx.js","components/RankingsTable.js","utils/tools.js","components/RecordsTable.js","components/SimpleTitle.js","components/RecordsChart.js","Api.js","views/GameView.js","views/ReplayView.js","views/NotFoundView.js","App.js","utils/serviceWorker.js","index.js"],"names":["useIsMounted","ref","React","useRef","useEffect","current","useStyles","makeStyles","theme","root","paddingBottom","spacing","list","width","menuButton","marginLeft","marginRight","drawer","flexShrink","appBar","zIndex","flex","active","color","palette","primary","main","pageLinks","title","link","inDrawer","default","withRouter","location","useState","open","setOpen","page","useMemo","find","x","pathname","startsWith","document","host","showDrawer","state","classes","className","List","ListItem","button","key","component","RouterLink","to","ListItemText","Divider","filter","map","item","index","undefined","position","Toolbar","Hidden","lgUp","IconButton","onClick","Typography","variant","Link","underline","implementation","SwipeableDrawer","onClose","onOpen","tabIndex","role","onKeyDown","mdDown","Drawer","ViewContent","children","Grid","container","xs","md","lg","inititalState","darkMode","this","enabled","localStorage","getItem","setItem","toString","AppReducer","action","toggle","Error","createContext","aboutBox","padding","branches","noWrap","whiteSpace","MinTableCell","props","TableCell","size","Padding","style","paddingTop","AboutView","isMounted","useContext","AppState","dispatch","gitHub","setGitHub","anyErrors","err","console","error","Promise","all","branch","fetch","then","results","res","json","log","sha","author","message","commit","date","catch","Paper","length","CircularProgress","progress","overflowX","Table","TableHead","TableRow","TableBody","idx","align","rel","href","Tooltip","moment","from","html_url","login","FormGroup","row","FormControlLabel","control","Switch","checked","onChange","label","getPropFast","obj","path","indexOf","split","s","reduce","acc","val","protocol","game","includes","trackUrl","id","imageUrl","replayUrl","userUrl","rows","sortable","id2","RankingsTableHead","order","orderBy","onRequestSort","sortDirection","placement","enterDelay","TableSortLabel","direction","prop1","prop2","event","_","defaultState","thenBy","rowsPerPage","minifiedStyle","RecordsTable","data","setState","newOrderBy","newThenBy","array","desc","a","b","aa","bb","cmp","el","sort","stableSortSort","slice","user","tmx","target","name","wrs","duration","formatScore","score","csec","tsec","Math","floor","sec","min","msec","hourScale","scaleLinear","domain","range","getDateDifferenceColor","passedHours","diff","RecordsTableHead","property","stats","useLiveDuration","stableSort","wr","track","isFirst","rowSpan","records","type","fromNow","format","unit","totalTime","humanize","colSpan","totalPoints","gutterBottom","withTheme","labels","series","isDarkTheme","options","legend","show","responsive","breakpoint","chart","height","plotOptions","pie","donut","value","total","url","status","ok","fab","margin","top","right","bottom","left","padTop","match","setGame","gameName","setGameName","tab","setTab","params","Api","request","tracks","campaign","t","push","leaderboard","forEach","entry","r","LinearProgress","SimpleTitle","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","Box","p","justify","alignContent","RankingsTable","Zoom","in","timeout","Fab","smoothScroll","y","documentElement","scrollTop","window","requestAnimationFrame","scrollTo","NotFoundView","replay","setReplay","handleChange","useCallback","ev","file","files","reader","FileReader","onload","result","Buffer","Replay","read","parseGhost","removeData","Object","keys","_view","readAsArrayBuffer","querySelector","addEventListener","removeEventListener","fontSize","src","displayDataTypes","displayObjectSize","enableClipboard","views","marginTop","App","useReducer","createMuiTheme","light","red","dark","secondary","orange","A400","context","ThemeProvider","CssBaseline","Provider","basename","exact","GameView","ReplayView","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b26144a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const useIsMounted = () => {\r\n    const ref = React.useRef(false);\r\n    React.useEffect(() => {\r\n        ref.current = true;\r\n        return () => (ref.current = false);\r\n    }, []);\r\n    return ref;\r\n};\r\n\r\nexport const useRenders = (debug) => {\r\n    const ref = React.useRef(0);\r\n    console.log(debug + ' renders: ', ++ref.current);\r\n};\r\n\r\nexport const useTitle = (title) => {\r\n    React.useEffect(() => {\r\n        document.title = title + ' - ' + document.location.host;\r\n    }, [title]);\r\n};\r\n","import React from 'react';\r\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\r\nimport MaterialAppBar from '@material-ui/core/AppBar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Link from '@material-ui/core/Link';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { useTitle } from '../Hooks';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n    list: {\r\n        width: theme.spacing(25),\r\n    },\r\n    menuButton: {\r\n        marginLeft: -12,\r\n        marginRight: 20,\r\n    },\r\n    drawer: {\r\n        width: 240,\r\n        flexShrink: 0,\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    flex: {\r\n        flex: 1,\r\n    },\r\n    active: {\r\n        color: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\nconst pageLinks = [\r\n    { title: '404 - Page Not Found', link: null, inDrawer: false },\r\n    { title: 'tmx-records', link: '/', inDrawer: false },\r\n    { title: 'TrackMania 2', link: '/tm2', inDrawer: true, default: true },\r\n    { title: 'Nations Forever', link: '/tmnforever', inDrawer: true },\r\n    { title: 'United', link: '/united', inDrawer: true },\r\n    { title: 'Nations ESWC', link: '/nations', inDrawer: true },\r\n    { title: 'Sunrise', link: '/sunrise', inDrawer: true },\r\n    { title: 'Original', link: '/original', inDrawer: true },\r\n    { title: 'Replay Inspection', link: '/replay', inDrawer: false },\r\n    { title: 'About', link: '/about', inDrawer: false },\r\n];\r\n\r\nconst AppBar = ({ location }) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const page = React.useMemo(\r\n        () =>\r\n            pageLinks.find((x) => x.link === location.pathname || (x.link !== null && location.pathname.startsWith(x.link + '/'))) ||\r\n            pageLinks[0],\r\n        [location],\r\n    );\r\n\r\n    useTitle(page.title);\r\n\r\n    const showDrawer = (state) => () => {\r\n        setOpen(state);\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    const list = (\r\n        <div className={classes.list}>\r\n            <List>\r\n                <ListItem button key={0} component={RouterLink} to={'/'}>\r\n                    <ListItemText primary=\"TMX Records\" />\r\n                </ListItem>\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                {pageLinks\r\n                    .filter((x) => x.inDrawer)\r\n                    .map((item, index) => (\r\n                        <ListItem\r\n                            button\r\n                            key={index}\r\n                            component={RouterLink}\r\n                            to={item.link}\r\n                            className={item.title === page.title ? classes.active : undefined}\r\n                        >\r\n                            <ListItemText primary={item.title} />\r\n                        </ListItem>\r\n                    ))}\r\n                <Divider />\r\n                <List>\r\n                    <ListItem button key={0} component={RouterLink} to={'/about'}>\r\n                        <ListItemText primary={'About'} />\r\n                    </ListItem>\r\n                </List>\r\n            </List>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <MaterialAppBar className={classes.appBar} position=\"fixed\">\r\n                <Toolbar>\r\n                    <Hidden lgUp>\r\n                        <IconButton className={classes.menuButton} onClick={showDrawer(true)} color=\"inherit\">\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                    </Hidden>\r\n                    <Typography variant=\"h6\" color=\"inherit\">\r\n                        <Link component={RouterLink} to=\"/\" color=\"inherit\" underline=\"none\">\r\n                            TMX Records\r\n                        </Link>\r\n                    </Typography>\r\n                </Toolbar>\r\n            </MaterialAppBar>\r\n            <Hidden lgUp implementation=\"css\">\r\n                <SwipeableDrawer open={open} onClose={showDrawer(false)} onOpen={showDrawer(true)} variant=\"temporary\">\r\n                    <div tabIndex={0} role=\"button\" onClick={showDrawer(false)} onKeyDown={showDrawer(false)}>\r\n                        {list}\r\n                    </div>\r\n                </SwipeableDrawer>\r\n            </Hidden>\r\n            <Hidden mdDown implementation=\"css\">\r\n                <Drawer variant=\"permanent\">\r\n                    <div tabIndex={0} role=\"button\">\r\n                        {list}\r\n                    </div>\r\n                </Drawer>\r\n            </Hidden>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withRouter(AppBar);\r\n","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst ViewContent = ({ children }) => (\r\n    <Grid container>\r\n        <Grid item xs={false} md={1} lg={2} />\r\n        <Grid item xs={12} md={10} lg={9}>\r\n            {children}\r\n        </Grid>\r\n    </Grid>\r\n);\r\n\r\nexport default ViewContent;\r\n","\r\nimport React from 'react';\r\n\r\nclass DarkMode {\r\n    constructor() {\r\n        this.enabled = localStorage.getItem('dark_mode') === 'true';\r\n    }\r\n    toggle() {\r\n        this.enabled = !this.enabled;\r\n        localStorage.setItem('dark_mode', this.enabled.toString());\r\n        return this;\r\n    }\r\n}\r\n\r\nconst inititalState = {\r\n    darkMode: new DarkMode(),\r\n};\r\n\r\nexport const AppReducer = [\r\n    (state, { action }) => {\r\n        switch (action) {\r\n            case 'toggleDarkMode':\r\n                return {\r\n                    ...state,\r\n                    darkMode: state.darkMode.toggle(),\r\n                };\r\n            default:\r\n                throw new Error('Unknown action type.');\r\n        }\r\n    },\r\n    inititalState,\r\n];\r\n\r\nexport default React.createContext(inititalState);\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ViewContent from './ViewContent';\r\nimport AppState from '../AppState';\r\nimport { useIsMounted } from '../Hooks';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    aboutBox: {\r\n        padding: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst branches = ['master', 'api', 'gh-pages'];\r\n\r\nconst noWrap = { whiteSpace: 'nowrap' };\r\nconst MinTableCell = (props) => <TableCell size=\"small\" {...props} />;\r\nconst Padding = () => <div style={{ paddingTop: '50px' }} />;\r\n\r\nconst AboutView = () => {\r\n    const isMounted = useIsMounted();\r\n\r\n    const {\r\n        state: { darkMode },\r\n        dispatch,\r\n    } = React.useContext(AppState);\r\n\r\n    const [gitHub, setGitHub] = React.useState([]);\r\n\r\n    const toggleDarkMode = () => {\r\n        dispatch({ action: 'toggleDarkMode' });\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        const anyErrors = (err) => {\r\n            console.error(err);\r\n            if (isMounted.current) {\r\n                setGitHub(undefined);\r\n            }\r\n        };\r\n\r\n        Promise.all(branches.map((branch) => fetch('https://api.github.com/repos/NeKzor/tmx-records/commits/' + branch)))\r\n            .then((results) => {\r\n                Promise.all(results.map((res) => res.json()))\r\n                    .then((branches) => {\r\n                        console.log('fetched');\r\n                        if (isMounted.current) {\r\n                            setGitHub(\r\n                                branches.map((branch) => ({\r\n                                    sha: branch.sha,\r\n                                    author: branch.author,\r\n                                    message: branch.commit.message,\r\n                                    date: branch.commit.author.date,\r\n                                })),\r\n                            );\r\n                        }\r\n                    })\r\n                    .catch(anyErrors);\r\n            })\r\n            .catch(anyErrors);\r\n    }, [isMounted]);\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <ViewContent>\r\n            <Paper className={classes.aboutBox}>\r\n                <Typography component=\"h2\" variant=\"h5\">\r\n                    TrackMania Exchange Records & Statistics\r\n                </Typography>\r\n                <br />\r\n                <Typography variant=\"body1\">This web app mirrors TrackMania Exchange Nadeo records.</Typography>\r\n                <Typography variant=\"body1\">\r\n                    Additionally it ranks players based on how many world records they hold and how long their records have been lasting.\r\n                </Typography>\r\n\r\n                <Padding />\r\n\r\n                <Typography variant=\"h5\">Last Update</Typography>\r\n                <br />\r\n                {gitHub === undefined ? (\r\n                    <Typography variant=\"body1\">Unable to fetch status from GitHub.</Typography>\r\n                ) : gitHub.length === 0 ? (\r\n                    <CircularProgress className={classes.progress} />\r\n                ) : (\r\n                    <div style={{ overflowX: 'auto' }}>\r\n                        <Table size=\"small\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell padding=\"default\">\r\n                                        <Typography variant=\"body1\">Branch</Typography>\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"default\">\r\n                                        <Typography variant=\"body1\">Date</Typography>\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"default\">\r\n                                        <Typography variant=\"body1\">Author</Typography>\r\n                                    </TableCell>\r\n                                    <TableCell padding=\"default\">\r\n                                        <Typography variant=\"body1\">Commit</Typography>\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {gitHub.map((commit, idx) => {\r\n                                    const branch = branches[idx];\r\n                                    return (\r\n                                        <TableRow tabIndex={-1} key={idx} style={noWrap}>\r\n                                            <MinTableCell align=\"left\">\r\n                                                <Link\r\n                                                    color=\"inherit\"\r\n                                                    rel=\"noopener\"\r\n                                                    href={'https://github.com/NeKzor/tmx-records/tree/' + branch}\r\n                                                >\r\n                                                    {branch}\r\n                                                </Link>\r\n                                            </MinTableCell>\r\n                                            <MinTableCell align=\"left\" style={noWrap}>\r\n                                                <Tooltip title={moment(commit.date).toString()}>\r\n                                                    <span>{moment(commit.date).from()}</span>\r\n                                                </Tooltip>\r\n                                            </MinTableCell>\r\n                                            <MinTableCell align=\"left\">\r\n                                                {commit.author ? (\r\n                                                    <Link color=\"inherit\" rel=\"noopener\" href={commit.author.html_url}>\r\n                                                        {commit.author.login}\r\n                                                    </Link>\r\n                                                ) : (\r\n                                                    'n/a'\r\n                                                )}\r\n                                            </MinTableCell>\r\n                                            <MinTableCell align=\"left\" style={noWrap}>\r\n                                                <Tooltip title={commit.message}>\r\n                                                    <Link\r\n                                                        color=\"inherit\"\r\n                                                        rel=\"noopener\"\r\n                                                        href={'https://github.com/NeKzor/tmx-records/commit/' + commit.sha}\r\n                                                    >\r\n                                                        {commit.sha}\r\n                                                    </Link>\r\n                                                </Tooltip>\r\n                                            </MinTableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </div>\r\n                )}\r\n\r\n                <Padding />\r\n\r\n                <Typography variant=\"h5\">Theme Settings</Typography>\r\n                <br />\r\n                <FormGroup row>\r\n                    <FormControlLabel\r\n                        control={<Switch checked={darkMode.enabled} onChange={toggleDarkMode} color=\"primary\" />}\r\n                        label=\"Dark Mode\"\r\n                    />\r\n                </FormGroup>\r\n\r\n                <Padding />\r\n\r\n                <Typography variant=\"h5\">Credits</Typography>\r\n                <br />\r\n                <Link rel=\"noopener\" href=\"http://www.tm-exchange.com\">\r\n                    tm-exchange.com\r\n                </Link>\r\n                <br />\r\n                <Link rel=\"noopener\" href=\"https://tm.mania-exchange.com\">\r\n                    tm.mania-exchange.com\r\n                </Link>\r\n            </Paper>\r\n        </ViewContent>\r\n    );\r\n};\r\n\r\nexport default AboutView;\r\n","export const stableSort = (array, order, orderBy) => {\r\n    let desc = (a, b) => {\r\n        let aa = getPropFast(a, orderBy);\r\n        let bb = getPropFast(b, orderBy);\r\n        if (bb < aa) return -1;\r\n        if (bb > aa) return 1;\r\n        return 0;\r\n    };\r\n\r\n    let cmp = order === 'desc' ? (a, b) => desc(a, b) : (a, b) => -desc(a, b);\r\n\r\n    let sort = (a, b) => {\r\n        let order = cmp(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    };\r\n\r\n    return array\r\n        .map((el, index) => [el, index])\r\n        .sort(sort)\r\n        .map((el) => el[0]);\r\n};\r\nexport const stableSortSort = (array, order, orderBy, thenBy) => {\r\n    let desc = (a, b) => {\r\n        let aa = getPropFast(a, orderBy);\r\n        let bb = getPropFast(b, orderBy);\r\n        if (bb < aa) return -1;\r\n        if (bb > aa) return 1;\r\n        aa = getPropFast(a, thenBy);\r\n        bb = getPropFast(b, thenBy);\r\n        if (bb < aa) return -1;\r\n        if (bb > aa) return 1;\r\n        return 0;\r\n    };\r\n\r\n    let cmp = order === 'desc' ? (a, b) => desc(a, b) : (a, b) => -desc(a, b);\r\n\r\n    let sort = (a, b) => {\r\n        let order = cmp(a[0], b[0]);\r\n        if (order !== 0) return order;\r\n        return a[1] - b[1];\r\n    };\r\n\r\n    return array\r\n        .map((el, index) => [el, index])\r\n        .sort(sort)\r\n        .map((el) => el[0]);\r\n};\r\n\r\n// Util which returns the value of nested objects by string: getPropFast({ a: { b: 3 } }, 'a.b') === 3\r\nconst getPropFast = (obj, path) =>\r\n    path.indexOf('.') !== -1\r\n        ? path\r\n              .split('.')\r\n              .filter((s) => s)\r\n              .reduce((acc, val) => acc && acc[val], obj)\r\n        : obj[path];\r\n","const protocol = (game) => ['nations', 'sunrise', 'original'].includes(game) ? 'http' : 'https'; \r\n\r\nexport default (game) =>\r\n    game === 'tm2'\r\n        ? {\r\n              trackUrl: (id) => `https://tm.mania-exchange.com/tracks/${id}`,\r\n              imageUrl: (id) => `https://tm.mania-exchange.com/tracks/screenshot/normal/${id}`,\r\n              replayUrl: (id) => `https://tm.mania-exchange.com/replays/download/${id}`,\r\n              userUrl: (id) => `https://tm.mania-exchange.com/user/profile/${id}`,\r\n          }\r\n        : (() => ({\r\n              trackUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/main.aspx?action=trackshow&id=${id}`,\r\n              imageUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/getclean.aspx?action=trackscreenscreens&id=${id}`,\r\n              replayUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/get.aspx?action=recordgbx&id=${id}`,\r\n              userUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/main.aspx?action=usershow&id=${id}`,\r\n          }))();\r\n","import React from 'react';\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { stableSortSort } from '../utils/stableSort';\r\nimport tmx from '../utils/tmx';\r\n\r\nconst rows = [\r\n    { id: 'user.name', sortable: false, label: 'Player', align: 'left' },\r\n    { id: 'wrs', id2: 'duration', sortable: true, label: 'World Records', align: 'left' },\r\n    { id: 'duration', id2: 'wrs', sortable: true, label: 'Total Duration', align: 'left' },\r\n];\r\n\r\nconst RankingsTableHead = ({ order, orderBy, onRequestSort }) => {\r\n    const createSortHandler = (prop1, prop2) => (event) => {\r\n        onRequestSort(event, prop1, prop2);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {rows.map((row) => (\r\n                    <TableCell key={row.id} align={row.align} padding=\"default\" sortDirection={orderBy === row.id ? order : false}>\r\n                        {row.sortable === true && (\r\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\r\n                                <TableSortLabel active={orderBy === row.id} direction={order} onClick={createSortHandler(row.id, row.id2)}>\r\n                                    {row.label}\r\n                                </TableSortLabel>\r\n                            </Tooltip>\r\n                        )}\r\n                        {row.sortable === false && row.label}\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((_) => ({\r\n    root: {\r\n        overflowX: 'auto',\r\n    },\r\n}));\r\n\r\nconst defaultState = {\r\n    order: 'desc',\r\n    orderBy: 'wrs',\r\n    thenBy: 'duration',\r\n    page: 0,\r\n    rowsPerPage: 50,\r\n};\r\n\r\nconst noWrap = { whiteSpace: 'nowrap' };\r\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\r\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\r\n\r\nconst RecordsTable = ({ data, game }) => {\r\n    const [{ order, orderBy, thenBy, rowsPerPage, page }, setState] = React.useState(defaultState);\r\n\r\n    const handleRequestSort = (_, prop1, prop2) => {\r\n        const newOrderBy = prop1;\r\n        const newThenBy = prop2;\r\n        setState((s) => ({\r\n            ...s,\r\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\r\n            orderBy: newOrderBy,\r\n            thenBy: newThenBy,\r\n        }));\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Table size=\"small\">\r\n                <RankingsTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\r\n                <TableBody>\r\n                    {stableSortSort(data, order, orderBy, thenBy)\r\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                        .map((row) => (\r\n                            <TableRow tabIndex={-1} key={row.user.id}>\r\n                                <MinTableCell align=\"left\">\r\n                                    <Link style={noWrap} color=\"inherit\" href={tmx(game).userUrl(row.user.id)} rel=\"noreferrer\" target=\"_blank\">\r\n                                        {row.user.name}\r\n                                    </Link>\r\n                                </MinTableCell>\r\n                                <MinTableCell align=\"left\">{row.wrs}</MinTableCell>\r\n                                <MinTableCell align=\"left\">{row.duration} day{row.duration === 1 ? '' : 's'}</MinTableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                </TableBody>\r\n            </Table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecordsTable;\r\n","import { scaleLinear } from 'd3-scale';\r\nimport moment from 'moment';\r\n\r\nexport function formatScore(score, game, type = undefined) {\r\n    if (type === 'Stunts') {\r\n        return score + ' pts.';\r\n    }\r\n    if (game !== 'tm2') {\r\n        score /= 10;\r\n        let csec = score % 100;\r\n        let tsec = Math.floor(score / 100);\r\n        let sec = tsec % 60;\r\n        let min = Math.floor(tsec / 60);\r\n        return (min > 0 ? min + ':' : '') + (sec < 10 && min > 0 ? '0' + sec : sec) + '.' + (csec < 10 ? '0' + csec : csec);\r\n    }\r\n    let msec = score % 1000;\r\n    let tsec = Math.floor(score / 1000);\r\n    let sec = tsec % 60;\r\n    let min = Math.floor(tsec / 60);\r\n    return (\r\n        (min > 0 ? min + ':' : '') +\r\n        (sec < 10 && min > 0 ? '0' + sec : sec) +\r\n        '.' +\r\n        (msec < 100 ? (msec < 10 ? '00' + msec : '0' + msec) : msec)\r\n    );\r\n}\r\n\r\n// credits: https://github.com/iVerb1/Portal2Boards/blob/master/public/js/date.js#L21\r\nconst hourScale = scaleLinear()\r\n    .domain([0, 24, 14 * 24, 2 * 30 * 24])\r\n    .range(['#2eb82e', '#258e25', '#cca300', '#e67300']);\r\n\r\nexport function getDateDifferenceColor(date) {\r\n    let passedHours = moment().diff(moment(date), 'hours');\r\n    return passedHours <= 2 * 30 * 24 ? hourScale(passedHours) : undefined;\r\n}\r\n","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport moment from 'moment';\r\n/* import IconButton from '@material-ui/core/IconButton'; */\r\nimport Link from '@material-ui/core/Link';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n/* import SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport WarningIcon from '@material-ui/icons/Warning'; */\r\nimport { stableSort } from '../utils/stableSort';\r\nimport tmx from '../utils/tmx';\r\nimport { formatScore, getDateDifferenceColor } from '../utils/tools';\r\n\r\nconst rows = [\r\n    { id: 'track.name', sortable: true, label: 'Track', align: 'left' },\r\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\r\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\r\n    { id: 'date', sortable: true, label: 'Date', align: 'left' },\r\n    { id: 'duration', sortable: true, label: 'Duration', align: 'left' },\r\n    /* { id: 'replay', sortable: false, label: 'Replay/Video', align: 'left' }, */\r\n];\r\n\r\nconst RecordsTableHead = ({ order, orderBy, onRequestSort }) => {\r\n    const createSortHandler = (property) => (event) => {\r\n        onRequestSort(event, property);\r\n    };\r\n\r\n    return (\r\n        <TableHead>\r\n            <TableRow>\r\n                {rows.map((row) => (\r\n                    <TableCell key={row.id} align={row.align} padding=\"default\" sortDirection={orderBy === row.id ? order : false}>\r\n                        {row.sortable === true && (\r\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\r\n                                <TableSortLabel active={orderBy === row.id} direction={order} onClick={createSortHandler(row.id)}>\r\n                                    {row.label}\r\n                                </TableSortLabel>\r\n                            </Tooltip>\r\n                        )}\r\n                        {row.sortable === false && row.label}\r\n                    </TableCell>\r\n                ))}\r\n            </TableRow>\r\n        </TableHead>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((_) => ({\r\n    root: {\r\n        overflowX: 'auto',\r\n    },\r\n}));\r\n\r\nconst defaultState = {\r\n    order: 'asc',\r\n    orderBy: 'track.name',\r\n    page: 0,\r\n    rowsPerPage: 250,\r\n};\r\n\r\nconst noWrap = { whiteSpace: 'nowrap' };\r\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\r\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\r\n\r\nconst RecordsTable = ({ data, game, stats, useLiveDuration }) => {\r\n    const [{ order, orderBy, rowsPerPage, page }, setState] = React.useState(defaultState);\r\n\r\n    const handleRequestSort = (_, property) => {\r\n        const newOrderBy = property;\r\n        setState((s) => ({\r\n            ...s,\r\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\r\n            orderBy: newOrderBy,\r\n        }));\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Table size=\"small\">\r\n                <RecordsTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\r\n                <TableBody>\r\n                    {stableSort(data, order, orderBy)\r\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                        .map((wr) => (\r\n                            <TableRow tabIndex={-1} key={`${wr.track.id}-${wr.user.id}`}>\r\n                                {(wr.track.isFirst || orderBy !== 'track.name') && (\r\n                                    <MinTableCell style={noWrap} rowSpan={orderBy !== 'track.name' ? 1 : wr.track.records} align=\"left\">\r\n                                        <Link color=\"inherit\" href={tmx(game).trackUrl(wr.track.id)} rel=\"noreferrer\" target=\"_blank\">\r\n                                            {wr.track.name}\r\n                                        </Link>\r\n                                    </MinTableCell>\r\n                                )}\r\n                                <MinTableCell align=\"left\">{formatScore(wr.score, game, wr.track.type)}</MinTableCell>\r\n                                <MinTableCell align=\"left\">\r\n                                    <Link\r\n                                        style={noWrap}\r\n                                        color=\"inherit\"\r\n                                        href={tmx(game).userUrl(wr.user.id)}\r\n                                        rel=\"noreferrer\"\r\n                                        target=\"_blank\"\r\n                                    >\r\n                                        {wr.user.name}\r\n                                    </Link>\r\n                                </MinTableCell>\r\n                                <MinTableCell align=\"left\">\r\n                                    <Tooltip title={<Moment fromNow>{wr.date}</Moment>} placement=\"bottom-end\" enterDelay={300}>\r\n                                        <Moment style={{ color: getDateDifferenceColor(wr.date), ...noWrap }} format=\"YYYY-MM-DD\">\r\n                                            {wr.date}\r\n                                        </Moment>\r\n                                    </Tooltip>\r\n                                </MinTableCell>\r\n                                <MinTableCell align=\"left\">\r\n                                    <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\r\n                                        {useLiveDuration ? (\r\n                                            <Moment style={noWrap} diff={wr.date} unit=\"days\"></Moment>\r\n                                        ) : (\r\n                                            <span>{wr.duration}</span>\r\n                                        )}\r\n                                    </Tooltip>\r\n                                </MinTableCell>\r\n                                {/* <MinTableCell align=\"left\">\r\n                                    <Tooltip title=\"Download Replay\" placement=\"bottom-end\" enterDelay={300}>\r\n                                        <IconButton size=\"small\" href={tmx(game).replayUrl(wr.replay)} target=\"_blank\">\r\n                                            <SaveAltIcon fontSize=\"inherit\" />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                    <Tooltip title=\"Search Record on YouTube\" placement=\"bottom-end\" enterDelay={300}>\r\n                                        <IconButton\r\n                                            size=\"small\"\r\n                                            href={`https://www.youtube.com/results?search_query=${[\r\n                                                game,\r\n                                                wr.track.name,\r\n                                                'in',\r\n                                                formatScore(wr.score, game, wr.track.type),\r\n                                                'by',\r\n                                                wr.user.name,\r\n                                            ].join('+')}`}\r\n                                            target=\"_blank\"\r\n                                        >\r\n                                            <PlayArrowIcon fontSize=\"inherit\" />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                    {game === 'tm2' && moment(wr.date).isBefore('2017-05-09') && (\r\n                                        <Tooltip\r\n                                            title=\"This run was done on an older game version.\"\r\n                                            placement=\"bottom-end\"\r\n                                            enterDelay={300}\r\n                                        >\r\n                                            <span>\r\n                                                <IconButton size=\"small\" disabled>\r\n                                                    <WarningIcon fontSize=\"inherit\" />\r\n                                                </IconButton>\r\n                                            </span>\r\n                                        </Tooltip>\r\n                                    )}\r\n                                </MinTableCell> */}\r\n                            </TableRow>\r\n                        ))}\r\n                </TableBody>\r\n                <TableBody>\r\n                    {stats.totalTime > 0 && (\r\n                        <TableRow>\r\n                            <MinTableCell align=\"right\">Total Time</MinTableCell>\r\n                            <MinTableCell>\r\n                                <Tooltip title={moment.duration(stats.totalTime, 'ms').humanize()} placement=\"bottom-end\" enterDelay={300}>\r\n                                    <span>{formatScore(stats.totalTime, game)}</span>\r\n                                </Tooltip>\r\n                            </MinTableCell>\r\n                            <MinTableCell colSpan={3}></MinTableCell>\r\n                        </TableRow>\r\n                    )}\r\n                    {stats.totalPoints > 0 && (\r\n                        <TableRow>\r\n                            <MinTableCell align=\"right\">Total Points</MinTableCell>\r\n                            <MinTableCell>\r\n                                <span>{formatScore(stats.totalPoints, game, 'Stunts')}</span>\r\n                            </MinTableCell>\r\n                            <MinTableCell colSpan={3}></MinTableCell>\r\n                        </TableRow>\r\n                    )}\r\n                </TableBody>\r\n            </Table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RecordsTable;\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default ({ data, props }) => (\r\n    <Typography variant=\"h5\" gutterBottom style={{ padding: '50px 0px 50px 50px' }} {...props}>\r\n        {data}\r\n    </Typography>\r\n);\r\n","import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { withTheme } from '@material-ui/styles';\r\n\r\nconst RecordsChart = ({ labels, series, title, theme }) => {\r\n    const isDarkTheme = theme.palette.type === 'dark';\r\n\r\n    return (\r\n        <Chart\r\n            options={{\r\n                labels,\r\n                legend: {\r\n                    show: false,\r\n                },\r\n                responsive: [\r\n                    {\r\n                        breakpoint: 380,\r\n                        options: {\r\n                            chart: {\r\n                                height: '300px'\r\n                            },\r\n                        },\r\n                    },\r\n                ],\r\n                plotOptions: {\r\n                    pie: {\r\n                        donut: {\r\n                            labels: {\r\n                                show: true,\r\n                                name: {\r\n                                    show: true,\r\n                                },\r\n                                value: {\r\n                                    show: true,\r\n                                    color: isDarkTheme ? 'white' : 'black',\r\n                                },\r\n                                total: {\r\n                                    show: true,\r\n                                    label: title,\r\n                                    color: isDarkTheme ? 'white' : 'black',\r\n                                },\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            }}\r\n            series={series}\r\n            type=\"donut\"\r\n            height=\"400\"\r\n        />\r\n    );\r\n};\r\n\r\nexport default withTheme(RecordsChart);\r\n","class Api {\r\n    async request(game, date) {\r\n        let res = await fetch(`https://raw.githubusercontent.com/NeKzor/tmx-records/api/${game}/${date || 'latest'}.json`);\r\n        console.log(`GET ${res.url} (${res.status})`);\r\n        return res.ok ? await res.json() : [];\r\n    }\r\n}\r\n\r\nexport default new Api();\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport moment from 'moment';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport RankingsTable from '../components/RankingsTable';\r\nimport RecordsTable from '../components/RecordsTable';\r\nimport SimpleTitle from '../components/SimpleTitle';\r\nimport RecordsChart from '../components/RecordsChart';\r\nimport Api from '../Api';\r\nimport { useIsMounted } from '../Hooks';\r\nimport ViewContent from './ViewContent';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((_) => ({\r\n    fab: {\r\n        margin: 0,\r\n        top: 'auto',\r\n        right: 30,\r\n        bottom: 30,\r\n        left: 'auto',\r\n        position: 'fixed',\r\n    },\r\n    padTop: {\r\n        paddingTop: '70px',\r\n    },\r\n}));\r\n\r\nconst GameView = ({ match }) => {\r\n    const isMounted = useIsMounted();\r\n\r\n    const [game, setGame] = React.useState(undefined);\r\n    const [gameName, setGameName] = React.useState('tm2');\r\n    const [tab, setTab] = React.useState(0);\r\n\r\n    const page = match.params[0];\r\n    const date = match.params.date;\r\n    const useLiveDuration = date === undefined || date === 'latest';\r\n\r\n    React.useEffect(() => {\r\n        setTab(0);\r\n        setGame(undefined);\r\n    }, [page]);\r\n\r\n    React.useEffect(() => {\r\n        (async () => {\r\n            let game = await Api.request(page, date);\r\n\r\n            if (game[0] && game[0].tracks[0].wrs) {\r\n                for (let campaign of game) {\r\n                    if (campaign.stats.totalPoints === undefined) {\r\n                        campaign.stats.totalTime = campaign.tracks\r\n                            .filter((t) => t.type !== 'Stunts')\r\n                            .map((t) => t.wrs[0].score)\r\n                            .reduce((a, b) => a + b, 0);\r\n                        campaign.stats.totalPoints = campaign.tracks\r\n                            .filter((t) => t.type === 'Stunts')\r\n                            .map((t) => t.wrs[0].score)\r\n                            .reduce((a, b) => a + b, 0);\r\n                    }\r\n\r\n                    let rows = [];\r\n                    for (let track of campaign.tracks) {\r\n                        for (let wr of track.wrs) {\r\n                            let duration = useLiveDuration ? moment().diff(moment(wr.date), 'd') : wr.duration;\r\n                            rows.push({\r\n                                track: {\r\n                                    id: track.id,\r\n                                    name: track.name,\r\n                                    type: track.type,\r\n                                    isFirst: wr === track.wrs[0],\r\n                                    records: track.wrs.length,\r\n                                },\r\n                                ...wr,\r\n                                duration,\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    campaign.tracks = rows;\r\n\r\n                    if (useLiveDuration) {\r\n                        campaign.leaderboard.forEach((entry, idx) => {\r\n                            campaign.leaderboard[idx].duration = campaign.tracks\r\n                                .filter((r) => r.user.id === entry.user.id)\r\n                                .map((r) => r.duration)\r\n                                .reduce((a, b) => a + b, 0);\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!isMounted.current) return;\r\n            setGameName(page);\r\n            setGame(game);\r\n        })();\r\n    }, [isMounted, page, date, useLiveDuration]);\r\n\r\n    const handleTab = (_, newValue) => {\r\n        setTab(newValue);\r\n    };\r\n\r\n    const jumpToTop = () => {\r\n        const smoothScroll = () => {\r\n            const y = document.documentElement.scrollTop;\r\n            if (y > 0) {\r\n                window.requestAnimationFrame(smoothScroll);\r\n                window.scrollTo(0, y - y / 5);\r\n            }\r\n        };\r\n        smoothScroll();\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <ViewContent>\r\n            <Paper>\r\n                {game === undefined ? (\r\n                    <LinearProgress />\r\n                ) : game.length === 0 ? (\r\n                    <SimpleTitle data=\"No data.\" />\r\n                ) : (\r\n                    <>\r\n                        {game.length > 1 && (\r\n                            <Tabs\r\n                                value={tab}\r\n                                onChange={handleTab}\r\n                                indicatorColor=\"primary\"\r\n                                textColor=\"primary\"\r\n                                variant=\"scrollable\"\r\n                                scrollButtons=\"auto\"\r\n                            >\r\n                                {game.map((campaign) => (\r\n                                    <Tab label={campaign.name} key={campaign.name} />\r\n                                ))}\r\n                            </Tabs>\r\n                        )}\r\n                        <Typography component=\"div\" role=\"tabpanel\">\r\n                            <Box p={3}>\r\n                                <Grid container direction=\"column\" justify=\"center\">\r\n                                    <Grid item xs={12}>\r\n                                        <RecordsTable\r\n                                            data={game[tab].tracks}\r\n                                            game={gameName}\r\n                                            stats={game[tab].stats}\r\n                                            useLiveDuration={useLiveDuration}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} className={classes.padTop}>\r\n                                        <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\r\n                                            <Grid item xs={12} md={6}>\r\n                                                <RankingsTable data={game[tab].leaderboard} game={page} />\r\n                                            </Grid>\r\n                                            <Grid item xs={12} md={6} className={classes.padTop}>\r\n                                                <Grid container direction=\"column\" justify=\"center\">\r\n                                                    <Grid item xs={12}>\r\n                                                        <RecordsChart\r\n                                                            title=\"WRs\"\r\n                                                            labels={game[tab].leaderboard.map((row) => row.user.name)}\r\n                                                            series={game[tab].leaderboard.map((row) => row.wrs)}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                    <Grid item xs={12} className={classes.padTop}>\r\n                                                        <RecordsChart\r\n                                                            title=\"Duration\"\r\n                                                            labels={game[tab].leaderboard.map((row) => row.user.name)}\r\n                                                            series={game[tab].leaderboard.map((row) => row.duration)}\r\n                                                        />\r\n                                                    </Grid>\r\n                                                </Grid>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Box>\r\n                        </Typography>\r\n                    </>\r\n                )}\r\n            </Paper>\r\n            <Zoom in={game !== undefined && game.length !== 0} timeout={1000}>\r\n                <Fab title=\"Jump to top\" color=\"primary\" className={classes.fab} onClick={jumpToTop}>\r\n                    <KeyboardArrowUpIcon />\r\n                </Fab>\r\n            </Zoom>\r\n        </ViewContent>\r\n    );\r\n};\r\n\r\nexport default withRouter(GameView);\r\n","import React from 'react';\r\nimport ReactJson from 'react-json-view';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ViewContent from './ViewContent';\r\nimport { useIsMounted } from '../Hooks';\r\n\r\nconst NotFoundView = () => {\r\n    const isMounted = useIsMounted();\r\n\r\n    const [replay, setReplay] = React.useState({});\r\n\r\n    const handleChange = React.useCallback((ev) => {\r\n        var file = ev.target.files[0];\r\n        if (file) {\r\n            var reader = new FileReader();\r\n            reader.file = file;\r\n            reader.onload = function({ target: { result } }) {\r\n                const { Buffer, Replay } = window;\r\n\r\n                let replay = window.replay = Replay.default().read(Buffer.from(result), { parseGhost: true });\r\n                if (!isMounted) return;\r\n\r\n                const removeData = (obj) => {\r\n                    Object.keys(obj).forEach((key) => {\r\n                        if (key === '_view') {\r\n                            delete obj._view;\r\n                        } else if (typeof obj[key] === 'object') {\r\n                            removeData(obj[key]);\r\n                        }\r\n                    });\r\n                };\r\n\r\n                removeData(replay);\r\n                setReplay(replay);\r\n            };\r\n            reader.readAsArrayBuffer(file);\r\n        }\r\n    }, [isMounted, setReplay]);\r\n\r\n    React.useEffect(() => {\r\n        document.querySelector('#fileinput').addEventListener('change', handleChange);\r\n        return () => document.querySelector('#fileinput').removeEventListener('change', handleChange);\r\n    }, [handleChange]);\r\n\r\n    return (\r\n        <ViewContent>\r\n            <Paper>\r\n                <input type=\"file\" id=\"fileinput\" />\r\n                <ReactJson\r\n                    name=\"replay\"\r\n                    style={{ fontSize: '14px' }}\r\n                    src={replay}\r\n                    theme=\"solarized\"\r\n                    displayDataTypes={false}\r\n                    displayObjectSize={false}\r\n                    enableClipboard={false}\r\n                />\r\n            </Paper>\r\n        </ViewContent>\r\n    );\r\n};\r\n\r\nexport default NotFoundView;\r\n","import React from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SimpleTitle from '../components/SimpleTitle';\r\nimport ViewContent from './ViewContent';\r\n\r\nconst NotFoundView = () => {\r\n    return (\r\n        <ViewContent>\r\n            <Paper>\r\n                <SimpleTitle data=\"Page not found :(\" />\r\n            </Paper>\r\n        </ViewContent>\r\n    );\r\n};\r\n\r\nexport default NotFoundView;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { red, orange } from '@material-ui/core/colors';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport AppBar from './components/AppBar';\r\nimport AboutView from './views/AboutView';\r\nimport GameView from './views/GameView';\r\nimport ReplayView from './views/ReplayView';\r\nimport NotFoundView from './views/NotFoundView';\r\nimport AppState, { AppReducer } from './AppState';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    views: {\r\n        marginTop: theme.spacing(5),\r\n    },\r\n}));\r\n\r\nconst App = () => {\r\n    const [state, dispatch] = React.useReducer(...AppReducer);\r\n\r\n    const theme = React.useMemo(() => {\r\n        return createMuiTheme({\r\n            palette: {\r\n                primary: {\r\n                    light: red[300],\r\n                    main: red[500],\r\n                    dark: red[700],\r\n                },\r\n                secondary: {\r\n                    light: orange[300],\r\n                    main: orange[500],\r\n                    dark: orange[700],\r\n                },\r\n                error: {\r\n                    main: red.A400,\r\n                },\r\n                type: state.darkMode.enabled ? 'dark' : 'light',\r\n            },\r\n        });\r\n    }, [state.darkMode.enabled]);\r\n\r\n    const classes = useStyles();\r\n    const context = React.useMemo(() => ({ state, dispatch }), [state, dispatch]);\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <CssBaseline />\r\n            <AppState.Provider value={context}>\r\n                <BrowserRouter basename={process.env.NODE_ENV === 'production' ? '/tmx-records' : '/'}>\r\n                    <AppBar />\r\n                    <div className={classes.views}>\r\n                        <Switch>\r\n                            <Redirect exact from=\"/\" to=\"/tm2\" />\r\n                            <Redirect exact from=\"/tmo\" to=\"/original\" />\r\n                            <Redirect exact from=\"/tmn\" to=\"/nations\" />\r\n                            <Redirect exact from=\"/tms\" to=\"/sunrise\" />\r\n                            <Redirect exact from=\"/tmnf\" to=\"/tmnforever\" />\r\n                            <Route exact path=\"/(nations|original|sunrise|tm2|tmnforever|united)/:date?\" component={GameView} />\r\n                            <Route exact path=\"/about\" component={AboutView} />\r\n                            <Route exact path=\"/replay\" component={ReplayView} />\r\n                            <Route component={NotFoundView} />\r\n                        </Switch>\r\n                    </div>\r\n                </BrowserRouter>\r\n            </AppState.Provider>\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n        // [::1] is the IPv6 localhost address.\r\n        window.location.hostname === '[::1]' ||\r\n        // 127.0.0.1/8 is considered localhost for IPv4.\r\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then((registration) => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then((response) => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then((registration) => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('No internet connection found. App is running in offline mode.');\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './utils/serviceWorker';\r\n\r\nReactDOM.render(<App />, document.querySelector('#root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}