{"version":3,"sources":["Hooks.js","components/AppBar.js","views/ViewContent.js","AppState.js","views/AboutView.js","utils/stableSort.js","utils/tmx.js","components/RankingsTable.js","utils/tools.js","components/RecordsTable.js","utils/srcom.js","components/RecordsTableSrcom.js","components/SimpleTitle.js","components/RecordsChart.js","components/FloatingActionButton.js","Api.js","views/GameView.js","views/ReplayView.js","views/NotFoundView.js","components/RankingsTableTrackmania.js","components/RecordsTableTrackmania.js","views/TrackmaniaView.js","App.js","utils/serviceWorker.js","index.js"],"names":["useIsMounted","ref","React","useRef","useEffect","current","useStyles","makeStyles","theme","root","paddingBottom","spacing","list","width","menuButton","marginLeft","marginRight","drawer","flexShrink","appBar","zIndex","flex","active","color","palette","primary","main","pageLinks","title","link","inDrawer","default","withRouter","location","useState","open","setOpen","page","useMemo","find","x","pathname","startsWith","document","host","showDrawer","state","classes","className","List","ListItem","button","key","component","RouterLink","to","ListItemText","Divider","filter","map","item","index","undefined","position","Toolbar","Hidden","lgUp","IconButton","onClick","Typography","variant","Link","underline","implementation","SwipeableDrawer","onClose","onOpen","tabIndex","role","onKeyDown","mdDown","Drawer","ViewContent","children","Grid","container","xs","md","lg","initialState","darkMode","this","enabled","localStorage","getItem","setItem","toString","AppReducer","action","toggle","Error","createContext","aboutBox","padding","branches","repo","branch","noWrap","whiteSpace","MinTableCell","props","TableCell","size","Padding","style","paddingTop","getUpdate","now","moment","utc","updateIn","endOf","add","isBefore","duration","from","hours","get","minutes","seconds","g","value","clockTimer","AboutView","isMounted","useContext","AppState","dispatch","gitHub","setGitHub","nextUpdate","setNextUpdate","setInterval","clearInterval","anyErrors","err","console","error","Promise","all","fetch","then","results","res","json","sha","author","commit","message","date","catch","Paper","length","CircularProgress","progress","overflowX","TableHead","TableRow","TableBody","idx","align","rel","href","Tooltip","html_url","login","name","FormGroup","row","FormControlLabel","control","Switch","checked","onChange","label","cmpOptions","numeric","stableSort","array","order","orderBy","desc","a","b","aa","getPropFast","localeCompare","cmp","el","sort","stableSortSort","thenBy","bb","obj","path","indexOf","split","s","reduce","acc","val","protocol","game","includes","trackUrl","id","imageUrl","replayUrl","userUrl","rows","sortable","id2","RankingsTableHead","onRequestSort","sortDirection","placement","enterDelay","TableSortLabel","direction","prop1","prop2","event","_","defaultState","rowsPerPage","minifiedStyle","RecordsTable","data","setState","newOrderBy","newThenBy","slice","user","tmx","target","wrs","formatScore","score","type","csec","tsec","Math","floor","sec","min","msec","hourScale","scaleLinear","domain","range","getDateDifferenceColor","passedHours","diff","minuteScale","RecordsTableHead","property","stats","useLiveDuration","tmxGame","wr","track","isFirst","rowSpan","records","replay","disabled","fontSize","fromNow","format","unit","totalTime","humanize","colSpan","totalPoints","level","category","RecordsTableSrcomHead","RecordsTableSrcom","srcom","media","gutterBottom","withTheme","labels","series","isDarkTheme","options","legend","show","responsive","breakpoint","chart","height","plotOptions","pie","donut","total","fab","margin","top","right","bottom","left","jumpToTop","smoothScroll","y","documentElement","scrollTop","window","requestAnimationFrame","scrollTo","FloatingActionButton","timeout","onScroll","useCallback","clearTimeout","setTimeout","scrollX","scrollY","addEventListener","removeEventListener","useScroll","Zoom","in","Fab","baseApi","log","url","status","ok","padTop","match","setGame","gameName","setGameName","tab","setTab","params","Api","request","tracks","campaign","t","push","leaderboard","forEach","entry","r","Table","LinearProgress","SimpleTitle","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","Box","p","justify","alignContent","RankingsTable","Alert","elevation","defaultReplay","info","magic","version","settings","classId","headerSize","headerChunks","chunkOffset","ReplayView","useTheme","setReplay","parseGhost","setParseGhost","errorMessage","setErrorMessage","handleClose","reason","parseReplay","file","reader","FileReader","onload","result","Buffer","Replay","read","ghost","restData","removeData","Object","keys","_view","readAsArrayBuffer","handleChange","ev","files","removeDragData","dataTransfer","items","clear","clearData","querySelector","Button","disableElevation","click","display","Checkbox","onDrop","preventDefault","i","kind","getAsFile","onDragOver","src","displayDataTypes","displayObjectSize","enableClipboard","Snackbar","autoHideDuration","severity","NotFoundView","rowsOficial","rowsTOTD","official","rowsOfficial","linkToExchange","isOfficial","ubisoftNadeo","encodeURIComponent","linkToLeaderboard","trackName","season","replace","toLowerCase","parseInt","useRowStyles","borderBottom","RecordsHistoryRow","pastMinutes","delta","setAfter","zone","join","RecordsRow","history","onClickHistory","monthDay","isLast","Collapse","unmountOnExit","aria-label","historyWr","setHistory","calculateSetAfter","releasedAt","wrDate","diffSeconds","setAfterHours","setAfterMinutes","setBeforeHours","setBeforeMinutes","year","month","set","hour","minute","second","historyWrDate","countryLeaderboard","views","marginTop","App","useReducer","createMuiTheme","light","red","dark","secondary","orange","A400","context","ThemeProvider","CssBaseline","Provider","basename","exact","TrackmaniaView","GameView","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7349e332.chunk.js","sourcesContent":["import React from 'react';\n\nexport const useIsMounted = () => {\n    const ref = React.useRef(false);\n    React.useEffect(() => {\n        ref.current = true;\n        return () => (ref.current = false);\n    }, []);\n    return ref;\n};\n\nexport const useRenders = (debug) => {\n    const ref = React.useRef(0);\n    console.log(debug + ' renders: ', ++ref.current);\n};\n\nexport const useTitle = (title) => {\n    React.useEffect(() => {\n        document.title = title + ' - ' + document.location.host;\n    }, [title]);\n};\n\nexport const useScroll = () => {\n    const timeout = React.useRef(undefined);\n    const [state, setState] = React.useState({ x: 0, y: 0 });\n\n    const onScroll = React.useCallback(() => {\n        clearTimeout(timeout.current);\n        timeout.current = setTimeout(() => {\n            setState({ x: window.scrollX, y: window.scrollY });\n        }, 100);\n    }, [setState]);\n\n    React.useEffect(() => {\n        window.addEventListener('scroll', onScroll);\n        return () => {\n            clearTimeout(timeout.current);\n            window.removeEventListener('scroll', onScroll);\n        };\n    }, [onScroll]);\n\n    return state;\n};\n","import React from 'react';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport MaterialAppBar from '@material-ui/core/AppBar';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useTitle } from '../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingBottom: theme.spacing(8),\n    },\n    list: {\n        width: theme.spacing(25),\n    },\n    menuButton: {\n        marginLeft: -12,\n        marginRight: 20,\n    },\n    drawer: {\n        width: 240,\n        flexShrink: 0,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    flex: {\n        flex: 1,\n    },\n    active: {\n        color: theme.palette.primary.main,\n    },\n}));\n\nconst pageLinks = [\n    { title: '404 - Page Not Found', link: null, inDrawer: false },\n    { title: 'trackmania-records', link: '/', inDrawer: false },\n    { title: 'Trackmania', link: '/trackmania', inDrawer: true, default: true },\n    { title: 'Trackmania 2', link: '/tm2', inDrawer: true, default: true },\n    { title: 'Trackmania Wii', link: '/tmwii', inDrawer: true, default: true },\n    { title: 'Nations Forever', link: '/tmnforever', inDrawer: true },\n    { title: 'United', link: '/united', inDrawer: true },\n    { title: 'Nations ESWC', link: '/nations', inDrawer: true },\n    /* { title: 'Sunrise', link: '/sunrise', inDrawer: true },\n    { title: 'Original', link: '/original', inDrawer: true }, */\n    { title: 'Replay Inspection', link: '/replay', inDrawer: false },\n    { title: 'About', link: '/about', inDrawer: false },\n];\n\nconst AppBar = ({ location }) => {\n    const [open, setOpen] = React.useState(false);\n\n    const page = React.useMemo(\n        () =>\n            pageLinks.find(\n                (x) => x.link === location.pathname || (x.link !== null && location.pathname.startsWith(x.link + '/')),\n            ) || pageLinks[0],\n        [location],\n    );\n\n    useTitle(page.title);\n\n    const showDrawer = (state) => () => {\n        setOpen(state);\n    };\n\n    const classes = useStyles();\n\n    const list = (\n        <div className={classes.list}>\n            <List>\n                <ListItem button key={0} component={RouterLink} to={'/'}>\n                    <ListItemText primary=\"Trackmania Records\" />\n                </ListItem>\n            </List>\n            <Divider />\n            <List>\n                {pageLinks\n                    .filter((x) => x.inDrawer)\n                    .map((item, index) => (\n                        <ListItem\n                            button\n                            key={index}\n                            component={RouterLink}\n                            to={item.link}\n                            className={item.title === page.title ? classes.active : undefined}\n                        >\n                            <ListItemText primary={item.title} />\n                        </ListItem>\n                    ))}\n                <Divider />\n                <List>\n                    <ListItem button key={0} component={RouterLink} to={'/replay'}>\n                        <ListItemText primary={'Replay Inspection'} />\n                    </ListItem>\n                    <ListItem button key={1} component={RouterLink} to={'/about'}>\n                        <ListItemText primary={'About'} />\n                    </ListItem>\n                </List>\n            </List>\n        </div>\n    );\n\n    return (\n        <div className={classes.root}>\n            <MaterialAppBar className={classes.appBar} position=\"fixed\">\n                <Toolbar>\n                    <Hidden lgUp>\n                        <IconButton className={classes.menuButton} onClick={showDrawer(true)} color=\"inherit\">\n                            <MenuIcon />\n                        </IconButton>\n                    </Hidden>\n                    <Typography variant=\"h6\" color=\"inherit\">\n                        <Link component={RouterLink} to=\"/\" color=\"inherit\" underline=\"none\">\n                            Trackmania Records\n                        </Link>\n                    </Typography>\n                </Toolbar>\n            </MaterialAppBar>\n            <Hidden lgUp implementation=\"css\">\n                <SwipeableDrawer open={open} onClose={showDrawer(false)} onOpen={showDrawer(true)} variant=\"temporary\">\n                    <div tabIndex={0} role=\"button\" onClick={showDrawer(false)} onKeyDown={showDrawer(false)}>\n                        {list}\n                    </div>\n                </SwipeableDrawer>\n            </Hidden>\n            <Hidden mdDown implementation=\"css\">\n                <Drawer variant=\"permanent\">\n                    <div tabIndex={0} role=\"button\">\n                        {list}\n                    </div>\n                </Drawer>\n            </Hidden>\n        </div>\n    );\n};\n\nexport default withRouter(AppBar);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\nconst ViewContent = ({ children }) => (\n    <Grid container>\n        <Grid item xs={false} md={1} lg={2} />\n        <Grid item xs={12} md={10} lg={9}>\n            {children}\n        </Grid>\n    </Grid>\n);\n\nexport default ViewContent;\n","import React from 'react';\n\nclass DarkMode {\n    constructor() {\n        this.enabled = localStorage.getItem('dark_mode') === 'true';\n    }\n    toggle() {\n        this.enabled = !this.enabled;\n        localStorage.setItem('dark_mode', this.enabled.toString());\n        return this;\n    }\n}\n\nconst initialState = {\n    darkMode: new DarkMode(),\n};\n\nexport const AppReducer = [\n    (state, { action }) => {\n        switch (action) {\n            case 'toggleDarkMode':\n                return {\n                    ...state,\n                    darkMode: state.darkMode.toggle(),\n                };\n            default:\n                throw new Error('Unknown action type.');\n        }\n    },\n    initialState,\n];\n\nexport default React.createContext(initialState);\n","import React from 'react';\nimport moment from 'moment';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Switch from '@material-ui/core/Switch';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ViewContent from './ViewContent';\nimport AppState from '../AppState';\nimport { useIsMounted } from '../Hooks';\n\nconst useStyles = makeStyles((theme) => ({\n    aboutBox: {\n        padding: theme.spacing(3),\n    },\n}));\n\nconst branches = [\n    { repo: 'NeKzor/trackmania-records', branch: 'master' },\n    { repo: 'NeKzBot/tmx-records', branch: 'api' },\n    { repo: 'NeKzor/trackmania-records', branch: 'gh-pages' },\n];\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst MinTableCell = (props) => <TableCell size=\"small\" {...props} />;\nconst Padding = () => <div style={{ paddingTop: '50px' }} />;\n\nconst getUpdate = () => {\n    const now = moment.utc();\n    let updateIn = moment().utc().endOf('day').add(17, 'hours');\n\n    if (updateIn.isBefore(now)) {\n        updateIn = moment().utc().endOf('day').add(1, 'day').add(17, 'hours');\n    }\n\n    const duration = moment.duration({ from: now, to: updateIn });\n    const hours = duration.get('hours');\n    const minutes = duration.get('minutes');\n    const seconds = duration.get('seconds');\n\n    const g = (value) => (value === 1 ? '' : 's');\n    return `${hours} hour${g(hours)}, ${minutes} minute${g(minutes)}, ${seconds} second${g(seconds)}`;\n};\n\nlet clockTimer = null;\n\nconst AboutView = () => {\n    const isMounted = useIsMounted();\n\n    const {\n        state: { darkMode },\n        dispatch,\n    } = React.useContext(AppState);\n\n    const [gitHub, setGitHub] = React.useState([]);\n    const [nextUpdate, setNextUpdate] = React.useState(getUpdate());\n\n    React.useEffect(() => {\n        clockTimer = setInterval(() => {\n            setNextUpdate(getUpdate());\n        }, 1000);\n\n        return () => clearInterval(clockTimer);\n    }, []);\n\n    const toggleDarkMode = () => {\n        dispatch({ action: 'toggleDarkMode' });\n    };\n\n    React.useEffect(() => {\n        const anyErrors = (err) => {\n            console.error(err);\n            if (isMounted.current) {\n                setGitHub(undefined);\n            }\n        };\n\n        Promise.all(branches.map(({ repo, branch }) => fetch(`https://api.github.com/repos/${repo}/commits/${branch}`)))\n            .then((results) => {\n                Promise.all(results.map((res) => res.json()))\n                    .then((branches) => {\n                        if (isMounted.current) {\n                            setGitHub(\n                                branches.map((branch) => ({\n                                    sha: branch.sha,\n                                    author: branch.author ? branch.author : branch.commit.author,\n                                    message: branch.commit.message,\n                                    date: branch.commit.author.date,\n                                })),\n                            );\n                        }\n                    })\n                    .catch(anyErrors);\n            })\n            .catch(anyErrors);\n    }, [isMounted]);\n\n    const classes = useStyles();\n\n    return (\n        <ViewContent>\n            <Paper className={classes.aboutBox}>\n                <Typography component=\"h2\" variant=\"h5\">\n                    Trackmania Campaign Records & Statistics\n                </Typography>\n                <br />\n                <Typography variant=\"body1\">\n                    This web app mirrors campaign world records of many Trackmania games. Data is mainly provided by\n                    Trackmania Exchange but also by speedrun.com.\n                </Typography>\n                <Typography variant=\"body1\">\n                    Additionally it ranks players based on how many world records they hold and how long their records\n                    have been lasting.\n                </Typography>\n\n                <Padding />\n\n                <Typography variant=\"h5\">Next Update</Typography>\n                <br />\n                {nextUpdate}\n\n                <Padding />\n\n                <Typography variant=\"h5\">Changelog</Typography>\n                <br />\n\n                {gitHub === undefined ? (\n                    <Typography variant=\"body1\">Unable to fetch status from GitHub.</Typography>\n                ) : gitHub.length === 0 ? (\n                    <CircularProgress className={classes.progress} />\n                ) : (\n                    <div style={{ overflowX: 'auto' }}>\n                        <Table size=\"small\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Branch</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Date</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Author</Typography>\n                                    </TableCell>\n                                    <TableCell padding=\"default\">\n                                        <Typography variant=\"body1\">Commit</Typography>\n                                    </TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {gitHub.map((commit, idx) => {\n                                    const { repo, branch } = branches[idx];\n                                    return (\n                                        <TableRow tabIndex={-1} key={idx} style={noWrap}>\n                                            <MinTableCell align=\"left\">\n                                                <Link\n                                                    color=\"inherit\"\n                                                    rel=\"noopener\"\n                                                    href={`https://github.com/${repo}/tree/${branch}`}\n                                                >\n                                                    {branch}\n                                                </Link>\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\" style={noWrap}>\n                                                <Tooltip title={moment(commit.date).toString()}>\n                                                    <span>{moment(commit.date).from()}</span>\n                                                </Tooltip>\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\">\n                                                {commit.author.html_url ? (\n                                                    <Link color=\"inherit\" rel=\"noopener\" href={commit.author.html_url}>\n                                                        {commit.author.login}\n                                                    </Link>\n                                                ) : (\n                                                    commit.author.name || 'n/a'\n                                                )}\n                                            </MinTableCell>\n                                            <MinTableCell align=\"left\" style={noWrap}>\n                                                <Tooltip title={commit.message}>\n                                                    <Link\n                                                        color=\"inherit\"\n                                                        rel=\"noopener\"\n                                                        href={`https://github.com/${repo}/commit/${commit.sha}`}\n                                                    >\n                                                        {commit.sha}\n                                                    </Link>\n                                                </Tooltip>\n                                            </MinTableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            </TableBody>\n                        </Table>\n                    </div>\n                )}\n\n                <Padding />\n\n                <Typography variant=\"h5\">Theme Settings</Typography>\n                <br />\n                <FormGroup row>\n                    <FormControlLabel\n                        control={<Switch checked={darkMode.enabled} onChange={toggleDarkMode} color=\"primary\" />}\n                        label=\"Dark Mode\"\n                    />\n                </FormGroup>\n\n                <Padding />\n\n                <Typography variant=\"h5\">Credits</Typography>\n                <br />\n                <Link rel=\"noopener\" href=\"http://www.tm-exchange.com\">\n                    tm-exchange.com\n                </Link>\n                <br />\n                <Link rel=\"noopener\" href=\"https://tm.mania-exchange.com\">\n                    tm.mania-exchange.com\n                </Link>\n                <br />\n                <Link rel=\"noopener\" href=\"https://www.speedrun.com/tmwii\">\n                    speedrun.com/tmwii\n                </Link>\n                <br />\n                <Link rel=\"noopener\" href=\"https://github.com/jonese1234/Trackmania-Leaderboard\">\n                    jonese1234/Trackmania-Leaderboard\n                </Link>\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default AboutView;\n","const cmpOptions = { numeric: true };\n\nexport const stableSort = (array, order, orderBy) => {\n    let desc = (a, b) => {\n        let aa = getPropFast(a, orderBy).toString();\n        let bb = getPropFast(b, orderBy).toString();\n        return bb.localeCompare(aa, undefined, cmpOptions);\n    };\n\n    let cmp = order === 'desc' ? (a, b) => desc(a, b) : (a, b) => -desc(a, b);\n\n    let sort = (a, b) => {\n        let order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    };\n\n    return array\n        .map((el, index) => [el, index])\n        .sort(sort)\n        .map((el) => el[0]);\n};\nexport const stableSortSort = (array, order, orderBy, thenBy) => {\n    if (orderBy === thenBy) {\n        return stableSort(array, order, orderBy);\n    }\n\n    let desc = (a, b) => {\n        let aa = getPropFast(a, orderBy).toString();\n        let bb = getPropFast(b, orderBy).toString();\n        let cmp = bb.localeCompare(aa, undefined, cmpOptions);\n        if (cmp !== 0) return cmp;\n        aa = getPropFast(a, thenBy).toString();\n        bb = getPropFast(b, thenBy).toString();\n        return bb.localeCompare(aa, undefined, cmpOptions);\n    };\n\n    let cmp = order === 'desc' ? (a, b) => desc(a, b) : (a, b) => -desc(a, b);\n\n    let sort = (a, b) => {\n        let order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    };\n\n    return array\n        .map((el, index) => [el, index])\n        .sort(sort)\n        .map((el) => el[0]);\n};\n\n// Util which returns the value of nested objects by string: getPropFast({ a: { b: 3 } }, 'a.b') === 3\nconst getPropFast = (obj, path) =>\n    path.indexOf('.') !== -1\n        ? path\n              .split('.')\n              .filter((s) => s)\n              .reduce((acc, val) => acc && acc[val], obj)\n        : obj[path];\n","const protocol = (game) => (['nations', 'sunrise', 'original'].includes(game) ? 'http' : 'https');\n\nexport default (game) =>\n    game === 'tm2'\n        ? {\n              trackUrl: (id) => `https://tm.mania-exchange.com/tracks/${id}`,\n              imageUrl: (id) => `https://tm.mania-exchange.com/tracks/screenshot/normal/${id}`,\n              replayUrl: (id) => `https://tm.mania-exchange.com/replays/download/${id}`,\n              userUrl: (id) => `https://tm.mania-exchange.com/user/profile/${id}`,\n          }\n        : game === 'tmwii'\n        ? {\n              trackUrl: (id) => `https://speedrun.com/tmwii/${id}`,\n              imageUrl: (id) => undefined,\n              replayUrl: (id) => undefined,\n              userUrl: (id) => `https://www.speedrun.com/user/${id}`,\n          }\n        : (() => ({\n              trackUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/main.aspx?action=trackshow&id=${id}`,\n              imageUrl: (id) =>\n                  `${protocol(game)}://${game}.tm-exchange.com/getclean.aspx?action=trackscreenscreens&id=${id}`,\n              replayUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/get.aspx?action=recordgbx&id=${id}`,\n              userUrl: (id) => `${protocol(game)}://${game}.tm-exchange.com/main.aspx?action=usershow&id=${id}`,\n          }))();\n","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { stableSortSort } from '../utils/stableSort';\nimport tmx from '../utils/tmx';\n\nconst rows = [\n    { id: 'user.name', sortable: false, label: 'Player', align: 'left' },\n    { id: 'wrs', id2: 'duration', sortable: true, label: 'World Records', align: 'left' },\n    { id: 'duration', id2: 'wrs', sortable: true, label: 'Total Duration', align: 'left' },\n];\n\nconst RankingsTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (prop1, prop2) => (event) => {\n        onRequestSort(event, prop1, prop2);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id, row.id2)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'desc',\n    orderBy: 'wrs',\n    thenBy: 'duration',\n    page: 0,\n    rowsPerPage: 50,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTable = ({ data, game }) => {\n    const [{ order, orderBy, thenBy, rowsPerPage, page }, setState] = React.useState(defaultState);\n\n    const handleRequestSort = (_, prop1, prop2) => {\n        const newOrderBy = prop1;\n        const newThenBy = prop2;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n            thenBy: newThenBy,\n        }));\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RankingsTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n                <TableBody>\n                    {stableSortSort(data, order, orderBy, thenBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row) => (\n                            <TableRow tabIndex={-1} key={row.user.id}>\n                                <MinTableCell align=\"left\">\n                                    <Link\n                                        style={noWrap}\n                                        color=\"inherit\"\n                                        href={tmx(game).userUrl(row.user.id)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {row.user.name}\n                                    </Link>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">{row.wrs}</MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    {row.duration} day{row.duration === 1 ? '' : 's'}\n                                </MinTableCell>\n                            </TableRow>\n                        ))}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import { scaleLinear } from 'd3-scale';\nimport moment from 'moment';\n\nexport function formatScore(score, game, type = undefined) {\n    if (score === undefined || score === null) {\n        return score;\n    }\n\n    if (type === 'Stunts') {\n        return score + ' pts.';\n    }\n\n    if (game !== 'tm2') {\n        score /= 10;\n\n        let csec = score % 100;\n        let tsec = Math.floor(score / 100);\n        let sec = tsec % 60;\n        let min = Math.floor(tsec / 60);\n\n        return (\n            (min > 0 ? min + ':' : '') + (sec < 10 && min > 0 ? '0' + sec : sec) + '.' + (csec < 10 ? '0' + csec : csec)\n        );\n    }\n\n    let msec = score % 1000;\n    let tsec = Math.floor(score / 1000);\n    let sec = tsec % 60;\n    let min = Math.floor(tsec / 60);\n\n    return (\n        (min > 0 ? min + ':' : '') +\n        (sec < 10 && min > 0 ? '0' + sec : sec) +\n        '.' +\n        (msec < 100 ? (msec < 10 ? '00' + msec : '0' + msec) : msec)\n    );\n}\n\n// credits: https://github.com/iVerb1/Portal2Boards/blob/master/public/js/date.js#L21\nconst hourScale = scaleLinear()\n    .domain([0, 24, 14 * 24, 2 * 30 * 24])\n    .range(['#2eb82e', '#258e25', '#cca300', '#e67300']);\n\nexport function getDateDifferenceColor(date) {\n    const passedHours = moment().diff(moment(date), 'hours');\n    return passedHours <= 2 * 30 * 24 ? hourScale(passedHours) : undefined;\n}\n\nconst minuteScale = scaleLinear()\n    .domain([0, 8 * 60, 16 * 60, 24 * 60])\n    .range(['#2eb82e', '#cca300', '#e67300', '#e63200']);\n\nexport function getDateTimeDifferenceColor(pastMinutes) {\n    return pastMinutes >= 0 && pastMinutes <= 24 * 60 ? minuteScale(pastMinutes) : undefined;\n}\n","import React from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { stableSort } from '../utils/stableSort';\nimport tmx from '../utils/tmx';\nimport { formatScore, getDateDifferenceColor } from '../utils/tools';\n\nconst rows = [\n    { id: 'track.name', sortable: true, label: 'Track', align: 'left' },\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\n    { id: 'date', sortable: true, label: 'Date', align: 'left' },\n    { id: 'duration', sortable: true, label: 'Duration', align: 'left' },\n];\n\nconst RecordsTableHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'asc',\n    orderBy: 'track.name',\n    page: 0,\n    rowsPerPage: 250,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTable = ({ data, game, stats, useLiveDuration }) => {\n    const [{ order, orderBy, rowsPerPage, page }, setState] = React.useState(defaultState);\n\n    const handleRequestSort = (_, property) => {\n        const newOrderBy = property;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n        }));\n    };\n\n    const tmxGame = tmx(game);\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RecordsTableHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n                <TableBody>\n                    {stableSort(data, order, orderBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((wr) => {\n                            const score = formatScore(wr.score, game, wr.track.type);\n\n                            return (\n                                <TableRow tabIndex={-1} key={`${wr.track.name}-${wr.user.id}`}>\n                                    {(wr.track.isFirst || orderBy !== 'track.name') && (\n                                        <MinTableCell\n                                            style={noWrap}\n                                            rowSpan={orderBy !== 'track.name' ? 1 : wr.track.records}\n                                            align=\"left\"\n                                        >\n                                            <Link\n                                                color=\"inherit\"\n                                                href={tmxGame.trackUrl(wr.track.id)}\n                                                rel=\"noreferrer\"\n                                                target=\"_blank\"\n                                            >\n                                                {wr.track.name}\n                                            </Link>\n                                        </MinTableCell>\n                                    )}\n                                    <MinTableCell align=\"left\">\n                                        <Tooltip title=\"Download Replay\" placement=\"bottom-end\" enterDelay={300}>\n                                            <Link\n                                                style={noWrap}\n                                                color=\"inherit\"\n                                                href={tmxGame.replayUrl(wr.replay)}\n                                                rel=\"noreferrer\"\n                                                target=\"_blank\"\n                                            >\n                                                {score}\n                                            </Link>\n                                        </Tooltip>\n                                        {game === 'tm2' && moment(wr.date).isBefore('2017-05-09') && (\n                                            <Tooltip\n                                                title=\"This run was done on an older game version.\"\n                                                placement=\"bottom-end\"\n                                                enterDelay={300}\n                                            >\n                                                <span>\n                                                    <IconButton size=\"small\" disabled>\n                                                        <WarningIcon fontSize=\"inherit\" />\n                                                    </IconButton>\n                                                </span>\n                                            </Tooltip>\n                                        )}\n                                    </MinTableCell>\n                                    <MinTableCell align=\"left\">\n                                        <Link\n                                            style={noWrap}\n                                            color=\"inherit\"\n                                            href={tmxGame.userUrl(wr.user.id)}\n                                            rel=\"noreferrer\"\n                                            target=\"_blank\"\n                                        >\n                                            {wr.user.name}\n                                        </Link>\n                                    </MinTableCell>\n                                    <MinTableCell align=\"left\">\n                                        <Tooltip\n                                            title={<Moment fromNow>{wr.date}</Moment>}\n                                            placement=\"bottom-end\"\n                                            enterDelay={300}\n                                        >\n                                            <Moment\n                                                style={{ color: getDateDifferenceColor(wr.date), ...noWrap }}\n                                                format=\"YYYY-MM-DD\"\n                                            >\n                                                {wr.date}\n                                            </Moment>\n                                        </Tooltip>\n                                    </MinTableCell>\n                                    <MinTableCell align=\"left\">\n                                        <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\n                                            {useLiveDuration ? (\n                                                <Moment style={noWrap} diff={wr.date} unit=\"days\"></Moment>\n                                            ) : (\n                                                <span>{wr.duration}</span>\n                                            )}\n                                        </Tooltip>\n                                    </MinTableCell>\n                                </TableRow>\n                            );\n                        })}\n                </TableBody>\n                <TableBody>\n                    {stats.totalTime > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">Total Time</MinTableCell>\n                            <MinTableCell>\n                                <Tooltip\n                                    title={moment.duration(stats.totalTime, 'ms').humanize()}\n                                    placement=\"bottom-end\"\n                                    enterDelay={300}\n                                >\n                                    <span>{formatScore(stats.totalTime, game)}</span>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell colSpan={3}></MinTableCell>\n                        </TableRow>\n                    )}\n                    {stats.totalPoints > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">Total Points</MinTableCell>\n                            <MinTableCell>\n                                <span>{formatScore(stats.totalPoints, game, 'Stunts')}</span>\n                            </MinTableCell>\n                            <MinTableCell colSpan={3}></MinTableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","export default {\n    trackUrl: (level, category) => `https://speedrun.com/tmwii/${level}#${category}`,\n    userUrl: (name) => `https://www.speedrun.com/user/${name}`,\n    runUrl: (id) => `https://www.speedrun.com/tmwii/run/${id}`,\n};\n","import React from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { stableSort } from '../utils/stableSort';\nimport srcom from '../utils/srcom';\nimport { formatScore, getDateDifferenceColor } from '../utils/tools';\n\nconst rows = [\n    { id: 'track.name', sortable: true, label: 'Track', align: 'left' },\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\n    { id: 'date', sortable: true, label: 'Date', align: 'left' },\n    { id: 'duration', sortable: true, label: 'Duration', align: 'left' },\n    { id: 'replay', sortable: false, label: 'Video', align: 'left' },\n];\n\nconst RecordsTableSrcomHead = ({ order, orderBy, onRequestSort }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'asc',\n    orderBy: 'track.name',\n    page: 0,\n    rowsPerPage: 250,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTableSrcom = ({ data, game, stats, useLiveDuration, category }) => {\n    const [{ order, orderBy, rowsPerPage, page }, setState] = React.useState(defaultState);\n\n    const handleRequestSort = (_, property) => {\n        const newOrderBy = property;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n        }));\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RecordsTableSrcomHead order={order} orderBy={orderBy} onRequestSort={handleRequestSort} />\n                <TableBody>\n                    {stableSort(data, order, orderBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((wr) => (\n                            <TableRow tabIndex={-1} key={`${wr.track.name}-${wr.user.id}`}>\n                                {(wr.track.isFirst || orderBy !== 'track.name') && (\n                                    <MinTableCell\n                                        style={noWrap}\n                                        rowSpan={orderBy !== 'track.name' ? 1 : wr.track.records}\n                                        align=\"left\"\n                                    >\n                                        <Link\n                                            color=\"inherit\"\n                                            href={srcom.trackUrl(wr.track.name, category)}\n                                            rel=\"noreferrer\"\n                                            target=\"_blank\"\n                                        >\n                                            {wr.track.name}\n                                        </Link>\n                                    </MinTableCell>\n                                )}\n                                <MinTableCell align=\"left\">\n                                    <Link\n                                        style={noWrap}\n                                        color=\"inherit\"\n                                        href={srcom.runUrl(wr.id)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {formatScore(wr.score, game)}\n                                    </Link>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Link\n                                        style={noWrap}\n                                        color=\"inherit\"\n                                        href={srcom.userUrl(wr.user.name)}\n                                        rel=\"noreferrer\"\n                                        target=\"_blank\"\n                                    >\n                                        {wr.user.name}\n                                    </Link>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Tooltip\n                                        title={<Moment fromNow>{wr.date}</Moment>}\n                                        placement=\"bottom-end\"\n                                        enterDelay={300}\n                                    >\n                                        <Moment\n                                            style={{ color: getDateDifferenceColor(wr.date), ...noWrap }}\n                                            format=\"YYYY-MM-DD\"\n                                        >\n                                            {wr.date}\n                                        </Moment>\n                                    </Tooltip>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\n                                        {useLiveDuration ? (\n                                            <Moment style={noWrap} diff={wr.date} unit=\"days\"></Moment>\n                                        ) : (\n                                            <span>{wr.duration}</span>\n                                        )}\n                                    </Tooltip>\n                                </MinTableCell>\n                                <MinTableCell align=\"left\">\n                                    <Tooltip title=\"Watch Run\" placement=\"bottom-end\" enterDelay={300}>\n                                        <IconButton size=\"small\" href={wr.media} target=\"_blank\">\n                                            <PlayArrowIcon fontSize=\"inherit\" />\n                                        </IconButton>\n                                    </Tooltip>\n                                </MinTableCell>\n                            </TableRow>\n                        ))}\n                </TableBody>\n                <TableBody>\n                    {stats.totalTime > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\">Total Time</MinTableCell>\n                            <MinTableCell>\n                                <Tooltip\n                                    title={moment.duration(stats.totalTime, 'ms').humanize()}\n                                    placement=\"bottom-end\"\n                                    enterDelay={300}\n                                >\n                                    <span>{formatScore(stats.totalTime, game)}</span>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell colSpan={4}></MinTableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTableSrcom;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nexport default ({ data, props }) => (\n    <Typography variant=\"h5\" gutterBottom style={{ padding: '50px 0px 50px 50px' }} {...props}>\n        {data}\n    </Typography>\n);\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { withTheme } from '@material-ui/styles';\n\nconst RecordsChart = ({ labels, series, title, theme }) => {\n    const isDarkTheme = theme.palette.type === 'dark';\n\n    return (\n        <Chart\n            options={{\n                labels,\n                legend: {\n                    show: false,\n                },\n                responsive: [\n                    {\n                        breakpoint: 380,\n                        options: {\n                            chart: {\n                                height: '300px',\n                            },\n                        },\n                    },\n                ],\n                plotOptions: {\n                    pie: {\n                        donut: {\n                            labels: {\n                                show: true,\n                                name: {\n                                    show: true,\n                                },\n                                value: {\n                                    show: true,\n                                    color: isDarkTheme ? 'white' : 'black',\n                                },\n                                total: {\n                                    show: true,\n                                    label: title,\n                                    color: isDarkTheme ? 'white' : 'black',\n                                },\n                            },\n                        },\n                    },\n                },\n            }}\n            series={series}\n            type=\"donut\"\n            height=\"400\"\n        />\n    );\n};\n\nexport default withTheme(RecordsChart);\n","import React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport Zoom from '@material-ui/core/Zoom';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { useScroll } from '../Hooks';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((_) => ({\n    fab: {\n        margin: 0,\n        top: 'auto',\n        right: 30,\n        bottom: 30,\n        left: 'auto',\n        position: 'fixed',\n    },\n}));\n\nconst jumpToTop = () => {\n    const smoothScroll = () => {\n        const y = document.documentElement.scrollTop;\n        if (y > 0) {\n            window.requestAnimationFrame(smoothScroll);\n            window.scrollTo(0, y - y / 5);\n        }\n    };\n    smoothScroll();\n};\n\nconst FloatingActionButton = () => {\n    const { y } = useScroll();\n    const classes = useStyles();\n\n    return (\n        <Zoom in={y !== 0} timeout={1000}>\n            <Fab title=\"Jump to top\" color=\"primary\" className={classes.fab} onClick={jumpToTop}>\n                <KeyboardArrowUpIcon />\n            </Fab>\n        </Zoom>\n    );\n};\n\nexport default FloatingActionButton;\n","class Api {\n    constructor() {\n        this.baseApi =\n            process.env.NODE_ENV === 'development'\n                ? 'http://localhost:8080'\n                : 'https://raw.githubusercontent.com/NeKzBot/tmx-records/api';\n    }\n    async request(game, date) {\n        let res = await fetch(`${this.baseApi}/${game}/${date || 'latest'}.json`);\n        console.log(`GET ${res.url} (${res.status})`);\n        return res.ok ? await res.json() : [];\n    }\n}\n\nexport default new Api();\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport moment from 'moment';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport RankingsTable from '../components/RankingsTable';\nimport RecordsTable from '../components/RecordsTable';\nimport RecordsTableSrcom from '../components/RecordsTableSrcom';\nimport SimpleTitle from '../components/SimpleTitle';\nimport RecordsChart from '../components/RecordsChart';\nimport { makeStyles } from '@material-ui/core';\nimport FloatingActionButton from '../components/FloatingActionButton';\nimport Api from '../Api';\nimport { useIsMounted } from '../Hooks';\nimport ViewContent from './ViewContent';\n\nconst useStyles = makeStyles((_) => ({\n    padTop: {\n        paddingTop: '70px',\n    },\n}));\n\nconst GameView = ({ match }) => {\n    const isMounted = useIsMounted();\n\n    const [game, setGame] = React.useState(undefined);\n    const [gameName, setGameName] = React.useState('tm2');\n    const [tab, setTab] = React.useState(0);\n\n    const page = match.params[0];\n    const date = match.params.date;\n    const useLiveDuration = date === undefined || date === 'latest';\n\n    React.useEffect(() => {\n        setTab(0);\n        setGame(undefined);\n    }, [page]);\n\n    React.useEffect(() => {\n        (async () => {\n            let game = await Api.request(page, date);\n\n            if (game[0] && game[0].tracks[0].wrs) {\n                for (let campaign of game) {\n                    if (campaign.stats.totalPoints === undefined) {\n                        campaign.stats.totalTime = campaign.tracks\n                            .filter((t) => t.type !== 'Stunts')\n                            .map((t) => t.wrs[0].score)\n                            .reduce((a, b) => a + b, 0);\n                        campaign.stats.totalPoints = campaign.tracks\n                            .filter((t) => t.type === 'Stunts')\n                            .map((t) => t.wrs[0].score)\n                            .reduce((a, b) => a + b, 0);\n                    }\n\n                    let rows = [];\n                    for (let track of campaign.tracks) {\n                        for (let wr of track.wrs) {\n                            let duration = useLiveDuration ? moment().diff(moment(wr.date), 'd') : wr.duration;\n                            rows.push({\n                                track: {\n                                    id: track.id,\n                                    name: track.name,\n                                    type: track.type,\n                                    isFirst: wr === track.wrs[0],\n                                    records: track.wrs.length,\n                                },\n                                ...wr,\n                                duration,\n                            });\n                        }\n                    }\n\n                    campaign.tracks = rows;\n\n                    if (useLiveDuration) {\n                        campaign.leaderboard.forEach((entry, idx) => {\n                            campaign.leaderboard[idx].duration = campaign.tracks\n                                .filter((r) => r.user.id === entry.user.id)\n                                .map((r) => r.duration)\n                                .reduce((a, b) => a + b, 0);\n                        });\n                    }\n                }\n            }\n\n            if (!isMounted.current) return;\n            setGameName(page);\n            setGame(game);\n        })();\n    }, [isMounted, page, date, useLiveDuration]);\n\n    const handleTab = (_, newValue) => {\n        setTab(newValue);\n    };\n\n    const Table = gameName === 'tmwii' ? RecordsTableSrcom : RecordsTable;\n\n    const classes = useStyles();\n\n    return (\n        <ViewContent>\n            <Paper>\n                {game === undefined ? (\n                    <LinearProgress />\n                ) : game.length === 0 ? (\n                    <SimpleTitle data=\"No data.\" />\n                ) : (\n                    <>\n                        {game.length > 1 && (\n                            <Tabs\n                                value={tab}\n                                onChange={handleTab}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                                variant=\"scrollable\"\n                                scrollButtons=\"auto\"\n                            >\n                                {game.map((campaign) => (\n                                    <Tab label={campaign.name} key={campaign.name} />\n                                ))}\n                            </Tabs>\n                        )}\n                        <Typography component=\"div\" role=\"tabpanel\">\n                            <Box p={3}>\n                                <Grid container direction=\"column\" justify=\"center\">\n                                    <Grid item xs={12}>\n                                        <Table\n                                            data={game[tab].tracks}\n                                            game={gameName}\n                                            stats={game[tab].stats}\n                                            useLiveDuration={useLiveDuration}\n                                            category={game[tab].name}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} className={classes.padTop}>\n                                        <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                                            <Grid item xs={12} md={6}>\n                                                <RankingsTable data={game[tab].leaderboard} game={page} />\n                                            </Grid>\n                                            <Grid item xs={12} md={6} className={classes.padTop}>\n                                                <Grid container direction=\"column\" justify=\"center\">\n                                                    <Grid item xs={12}>\n                                                        <RecordsChart\n                                                            title=\"WRs\"\n                                                            labels={game[tab].leaderboard.map((row) => row.user.name)}\n                                                            series={game[tab].leaderboard.map((row) => row.wrs)}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} className={classes.padTop}>\n                                                        <RecordsChart\n                                                            title=\"Duration\"\n                                                            labels={game[tab].leaderboard.map((row) => row.user.name)}\n                                                            series={game[tab].leaderboard.map((row) => row.duration)}\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Box>\n                        </Typography>\n                    </>\n                )}\n            </Paper>\n            <FloatingActionButton />\n        </ViewContent>\n    );\n};\n\nexport default withRouter(GameView);\n","import React from 'react';\nimport ReactJson from 'react-json-view';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport ViewContent from './ViewContent';\nimport { useIsMounted } from '../Hooks';\nimport { useTheme } from '@material-ui/core';\n\nconst Alert = (props) => {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n};\n\nconst defaultReplay = {\n    info: 'drag & drop replay here :)',\n    magic: 'GBX',\n    version: 6,\n    settings: 'BUCR',\n    classId: 50933760,\n    headerSize: 331,\n    headerChunks: 2,\n    chunkOffset: 348,\n};\n\nconst ReplayView = () => {\n    const isMounted = useIsMounted();\n    const theme = useTheme();\n\n    const [replay, setReplay] = React.useState(defaultReplay);\n    const [parseGhost, setParseGhost] = React.useState(true);\n    const [errorMessage, setErrorMessage] = React.useState(false);\n\n    const handleClose = (_, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setErrorMessage(false);\n    };\n\n    const handleParseGhost = (event) => {\n        setParseGhost(event.target.checked);\n    };\n\n    const parseReplay = React.useCallback(\n        (file) => {\n            if (!file) return;\n\n            const reader = new FileReader();\n            reader.onload = ({ target: { result } }) => {\n                try {\n                    if (!isMounted.current) return;\n                    setReplay(defaultReplay);\n                    setErrorMessage(false);\n\n                    const { Buffer, Replay } = window;\n\n                    const replay = (window.replay = Replay.default().read(Buffer.from(result), { parseGhost }));\n                    if (!isMounted.current) return;\n\n                    const removeData = (obj) => {\n                        Object.keys(obj).forEach((key) => {\n                            if (key === '_view') {\n                                delete obj._view;\n                            } else if (typeof obj[key] === 'object') {\n                                removeData(obj[key]);\n                            }\n                        });\n                    };\n\n                    if (replay.ghost) {\n                        delete replay.ghost.restData;\n                    }\n\n                    removeData(replay);\n                    setReplay(replay);\n                } catch (err) {\n                    if (isMounted.current) {\n                        setErrorMessage(err.message);\n                    }\n                }\n            };\n            reader.readAsArrayBuffer(file);\n        },\n        [isMounted, parseGhost, setReplay, setErrorMessage],\n    );\n\n    const handleChange = React.useCallback((ev) => parseReplay(ev.target.files[0]), [parseReplay]);\n\n    const dropHandler = (ev) => {\n        ev.preventDefault();\n\n        const files = [];\n\n        if (ev.dataTransfer.items) {\n            for (let i = 0; i < ev.dataTransfer.items.length; ++i) {\n                if (ev.dataTransfer.items[i].kind === 'file') {\n                    files.push(ev.dataTransfer.items[i].getAsFile());\n                }\n            }\n        }\n\n        parseReplay(files[0]);\n        removeDragData(ev);\n    };\n\n    const dragOverHandler = (ev) => {\n        ev.preventDefault();\n    };\n\n    const removeDragData = (ev) => {\n        if (ev.dataTransfer.items) {\n            ev.dataTransfer.items.clear();\n        } else {\n            ev.dataTransfer.clearData();\n        }\n    };\n\n    React.useEffect(() => {\n        document.querySelector('#file').addEventListener('change', handleChange);\n        return () => document.querySelector('#file').removeEventListener('change', handleChange);\n    }, [handleChange]);\n\n    const openFile = () => {\n        document.querySelector('#file').click();\n    };\n\n    return (\n        <ViewContent>\n            <Paper style={{ padding: '20px 20px 20px 20px' }}>\n                <Button variant=\"contained\" color=\"primary\" disableElevation onClick={openFile}>\n                    Open file\n                </Button>\n                <input type=\"file\" id=\"file\" style={{ display: 'none' }} />\n                <FormControlLabel\n                    style={{ marginLeft: '20px' }}\n                    control={<Checkbox color=\"primary\" checked={parseGhost} onChange={handleParseGhost} />}\n                    label=\"Parse Ghost\"\n                />\n                <div style={{ paddingBottom: '20px' }}></div>\n                <div onDrop={dropHandler} onDragOver={dragOverHandler}>\n                    <ReactJson\n                        name=\"replay\"\n                        style={{ fontSize: '14px' }}\n                        src={replay}\n                        theme={theme.palette.type === 'light' ? 'bright:inverted' : 'solarized'}\n                        displayDataTypes={false}\n                        displayObjectSize={false}\n                        enableClipboard={false}\n                    />\n                </div>\n                <Snackbar open={errorMessage !== false} autoHideDuration={6000} onClose={handleClose}>\n                    <Alert onClose={handleClose} severity=\"error\">\n                        {errorMessage}\n                    </Alert>\n                </Snackbar>\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default ReplayView;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport SimpleTitle from '../components/SimpleTitle';\nimport ViewContent from './ViewContent';\n\nconst NotFoundView = () => {\n    return (\n        <ViewContent>\n            <Paper>\n                <SimpleTitle data=\"Page not found :(\" />\n            </Paper>\n        </ViewContent>\n    );\n};\n\nexport default NotFoundView;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { stableSortSort } from '../utils/stableSort';\n\nconst rowsOficial = [\n    { id: 'user.name', sortable: false, label: 'Player', align: 'left' },\n    { id: 'wrs', id2: 'duration', sortable: true, label: 'World Records', align: 'left' },\n    { id: 'duration', id2: 'wrs', sortable: true, label: 'Total Duration', align: 'left' },\n];\n\nconst rowsTOTD = [\n    { id: 'user.name', sortable: false, label: 'Player', align: 'left' },\n    { id: 'wrs', sortable: true, label: 'World Records', align: 'left' },\n];\n\nconst RankingsTableHead = ({ order, orderBy, onRequestSort, official }) => {\n    const createSortHandler = (prop1, prop2) => (event) => {\n        onRequestSort(event, prop1, prop2);\n    };\n\n    const rows = official ? rowsOficial : rowsTOTD;\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row) => (\n                    <TableCell\n                        key={row.id}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id, row.id2)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'desc',\n    orderBy: 'wrs',\n    thenBy: 'duration',\n    page: 0,\n    rowsPerPage: 50,\n};\n\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst RecordsTable = ({ data, official }) => {\n    const [{ order, orderBy, thenBy, rowsPerPage, page }, setState] = React.useState(defaultState);\n\n    const handleRequestSort = (_, prop1, prop2) => {\n        const newOrderBy = prop1;\n        const newThenBy = prop2;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n            thenBy: newThenBy,\n        }));\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RankingsTableHead\n                    order={order}\n                    orderBy={orderBy}\n                    onRequestSort={handleRequestSort}\n                    official={official}\n                />\n                <TableBody>\n                    {stableSortSort(data, order, orderBy, thenBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row) => (\n                            <TableRow tabIndex={-1} key={row.user.name}>\n                                <MinTableCell align=\"left\">{row.user.name}</MinTableCell>\n                                <MinTableCell align=\"left\">{row.wrs}</MinTableCell>\n                                {official && (\n                                    <MinTableCell align=\"left\">{row.duration}</MinTableCell>\n                                )}\n                            </TableRow>\n                        ))}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import React from 'react';\nimport Moment from 'react-moment';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport HistoryIcon from '@material-ui/icons/History';\nimport { stableSort } from '../utils/stableSort';\nimport { formatScore, getDateDifferenceColor, getDateTimeDifferenceColor } from '../utils/tools';\n\nconst rowsOfficial = [\n    { id: 'track.name', sortable: true, label: 'Track', align: 'left' },\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\n    { id: 'user.zone', sortable: true, label: 'Zone', align: 'left' },\n    { id: 'date', sortable: true, label: 'Date', align: 'left' },\n    { id: 'duration', sortable: true, label: 'Duration', align: 'left' },\n];\n\nconst rowsTOTD = [\n    { id: 'track.monthDay', sortable: true, label: 'Day', align: 'left' },\n    { id: 'track.name', sortable: true, label: 'Track', align: 'left' },\n    { id: 'score', sortable: true, label: 'Record', align: 'left' },\n    { id: 'user.name', sortable: true, label: 'Player', align: 'left' },\n    { id: 'user.zone', sortable: true, label: 'Zone', align: 'left' },\n];\n\nconst RecordsTableHead = ({ order, orderBy, onRequestSort, official }) => {\n    const createSortHandler = (property) => (event) => {\n        onRequestSort(event, property);\n    };\n\n    const rows = official ? rowsOfficial : rowsTOTD;\n\n    return (\n        <TableHead>\n            <TableRow>\n                {rows.map((row, idx) => (\n                    <TableCell\n                        key={idx}\n                        align={row.align}\n                        padding=\"default\"\n                        sortDirection={orderBy === row.id ? order : false}\n                        colSpan={idx === rows.length - 1 ? 2 : 1}\n                    >\n                        {row.sortable === true && (\n                            <Tooltip title={'Sort by ' + row.label} placement=\"bottom-start\" enterDelay={300}>\n                                <TableSortLabel\n                                    active={orderBy === row.id}\n                                    direction={order}\n                                    onClick={createSortHandler(row.id)}\n                                >\n                                    {row.label}\n                                </TableSortLabel>\n                            </Tooltip>\n                        )}\n                        {row.sortable === false && row.label}\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n};\n\nconst useStyles = makeStyles((_) => ({\n    root: {\n        overflowX: 'auto',\n    },\n}));\n\nconst defaultState = {\n    order: 'asc',\n    orderBy: 'track.name',\n    page: 0,\n    rowsPerPage: 250,\n};\n\nconst noWrap = { whiteSpace: 'nowrap' };\nconst minifiedStyle = { padding: '7px 0px 7px 16px' };\nconst MinTableCell = (props) => <TableCell style={minifiedStyle} {...props} />;\n\nconst linkToExchange = (track, isOfficial) => {\n    const ubisoftNadeo = isOfficial ? '&authorId=21' : '';\n    return `https://trackmania.exchange/mapsearch2?trackname=${encodeURIComponent(track.name)}${ubisoftNadeo}`;\n};\n\nconst linkToLeaderboard = (trackName) => {\n    const [season, track] = trackName.name.split(' - ');\n    return `https://nekz.me/trackmania/#/${season.replace(' ', '').toLowerCase()}/${parseInt(track, 10)}`;\n};\n\nconst useRowStyles = makeStyles({\n    root: {\n        '& > *': {\n            borderBottom: 'unset',\n        },\n    },\n});\n\nconst RecordsHistoryRow = ({ wr, official }) => {\n    const score = formatScore(wr.score, 'tm2');\n    const delta = wr.delta !== 0 ? formatScore(wr.delta, 'tm2') : null;\n\n    return (\n        <TableRow tabIndex={-1}>\n            {official && (\n                <MinTableCell align=\"left\">\n                    <Tooltip title={<Moment fromNow>{wr.date}</Moment>} placement=\"bottom-end\" enterDelay={300}>\n                        <Moment style={{ color: getDateDifferenceColor(wr.date), ...noWrap }} format=\"YYYY-MM-DD\">\n                            {wr.date}\n                        </Moment>\n                    </Tooltip>\n                </MinTableCell>\n            )}\n            {!official && (\n                <MinTableCell align=\"left\">\n                    <Tooltip title={wr.setAfter} placement=\"bottom-end\" enterDelay={300}>\n                        <Moment style={{ color: getDateTimeDifferenceColor(wr.pastMinutes), ...noWrap }} format=\"HH:mm\">\n                            {wr.date}\n                        </Moment>\n                    </Tooltip>\n                </MinTableCell>\n            )}\n            <MinTableCell align=\"left\">{score}</MinTableCell>\n            <MinTableCell align=\"left\">{delta ? '-' + delta : ''}</MinTableCell>\n            <MinTableCell align=\"left\">{wr.user.name}</MinTableCell>\n            <MinTableCell align=\"left\">\n                <Tooltip title={wr.user.zone.map((zone) => zone.name).join(' | ')} placement=\"bottom\" enterDelay={300}>\n                    <span>{wr.user.zone[2].name}</span>\n                </Tooltip>\n            </MinTableCell>\n            <MinTableCell align=\"left\">\n                <Tooltip title=\"Download Ghost\" placement=\"bottom\" enterDelay={300}>\n                    <IconButton\n                        size=\"small\"\n                        style={noWrap}\n                        color=\"inherit\"\n                        href={'https://prod.trackmania.core.nadeo.online/storageObjects/' + wr.replay}\n                        rel=\"noreferrer\"\n                        target=\"_blank\"\n                    >\n                        <SaveAltIcon fontSize=\"inherit\" />\n                    </IconButton>\n                </Tooltip>\n            </MinTableCell>\n        </TableRow>\n    );\n};\n\nconst RecordsRow = ({ wr, official, orderBy, useLiveDuration, history, onClickHistory }) => {\n    const score = formatScore(wr.score, 'tm2');\n    const delta = wr.delta !== 0 ? formatScore(wr.delta, 'tm2') : null;\n\n    const classes = useRowStyles();\n\n    const open = history === wr.track.id;\n\n    return (\n        <>\n            <TableRow tabIndex={-1}>\n                {!official && (wr.track.isFirst || orderBy !== 'track.monthDay') && (\n                    <MinTableCell align=\"left\" rowSpan={orderBy !== 'track.monthDay' ? 1 : wr.track.records}>\n                        {wr.track.monthDay}\n                    </MinTableCell>\n                )}\n                {(wr.track.isFirst || orderBy !== 'track.monthDay') && (\n                    <MinTableCell\n                        style={noWrap}\n                        rowSpan={orderBy !== 'track.monthDay' ? 1 : wr.track.records}\n                        align=\"left\"\n                    >\n                        <Link\n                            color=\"inherit\"\n                            href={linkToExchange(wr.track, official)}\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                        >\n                            {wr.track.name}\n                        </Link>\n                    </MinTableCell>\n                )}\n                <MinTableCell align=\"left\">\n                    {official && delta && (\n                        <Tooltip title={<span>-{delta} to former record</span>} placement=\"bottom\" enterDelay={300}>\n                            <Link\n                                color=\"inherit\"\n                                href={linkToLeaderboard(wr.track, official)}\n                                rel=\"noreferrer\"\n                                target=\"_blank\"\n                            >\n                                <span>{score}</span>\n                            </Link>\n                        </Tooltip>\n                    )}\n                    {official && !delta && (\n                        <Link\n                            color=\"inherit\"\n                            href={linkToLeaderboard(wr.track, official)}\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                        >\n                            <span>{score}</span>\n                        </Link>\n                    )}\n                    {!official && delta && (\n                        <Tooltip title={<span>-{delta} to former record</span>} placement=\"bottom\" enterDelay={300}>\n                            <span>{score}</span>\n                        </Tooltip>\n                    )}\n                    {!official && !delta && <span>{score}</span>}\n                </MinTableCell>\n                <MinTableCell align=\"left\">{wr.user.name}</MinTableCell>\n                <MinTableCell align=\"left\">\n                    <Tooltip\n                        title={wr.user.zone.map((zone) => zone.name).join(' | ')}\n                        placement=\"bottom\"\n                        enterDelay={300}\n                    >\n                        <span>{wr.user.zone[2].name}</span>\n                    </Tooltip>\n                </MinTableCell>\n                {official && (\n                    <>\n                        <MinTableCell align=\"left\">\n                            <Tooltip title={<Moment fromNow>{wr.date}</Moment>} placement=\"bottom-end\" enterDelay={300}>\n                                <Moment\n                                    style={{ color: getDateDifferenceColor(wr.date), ...noWrap }}\n                                    format=\"YYYY-MM-DD\"\n                                >\n                                    {wr.date}\n                                </Moment>\n                            </Tooltip>\n                        </MinTableCell>\n                        <MinTableCell align=\"left\">\n                            <Tooltip title=\"in days\" placement=\"bottom-end\" enterDelay={300}>\n                                {useLiveDuration ? (\n                                    <Moment style={noWrap} diff={wr.date} unit=\"days\"></Moment>\n                                ) : (\n                                    <span>{wr.duration}</span>\n                                )}\n                            </Tooltip>\n                        </MinTableCell>\n                    </>\n                )}\n                <MinTableCell align=\"left\">\n                    <Tooltip title=\"Download Ghost\" placement=\"bottom\" enterDelay={300}>\n                        <IconButton\n                            size=\"small\"\n                            style={noWrap}\n                            color=\"inherit\"\n                            href={'https://prod.trackmania.core.nadeo.online/storageObjects/' + wr.replay}\n                            rel=\"noreferrer\"\n                            target=\"_blank\"\n                        >\n                            <SaveAltIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    </Tooltip>\n                    {wr.track.isLast && wr.track.history && (\n                        <IconButton color=\"inherit\" size=\"small\" style={noWrap} onClick={() => onClickHistory(wr.track.id)}>\n                            <HistoryIcon fontSize=\"inherit\" />\n                        </IconButton>\n                    )}\n                </MinTableCell>\n            </TableRow>\n            {wr.track.isLast && wr.track.history && (\n                <TableRow  className={classes.root}>\n                    <MinTableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={7}>\n                        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                            <Box margin={1}>\n                                <Typography variant=\"h6\" gutterBottom component=\"div\">\n                                    History\n                                </Typography>\n                                <Table size=\"small\" aria-label=\"purchases\">\n                                    <TableHead>\n                                        <TableRow>\n                                            <MinTableCell>{official ? 'Date' : 'Time'}</MinTableCell>\n                                            <MinTableCell>Record</MinTableCell>\n                                            <MinTableCell>Timesave</MinTableCell>\n                                            <MinTableCell>Player</MinTableCell>\n                                            <MinTableCell colSpan={2}>Zone</MinTableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {wr.track.history.map((historyWr, idx) => {\n                                            return (\n                                                <RecordsHistoryRow\n                                                    wr={historyWr}\n                                                    official={official}\n                                                    key={idx}\n                                                />\n                                            );\n                                        })}\n                                    </TableBody>\n                                </Table>\n                            </Box>\n                        </Collapse>\n                    </MinTableCell>\n                </TableRow>\n            )}\n        </>\n    );\n};\n\nconst RecordsTable = ({ data, stats, official, useLiveDuration }) => {\n    const [{ order, rowsPerPage, page, ...state }, setState] = React.useState(defaultState);\n    const [history, setHistory] = React.useState(null);\n\n    let { orderBy } = state;\n    orderBy = official && orderBy === 'track.monthDay' ? 'track.name' : orderBy;\n\n    const handleRequestSort = (_, property) => {\n        const newOrderBy = property;\n        setState((s) => ({\n            ...s,\n            order: s.orderBy === newOrderBy && s.order === 'desc' ? 'asc' : 'desc',\n            orderBy: newOrderBy,\n        }));\n    };\n\n    React.useEffect(() => {\n        setState((s) => ({ ...s, orderBy: official ? 'track.name' : 'track.monthDay' }));\n    }, [data, official]);\n\n    const onClickHistory = React.useCallback((id) => {\n        if (history !== id) {\n            setHistory(id);\n        } else {\n            setHistory(null);\n        }\n    }, [history, setHistory]);\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Table size=\"small\">\n                <RecordsTableHead\n                    order={order}\n                    orderBy={orderBy}\n                    onRequestSort={handleRequestSort}\n                    official={official}\n                />\n                <TableBody>\n                    {stableSort(data, order, orderBy)\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((wr, idx) => {\n                            return (\n                                <RecordsRow\n                                    wr={wr}\n                                    official={official}\n                                    orderBy={orderBy}\n                                    useLiveDuration={useLiveDuration}\n                                    history={history}\n                                    onClickHistory={onClickHistory}\n                                    key={idx}\n                                />\n                            );\n                        })}\n                </TableBody>\n                <TableBody>\n                    {stats.totalTime > 0 && (\n                        <TableRow>\n                            <MinTableCell align=\"right\" colSpan={official ? 1 : 2}>\n                                Total Time\n                            </MinTableCell>\n                            <MinTableCell>\n                                <Tooltip\n                                    title={moment.duration(stats.totalTime, 'ms').humanize()}\n                                    placement=\"bottom-end\"\n                                    enterDelay={300}\n                                >\n                                    <span>{formatScore(stats.totalTime, 'tm2')}</span>\n                                </Tooltip>\n                            </MinTableCell>\n                            <MinTableCell colSpan={official ? 5 : 3}></MinTableCell>\n                        </TableRow>\n                    )}\n                </TableBody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RecordsTable;\n","import React from 'react';\nimport { withRouter } from 'react-router';\nimport moment from 'moment';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Paper from '@material-ui/core/Paper';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport RankingsTable from '../components/RankingsTableTrackmania';\nimport RecordsTable from '../components/RecordsTableTrackmania';\nimport RecordsChart from '../components/RecordsChart';\nimport { makeStyles } from '@material-ui/core';\nimport FloatingActionButton from '../components/FloatingActionButton';\nimport Api from '../Api';\nimport { useIsMounted } from '../Hooks';\nimport ViewContent from './ViewContent';\nimport SimpleTitle from '../components/SimpleTitle';\n//import OverallTable from '../components/OverallTableTrackmania';\n\nconst useStyles = makeStyles((_) => ({\n    padTop: {\n        paddingTop: '70px',\n    },\n}));\n\nconst s = (value) => (value === 1 ? '' : 's');\n\nconst calculateSetAfter = (releasedAt, wrDate) => {\n    const diffSeconds = wrDate.diff(releasedAt, 'seconds');\n    const setAfterHours = wrDate.diff(releasedAt, 'hours');\n    if (diffSeconds > 0) {\n        const setAfterMinutes = wrDate.diff(releasedAt, 'minutes') - setAfterHours * 60;\n        return `set after ${setAfterHours} hour${s(setAfterHours)} and ${setAfterMinutes} minute${s(setAfterMinutes)}`;\n    } else {\n        const setBeforeHours = -setAfterHours;\n        const setBeforeMinutes = -wrDate.diff(releasedAt, 'minutes') - setBeforeHours * 60;\n        return `set before ${setBeforeHours} hour${s(setBeforeHours)} and ${setBeforeMinutes} minute${s(\n            setBeforeMinutes,\n        )}`;\n    }\n};\n\nconst GameView = ({ match }) => {\n    const isMounted = useIsMounted();\n\n    const [game, setGame] = React.useState(undefined);\n    const [tab, setTab] = React.useState(0);\n\n    const page = match.params[0];\n    const date = match.params.date;\n    const useLiveDuration = date === undefined || date === 'latest';\n\n    React.useEffect(() => {\n        setTab(0);\n        setGame(undefined);\n    }, [page]);\n\n    React.useEffect(() => {\n        (async () => {\n            const game = await Api.request('trackmania', date);\n\n            if (game[0] && game[0].tracks[0].wrs) {\n                for (let campaign of game) {\n                    if (campaign.stats.totalPoints === undefined) {\n                        campaign.stats.totalTime = campaign.tracks\n                            .map((t) => t.wrs[0].score)\n                            .reduce((a, b) => a + b, 0);\n                    }\n\n                    const rows = [];\n                    for (let track of campaign.tracks) {\n                        for (let wr of track.wrs) {\n                            const wrDate = moment(wr.date);\n                            const duration = useLiveDuration ? moment().diff(wrDate, 'd') : wr.duration;\n                            const releasedAt = !campaign.isOfficial\n                                ? moment([campaign.year, campaign.month]).utc().set({\n                                      date: track.monthDay,\n                                      hour: 17,\n                                      minute: 0,\n                                      second: 0,\n                                  })\n                                : undefined;\n\n                            const setAfter = !campaign.isOfficial ? calculateSetAfter(releasedAt, wrDate) : undefined;\n\n                            const isLast = wr === track.wrs[track.wrs.length - 1];\n                            const history = isLast && (track.history || []).length > 1 ? track.history : undefined;\n\n                            if (history && !campaign.isOfficial) {\n                                history.forEach((historyWr) => {\n                                    const historyWrDate = moment(historyWr.date);\n                                    historyWr.setAfter = calculateSetAfter(releasedAt, historyWrDate);\n                                    historyWr.pastMinutes = historyWrDate.diff(releasedAt, 'minutes');\n                                });\n                            }\n\n                            rows.push({\n                                track: {\n                                    id: track.id,\n                                    name: track.name.replace(/(\\$[0-9a-fA-F]{3}|\\$[WNOITSGZBEMwnoitsgzbem]{1})/g, ''),\n                                    monthDay: track.monthDay,\n                                    isFirst: wr === track.wrs[0],\n                                    isLast,\n                                    records: track.wrs.length,\n                                    history,\n                                },\n                                ...wr,\n                                duration,\n                                setAfter,\n                            });\n                        }\n                    }\n\n                    campaign.tracks = rows;\n\n                    if (useLiveDuration) {\n                        campaign.leaderboard.forEach((entry, idx) => {\n                            campaign.leaderboard[idx].duration = campaign.tracks\n                                .filter((r) => r.user.id === entry.user.id)\n                                .map((r) => r.duration)\n                                .reduce((a, b) => a + b, 0);\n                        });\n                    }\n                }\n            }\n\n            if (!isMounted.current) return;\n            setGame(game);\n        })();\n    }, [isMounted, page, date, useLiveDuration]);\n\n    const handleTab = (_, newValue) => {\n        setTab(newValue);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <ViewContent>\n            <Paper>\n                {game === undefined ? (\n                    <LinearProgress />\n                ) : game.length === 0 ? (\n                    <SimpleTitle data=\"No data.\" />\n                ) : (\n                    <>\n                        {game.length > 1 && (\n                            <Tabs\n                                value={tab}\n                                onChange={handleTab}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                                variant=\"scrollable\"\n                                scrollButtons=\"auto\"\n                            >\n                                {game.map((campaign) => (\n                                    <Tab label={campaign.name} key={campaign.name} />\n                                ))}\n                            </Tabs>\n                        )}\n                        <Typography component=\"div\" role=\"tabpanel\">\n                            <Box p={3}>\n                                <Grid container direction=\"column\" justify=\"center\">\n                                    <Grid item xs={12}>\n                                        <RecordsTable\n                                            data={game[tab].tracks}\n                                            stats={game[tab].stats}\n                                            official={game[tab].isOfficial}\n                                            useLiveDuration={useLiveDuration}\n                                        />\n                                    </Grid>\n                                    <Grid item xs={12} className={classes.padTop}>\n                                        <Grid container direction=\"row\" justify=\"center\" alignContent=\"center\">\n                                            <Grid item xs={12} md={6}>\n                                                <RankingsTable\n                                                    data={game[tab].leaderboard}\n                                                    official={game[tab].isOfficial}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={12} md={6} className={classes.padTop}>\n                                                <Grid container direction=\"column\" justify=\"center\">\n                                                    <Grid item xs={12}>\n                                                        <RecordsChart\n                                                            title=\"WRs\"\n                                                            labels={game[tab].leaderboard.map((row) => row.user.name)}\n                                                            series={game[tab].leaderboard.map((row) => row.wrs)}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} className={classes.padTop}>\n                                                        <RecordsChart\n                                                            title=\"WRs by Zone\"\n                                                            labels={game[tab].countryLeaderboard.map(\n                                                                (row) => row.zone[2].name,\n                                                            )}\n                                                            series={game[tab].countryLeaderboard.map((row) => row.wrs)}\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                            {/* <Grid item xs={12} md={6} className={classes.padTop}>\n                                                <Typography variant=\"subtitle1\" component=\"h2\" gutterBottom>\n                                                    Overall Rankings\n                                                </Typography>\n                                                <br></br>\n                                                <OverallTable data={[]} />\n                                            </Grid>\n                                            <Grid item xs={12} md={6}></Grid> */}\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Box>\n                        </Typography>\n                    </>\n                )}\n            </Paper>\n            <FloatingActionButton />\n        </ViewContent>\n    );\n};\n\nexport default withRouter(GameView);\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { red, orange } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport AppBar from './components/AppBar';\nimport AboutView from './views/AboutView';\nimport GameView from './views/GameView';\nimport ReplayView from './views/ReplayView';\nimport NotFoundView from './views/NotFoundView';\nimport AppState, { AppReducer } from './AppState';\nimport TrackmaniaView from './views/TrackmaniaView';\n\nconst useStyles = makeStyles((theme) => ({\n    views: {\n        marginTop: theme.spacing(5),\n    },\n}));\n\nconst App = () => {\n    const [state, dispatch] = React.useReducer(...AppReducer);\n\n    const theme = React.useMemo(() => {\n        return createMuiTheme({\n            palette: {\n                primary: {\n                    light: red[300],\n                    main: red[500],\n                    dark: red[700],\n                },\n                secondary: {\n                    light: orange[300],\n                    main: orange[500],\n                    dark: orange[700],\n                },\n                error: {\n                    main: red.A400,\n                },\n                type: state.darkMode.enabled ? 'dark' : 'light',\n            },\n        });\n    }, [state.darkMode.enabled]);\n\n    const classes = useStyles();\n    const context = React.useMemo(() => ({ state, dispatch }), [state, dispatch]);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <AppState.Provider value={context}>\n                <BrowserRouter basename={process.env.NODE_ENV === 'production' ? '/trackmania-records' : '/'}>\n                    <AppBar />\n                    <div className={classes.views}>\n                        <Switch>\n                            <Redirect exact from=\"/\" to=\"/trackmania\" />\n                            <Redirect exact from=\"/tm\" to=\"/trackmania\" />\n                            <Redirect exact from=\"/wii\" to=\"/tmwii\" />\n                            <Redirect exact from=\"/tmo\" to=\"/original\" />\n                            <Redirect exact from=\"/tmn\" to=\"/nations\" />\n                            <Redirect exact from=\"/tms\" to=\"/sunrise\" />\n                            <Redirect exact from=\"/tmnf\" to=\"/tmnforever\" />\n                            <Route exact path=\"/trackmania/:date?\" component={TrackmaniaView} />\n                            <Route\n                                exact\n                                path=\"/(nations|original|sunrise|tm2|tmnforever|tmwii|united)/:date?\"\n                                component={GameView}\n                            />\n                            <Route exact path=\"/about\" component={AboutView} />\n                            <Route exact path=\"/replay\" component={ReplayView} />\n                            <Route component={NotFoundView} />\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </AppState.Provider>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './utils/serviceWorker';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}